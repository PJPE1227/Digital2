

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 01 23:45:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0008                     _PORTD	set	8
   446     0006                     _PORTB	set	6
   447     001E                     _ADRESH	set	30
   448     000B                     _INTCONbits	set	11
   449     000C                     _PIR1bits	set	12
   450     001F                     _ADCON0bits	set	31
   451     0013                     _SSPBUF	set	19
   452     0014                     _SSPCON	set	20
   453     0066                     _ADIF	set	102
   454     0063                     _SSPIF	set	99
   455     0096                     _IOCBbits	set	150
   456     0095                     _WPUBbits	set	149
   457     0081                     _OPTION_REGbits	set	129
   458     0085                     _TRISAbits	set	133
   459     0088                     _TRISD	set	136
   460     008C                     _PIE1bits	set	140
   461     009F                     _ADCON1bits	set	159
   462     0086                     _TRISB	set	134
   463     0089                     _TRISE	set	137
   464     0085                     _TRISA	set	133
   465     0094                     _SSPSTATbits	set	148
   466     0094                     _SSPSTAT	set	148
   467     043B                     _TRISC3	set	1083
   468     043D                     _TRISC5	set	1085
   469     0189                     _ANSELH	set	393
   470     0188                     _ANSEL	set	392
   471                           
   472                           	psect	cinit
   473     000F                     start_initialization:	
   474                           ; #config settings
   475                           
   476     000F                     __initialization:
   477                           
   478                           ; Clear objects allocated to COMMON
   479     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   480     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   481     0011                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484     0011                     __end_of__initialization:
   485     0011  0183               	clrf	3
   486     0012  120A  118A  29C0   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMMON
   489     0076                     __pbssCOMMON:
   490     0076                     _potValue:
   491     0076                     	ds	2
   492                           
   493                           	psect	cstackCOMMON
   494     0070                     __pcstackCOMMON:
   495     0070                     ?_setup:
   496     0070                     ?_spiWrite:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ??_spiWrite:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_isr:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_adc_read:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_main:	
   509                           ; 2 bytes @ 0x0
   510                           
   511     0070                     spiWrite@dat:	
   512                           ; 2 bytes @ 0x0
   513                           
   514                           
   515                           ; 1 bytes @ 0x0
   516     0070                     	ds	2
   517     0072                     ??_adc_read:
   518                           
   519                           ; 1 bytes @ 0x2
   520     0072                     	ds	2
   521     0074                     ??_isr:
   522                           
   523                           ; 1 bytes @ 0x4
   524     0074                     	ds	2
   525     0076                     ??_setup:
   526     0076                     ??_spiInit:	
   527                           ; 1 bytes @ 0x6
   528                           
   529                           
   530                           	psect	cstackBANK0
   531     0020                     __pcstackBANK0:	
   532                           ; 1 bytes @ 0x6
   533                           
   534     0020                     ?_spiInit:
   535     0020                     ?_adc_init:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0020                     spiInit@sDataSample:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0020                     adc_init@channel:	
   542                           ; 1 bytes @ 0x0
   543                           
   544                           
   545                           ; 2 bytes @ 0x0
   546     0020                     	ds	1
   547     0021                     spiInit@sClockIdle:
   548                           
   549                           ; 1 bytes @ 0x1
   550     0021                     	ds	1
   551     0022                     ??_adc_init:
   552     0022                     spiInit@sTransmitEdge:	
   553                           ; 1 bytes @ 0x2
   554                           
   555                           
   556                           ; 1 bytes @ 0x2
   557     0022                     	ds	1
   558     0023                     spiInit@sType:
   559                           
   560                           ; 1 bytes @ 0x3
   561     0023                     	ds	1
   562     0024                     ??_main:
   563                           
   564                           ; 1 bytes @ 0x4
   565     0024                     	ds	2
   566                           
   567                           	psect	maintext
   568     01C0                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 53 in file "Dig2Lab3_Puppet00.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  2  140[None  ] int 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       2       0       0       0
   591 ;;      Totals:         0       2       0       0       0
   592 ;;Total ram usage:        2 bytes
   593 ;; Hardware stack levels required when called: 4
   594 ;; This function calls:
   595 ;;		_setup
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     01C0                     _main:	
   602                           ;psect for function _main
   603                           
   604     01C0                     l1279:	
   605                           ;incstack = 0
   606                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   607                           
   608                           
   609                           ;Dig2Lab3_Puppet00.c: 54:     setup();
   610     01C0  120A  118A  2151  120A  118A  	fcall	_setup
   611     01C5                     l1281:
   612                           
   613                           ;Dig2Lab3_Puppet00.c: 56:         if(ADCON0bits.GO == 0){
   614     01C5  1283               	bcf	3,5	;RP0=0, select bank0
   615     01C6  1303               	bcf	3,6	;RP1=0, select bank0
   616     01C7  189F               	btfsc	31,1	;volatile
   617     01C8  29CA               	goto	u111
   618     01C9  29CB               	goto	u110
   619     01CA                     u111:
   620     01CA  29C5               	goto	l1281
   621     01CB                     u110:
   622     01CB                     l1283:
   623                           
   624                           ;Dig2Lab3_Puppet00.c: 57:             _delay((unsigned long)((10)*(8000000/4000.0)));
   625     01CB  301A               	movlw	26
   626     01CC  1283               	bcf	3,5	;RP0=0, select bank0
   627     01CD  1303               	bcf	3,6	;RP1=0, select bank0
   628     01CE  00A5               	movwf	??_main+1
   629     01CF  30F7               	movlw	247
   630     01D0  00A4               	movwf	??_main
   631     01D1                     u127:
   632     01D1  0BA4               	decfsz	??_main,f
   633     01D2  29D1               	goto	u127
   634     01D3  0BA5               	decfsz	??_main+1,f
   635     01D4  29D1               	goto	u127
   636     01D5  29D6               	nop2
   637     01D6                     l1285:
   638                           
   639                           ;Dig2Lab3_Puppet00.c: 58:             ADCON0bits.GO = 1;
   640     01D6  1283               	bcf	3,5	;RP0=0, select bank0
   641     01D7  1303               	bcf	3,6	;RP1=0, select bank0
   642     01D8  149F               	bsf	31,1	;volatile
   643     01D9  29C5               	goto	l1281
   644     01DA  120A  118A  280C   	ljmp	start
   645     01DD                     __end_of_main:
   646                           
   647                           	psect	text1
   648     0151                     __ptext1:	
   649 ;; *************** function _setup *****************
   650 ;; Defined at:
   651 ;;		line 63 in file "Dig2Lab3_Puppet00.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 3
   672 ;; This function calls:
   673 ;;		_adc_init
   674 ;;		_spiInit
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     0151                     _setup:	
   681                           ;psect for function _setup
   682                           
   683     0151                     l1263:	
   684                           ;incstack = 0
   685                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;Dig2Lab3_Puppet00.c: 64:     ANSEL = 0;
   689     0151  1683               	bsf	3,5	;RP0=1, select bank3
   690     0152  1703               	bsf	3,6	;RP1=1, select bank3
   691     0153  0188               	clrf	8	;volatile
   692                           
   693                           ;Dig2Lab3_Puppet00.c: 65:     ANSELH = 0;
   694     0154  0189               	clrf	9	;volatile
   695                           
   696                           ;Dig2Lab3_Puppet00.c: 67:     TRISB = 0;
   697     0155  1683               	bsf	3,5	;RP0=1, select bank1
   698     0156  1303               	bcf	3,6	;RP1=0, select bank1
   699     0157  0186               	clrf	6	;volatile
   700                           
   701                           ;Dig2Lab3_Puppet00.c: 68:     TRISD = 0;
   702     0158  0188               	clrf	8	;volatile
   703                           
   704                           ;Dig2Lab3_Puppet00.c: 70:     PORTB = 0;
   705     0159  1283               	bcf	3,5	;RP0=0, select bank0
   706     015A  1303               	bcf	3,6	;RP1=0, select bank0
   707     015B  0186               	clrf	6	;volatile
   708                           
   709                           ;Dig2Lab3_Puppet00.c: 71:     PORTD = 0;
   710     015C  0188               	clrf	8	;volatile
   711     015D                     l1265:
   712                           
   713                           ;Dig2Lab3_Puppet00.c: 73:     INTCONbits.GIE = 1;
   714     015D  178B               	bsf	11,7	;volatile
   715     015E                     l1267:
   716                           
   717                           ;Dig2Lab3_Puppet00.c: 74:     INTCONbits.PEIE = 1;
   718     015E  170B               	bsf	11,6	;volatile
   719     015F                     l1269:
   720                           
   721                           ;Dig2Lab3_Puppet00.c: 75:     PIR1bits.SSPIF = 0;
   722     015F  118C               	bcf	12,3	;volatile
   723     0160                     l1271:
   724                           
   725                           ;Dig2Lab3_Puppet00.c: 76:     PIE1bits.SSPIE = 1;
   726     0160  1683               	bsf	3,5	;RP0=1, select bank1
   727     0161  1303               	bcf	3,6	;RP1=0, select bank1
   728     0162  158C               	bsf	12,3	;volatile
   729     0163                     l1273:
   730                           
   731                           ;Dig2Lab3_Puppet00.c: 77:     TRISAbits.TRISA5 = 1;
   732     0163  1685               	bsf	5,5	;volatile
   733     0164                     l1275:
   734                           
   735                           ;Dig2Lab3_Puppet00.c: 78:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
   736     0164  1283               	bcf	3,5	;RP0=0, select bank0
   737     0165  1303               	bcf	3,6	;RP1=0, select bank0
   738     0166  01A0               	clrf	spiInit@sDataSample
   739     0167  01A1               	clrf	spiInit@sClockIdle
   740     0168  01A2               	clrf	spiInit@sTransmitEdge
   741     0169  3024               	movlw	36
   742     016A  120A  118A  21A2  120A  118A  	fcall	_spiInit
   743     016F                     l1277:
   744                           
   745                           ;Dig2Lab3_Puppet00.c: 79:     adc_init(0);
   746     016F  3000               	movlw	0
   747     0170  1283               	bcf	3,5	;RP0=0, select bank0
   748     0171  1303               	bcf	3,6	;RP1=0, select bank0
   749     0172  00A0               	movwf	adc_init@channel
   750     0173  00A1               	movwf	adc_init@channel+1
   751     0174  120A  118A  2015  120A  118A  	fcall	_adc_init
   752     0179                     l148:
   753     0179  0008               	return
   754     017A                     __end_of_setup:
   755                           
   756                           	psect	text2
   757     01A2                     __ptext2:	
   758 ;; *************** function _spiInit *****************
   759 ;; Defined at:
   760 ;;		line 3 in file "SPI.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  sType           1    wreg     enum E1292
   763 ;;  sDataSample     1    0[BANK0 ] enum E1300
   764 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   765 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  sType           1    3[BANK0 ] enum E1292
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       3       0       0       0
   778 ;;      Locals:         0       1       0       0       0
   779 ;;      Temps:          0       0       0       0       0
   780 ;;      Totals:         0       4       0       0       0
   781 ;;Total ram usage:        4 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 2
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_setup
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     01A2                     _spiInit:	
   792                           ;psect for function _spiInit
   793                           
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   797                           ;spiInit@sType stored from wreg
   798     01A2  1283               	bcf	3,5	;RP0=0, select bank0
   799     01A3  1303               	bcf	3,6	;RP1=0, select bank0
   800     01A4  00A3               	movwf	spiInit@sType
   801     01A5                     l1171:
   802                           
   803                           ;SPI.c: 3: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 4: {;SPI.c: 5:     TRISC5 = 0;
   804     01A5  1683               	bsf	3,5	;RP0=1, select bank1
   805     01A6  1303               	bcf	3,6	;RP1=0, select bank1
   806     01A7  1287               	bcf	7,5	;volatile
   807                           
   808                           ;SPI.c: 6:     if(sType & 0b00000100)
   809     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   810     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   811     01AA  1D23               	btfss	spiInit@sType,2
   812     01AB  29AD               	goto	u101
   813     01AC  29AE               	goto	u100
   814     01AD                     u101:
   815     01AD  29B4               	goto	l1177
   816     01AE                     u100:
   817     01AE                     l1173:
   818                           
   819                           ;SPI.c: 7:     {;SPI.c: 8:         SSPSTAT = sTransmitEdge;
   820     01AE  0822               	movf	spiInit@sTransmitEdge,w
   821     01AF  1683               	bsf	3,5	;RP0=1, select bank1
   822     01B0  1303               	bcf	3,6	;RP1=0, select bank1
   823     01B1  0094               	movwf	20	;volatile
   824     01B2                     l1175:
   825                           
   826                           ;SPI.c: 9:         TRISC3 = 1;
   827     01B2  1587               	bsf	7,3	;volatile
   828                           
   829                           ;SPI.c: 10:     }
   830     01B3  29BA               	goto	l16
   831     01B4                     l1177:
   832                           
   833                           ;SPI.c: 12:     {;SPI.c: 13:         SSPSTAT = sDataSample | sTransmitEdge;
   834     01B4  0820               	movf	spiInit@sDataSample,w
   835     01B5  0422               	iorwf	spiInit@sTransmitEdge,w
   836     01B6  1683               	bsf	3,5	;RP0=1, select bank1
   837     01B7  1303               	bcf	3,6	;RP1=0, select bank1
   838     01B8  0094               	movwf	20	;volatile
   839     01B9                     l1179:
   840                           
   841                           ;SPI.c: 14:         TRISC3 = 0;
   842     01B9  1187               	bcf	7,3	;volatile
   843     01BA                     l16:	
   844                           ;SPI.c: 15:     }
   845                           
   846                           
   847                           ;SPI.c: 17:     SSPCON = sType | sClockIdle;
   848     01BA  1283               	bcf	3,5	;RP0=0, select bank0
   849     01BB  1303               	bcf	3,6	;RP1=0, select bank0
   850     01BC  0823               	movf	spiInit@sType,w
   851     01BD  0421               	iorwf	spiInit@sClockIdle,w
   852     01BE  0094               	movwf	20	;volatile
   853     01BF                     l17:
   854     01BF  0008               	return
   855     01C0                     __end_of_spiInit:
   856                           
   857                           	psect	text3
   858     0015                     __ptext3:	
   859 ;; *************** function _adc_init *****************
   860 ;; Defined at:
   861 ;;		line 4 in file "adcInterrupt.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  channel         2    0[BANK0 ] int 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       2       0       0       0
   876 ;;      Locals:         0       0       0       0       0
   877 ;;      Temps:          0       1       0       0       0
   878 ;;      Totals:         0       3       0       0       0
   879 ;;Total ram usage:        3 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 2
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_setup
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     0015                     _adc_init:	
   890                           ;psect for function _adc_init
   891                           
   892     0015                     l1181:	
   893                           ;incstack = 0
   894                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
   895                           
   896                           
   897                           ;adcInterrupt.c: 6:     switch(channel){
   898     0015  2902               	goto	l1241
   899     0016                     l1183:
   900                           
   901                           ;adcInterrupt.c: 8:             ANSEL = ANSEL | 0b00000001;
   902     0016  1683               	bsf	3,5	;RP0=1, select bank3
   903     0017  1703               	bsf	3,6	;RP1=1, select bank3
   904     0018  0808               	movf	8,w	;volatile
   905     0019  3801               	iorlw	1
   906     001A  0088               	movwf	8	;volatile
   907                           
   908                           ;adcInterrupt.c: 9:             TRISA = TRISA | 0b00000001;
   909     001B  1683               	bsf	3,5	;RP0=1, select bank1
   910     001C  1303               	bcf	3,6	;RP1=0, select bank1
   911     001D  0805               	movf	5,w	;volatile
   912     001E  3801               	iorlw	1
   913     001F  0085               	movwf	5	;volatile
   914     0020                     l1185:
   915                           
   916                           ;adcInterrupt.c: 10:             ADCON0bits.CHS = 0b0000;
   917     0020  30C3               	movlw	-61
   918     0021  1283               	bcf	3,5	;RP0=0, select bank0
   919     0022  1303               	bcf	3,6	;RP1=0, select bank0
   920     0023  059F               	andwf	31,f	;volatile
   921                           
   922                           ;adcInterrupt.c: 11:             break;
   923     0024  2935               	goto	l63
   924     0025                     l1187:
   925                           
   926                           ;adcInterrupt.c: 13:             ANSEL = ANSEL | 0b00000010;
   927     0025  1683               	bsf	3,5	;RP0=1, select bank3
   928     0026  1703               	bsf	3,6	;RP1=1, select bank3
   929     0027  0808               	movf	8,w	;volatile
   930     0028  3802               	iorlw	2
   931     0029  0088               	movwf	8	;volatile
   932                           
   933                           ;adcInterrupt.c: 14:             TRISA = TRISA | 0b00000010;
   934     002A  1683               	bsf	3,5	;RP0=1, select bank1
   935     002B  1303               	bcf	3,6	;RP1=0, select bank1
   936     002C  0805               	movf	5,w	;volatile
   937     002D  3802               	iorlw	2
   938     002E  0085               	movwf	5	;volatile
   939     002F                     l1189:
   940                           
   941                           ;adcInterrupt.c: 15:             ADCON0bits.CHS = 0b0001;
   942     002F  1283               	bcf	3,5	;RP0=0, select bank0
   943     0030  1303               	bcf	3,6	;RP1=0, select bank0
   944     0031  081F               	movf	31,w	;volatile
   945     0032  39C3               	andlw	-61
   946     0033  3804               	iorlw	4
   947     0034  009F               	movwf	31	;volatile
   948                           
   949                           ;adcInterrupt.c: 16:             break;
   950     0035  2935               	goto	l63
   951     0036                     l1191:
   952                           
   953                           ;adcInterrupt.c: 18:             ANSEL = ANSEL | 0b00000100;
   954     0036  1683               	bsf	3,5	;RP0=1, select bank3
   955     0037  1703               	bsf	3,6	;RP1=1, select bank3
   956     0038  0808               	movf	8,w	;volatile
   957     0039  3804               	iorlw	4
   958     003A  0088               	movwf	8	;volatile
   959                           
   960                           ;adcInterrupt.c: 19:             TRISA = TRISA | 0b00000100;
   961     003B  1683               	bsf	3,5	;RP0=1, select bank1
   962     003C  1303               	bcf	3,6	;RP1=0, select bank1
   963     003D  0805               	movf	5,w	;volatile
   964     003E  3804               	iorlw	4
   965     003F  0085               	movwf	5	;volatile
   966     0040                     l1193:
   967                           
   968                           ;adcInterrupt.c: 20:             ADCON0bits.CHS = 0b0010;
   969     0040  1283               	bcf	3,5	;RP0=0, select bank0
   970     0041  1303               	bcf	3,6	;RP1=0, select bank0
   971     0042  081F               	movf	31,w	;volatile
   972     0043  39C3               	andlw	-61
   973     0044  3808               	iorlw	8
   974     0045  009F               	movwf	31	;volatile
   975                           
   976                           ;adcInterrupt.c: 21:             break;
   977     0046  2935               	goto	l63
   978     0047                     l1195:
   979                           
   980                           ;adcInterrupt.c: 23:             ANSEL = ANSEL | 0b00001000;
   981     0047  1683               	bsf	3,5	;RP0=1, select bank3
   982     0048  1703               	bsf	3,6	;RP1=1, select bank3
   983     0049  0808               	movf	8,w	;volatile
   984     004A  3808               	iorlw	8
   985     004B  0088               	movwf	8	;volatile
   986                           
   987                           ;adcInterrupt.c: 24:             TRISA = TRISA | 0b00001000;
   988     004C  1683               	bsf	3,5	;RP0=1, select bank1
   989     004D  1303               	bcf	3,6	;RP1=0, select bank1
   990     004E  0805               	movf	5,w	;volatile
   991     004F  3808               	iorlw	8
   992     0050  0085               	movwf	5	;volatile
   993     0051                     l1197:
   994                           
   995                           ;adcInterrupt.c: 25:             ADCON0bits.CHS = 0b0011;
   996     0051  1283               	bcf	3,5	;RP0=0, select bank0
   997     0052  1303               	bcf	3,6	;RP1=0, select bank0
   998     0053  081F               	movf	31,w	;volatile
   999     0054  39C3               	andlw	-61
  1000     0055  380C               	iorlw	12
  1001     0056  009F               	movwf	31	;volatile
  1002                           
  1003                           ;adcInterrupt.c: 26:             break;
  1004     0057  2935               	goto	l63
  1005     0058                     l1199:
  1006                           
  1007                           ;adcInterrupt.c: 28:             ANSEL = ANSEL | 0b00010000;
  1008     0058  1683               	bsf	3,5	;RP0=1, select bank3
  1009     0059  1703               	bsf	3,6	;RP1=1, select bank3
  1010     005A  0808               	movf	8,w	;volatile
  1011     005B  3810               	iorlw	16
  1012     005C  0088               	movwf	8	;volatile
  1013                           
  1014                           ;adcInterrupt.c: 29:             TRISA = TRISA | 0b00100000;
  1015     005D  1683               	bsf	3,5	;RP0=1, select bank1
  1016     005E  1303               	bcf	3,6	;RP1=0, select bank1
  1017     005F  0805               	movf	5,w	;volatile
  1018     0060  3820               	iorlw	32
  1019     0061  0085               	movwf	5	;volatile
  1020     0062                     l1201:
  1021                           
  1022                           ;adcInterrupt.c: 30:             ADCON0bits.CHS = 0b0100;
  1023     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1024     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1025     0064  081F               	movf	31,w	;volatile
  1026     0065  39C3               	andlw	-61
  1027     0066  3810               	iorlw	16
  1028     0067  009F               	movwf	31	;volatile
  1029                           
  1030                           ;adcInterrupt.c: 31:             break;
  1031     0068  2935               	goto	l63
  1032     0069                     l1203:
  1033                           
  1034                           ;adcInterrupt.c: 33:             ANSEL = ANSEL | 0b00100000;
  1035     0069  1683               	bsf	3,5	;RP0=1, select bank3
  1036     006A  1703               	bsf	3,6	;RP1=1, select bank3
  1037     006B  0808               	movf	8,w	;volatile
  1038     006C  3820               	iorlw	32
  1039     006D  0088               	movwf	8	;volatile
  1040                           
  1041                           ;adcInterrupt.c: 34:             TRISE = TRISE | 0b00000001;
  1042     006E  1683               	bsf	3,5	;RP0=1, select bank1
  1043     006F  1303               	bcf	3,6	;RP1=0, select bank1
  1044     0070  0809               	movf	9,w	;volatile
  1045     0071  3801               	iorlw	1
  1046     0072  0089               	movwf	9	;volatile
  1047     0073                     l1205:
  1048                           
  1049                           ;adcInterrupt.c: 35:             ADCON0bits.CHS = 0b0101;
  1050     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0074  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0075  081F               	movf	31,w	;volatile
  1053     0076  39C3               	andlw	-61
  1054     0077  3814               	iorlw	20
  1055     0078  009F               	movwf	31	;volatile
  1056                           
  1057                           ;adcInterrupt.c: 36:             break;
  1058     0079  2935               	goto	l63
  1059     007A                     l1207:
  1060                           
  1061                           ;adcInterrupt.c: 38:             ANSEL = ANSEL | 0b01000000;
  1062     007A  1683               	bsf	3,5	;RP0=1, select bank3
  1063     007B  1703               	bsf	3,6	;RP1=1, select bank3
  1064     007C  0808               	movf	8,w	;volatile
  1065     007D  3840               	iorlw	64
  1066     007E  0088               	movwf	8	;volatile
  1067                           
  1068                           ;adcInterrupt.c: 39:             TRISE = TRISE | 0b00000010;
  1069     007F  1683               	bsf	3,5	;RP0=1, select bank1
  1070     0080  1303               	bcf	3,6	;RP1=0, select bank1
  1071     0081  0809               	movf	9,w	;volatile
  1072     0082  3802               	iorlw	2
  1073     0083  0089               	movwf	9	;volatile
  1074     0084                     l1209:
  1075                           
  1076                           ;adcInterrupt.c: 40:             ADCON0bits.CHS = 0b0110;
  1077     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0085  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0086  081F               	movf	31,w	;volatile
  1080     0087  39C3               	andlw	-61
  1081     0088  3818               	iorlw	24
  1082     0089  009F               	movwf	31	;volatile
  1083                           
  1084                           ;adcInterrupt.c: 41:             break;
  1085     008A  2935               	goto	l63
  1086     008B                     l1211:
  1087                           
  1088                           ;adcInterrupt.c: 43:             ANSEL = ANSEL | 0b10000000;
  1089     008B  1683               	bsf	3,5	;RP0=1, select bank3
  1090     008C  1703               	bsf	3,6	;RP1=1, select bank3
  1091     008D  0808               	movf	8,w	;volatile
  1092     008E  3880               	iorlw	128
  1093     008F  0088               	movwf	8	;volatile
  1094                           
  1095                           ;adcInterrupt.c: 44:             TRISE = TRISE | 0b00000100;
  1096     0090  1683               	bsf	3,5	;RP0=1, select bank1
  1097     0091  1303               	bcf	3,6	;RP1=0, select bank1
  1098     0092  0809               	movf	9,w	;volatile
  1099     0093  3804               	iorlw	4
  1100     0094  0089               	movwf	9	;volatile
  1101     0095                     l1213:
  1102                           
  1103                           ;adcInterrupt.c: 45:             ADCON0bits.CHS = 0b0111;
  1104     0095  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0096  1303               	bcf	3,6	;RP1=0, select bank0
  1106     0097  081F               	movf	31,w	;volatile
  1107     0098  39C3               	andlw	-61
  1108     0099  381C               	iorlw	28
  1109     009A  009F               	movwf	31	;volatile
  1110                           
  1111                           ;adcInterrupt.c: 46:             break;
  1112     009B  2935               	goto	l63
  1113     009C                     l1215:
  1114                           
  1115                           ;adcInterrupt.c: 48:             ANSELH = ANSELH | 0b00000001;
  1116     009C  1683               	bsf	3,5	;RP0=1, select bank3
  1117     009D  1703               	bsf	3,6	;RP1=1, select bank3
  1118     009E  0809               	movf	9,w	;volatile
  1119     009F  3801               	iorlw	1
  1120     00A0  0089               	movwf	9	;volatile
  1121                           
  1122                           ;adcInterrupt.c: 49:             TRISB = TRISB | 0b00000100;
  1123     00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1124     00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1125     00A3  0806               	movf	6,w	;volatile
  1126     00A4  3804               	iorlw	4
  1127     00A5  0086               	movwf	6	;volatile
  1128     00A6                     l1217:
  1129                           
  1130                           ;adcInterrupt.c: 50:             ADCON0bits.CHS = 0b1000;
  1131     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1132     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1133     00A8  081F               	movf	31,w	;volatile
  1134     00A9  39C3               	andlw	-61
  1135     00AA  3820               	iorlw	32
  1136     00AB  009F               	movwf	31	;volatile
  1137                           
  1138                           ;adcInterrupt.c: 51:             break;
  1139     00AC  2935               	goto	l63
  1140     00AD                     l1219:
  1141                           
  1142                           ;adcInterrupt.c: 53:             ANSELH = ANSELH | 0b00000010;
  1143     00AD  1683               	bsf	3,5	;RP0=1, select bank3
  1144     00AE  1703               	bsf	3,6	;RP1=1, select bank3
  1145     00AF  0809               	movf	9,w	;volatile
  1146     00B0  3802               	iorlw	2
  1147     00B1  0089               	movwf	9	;volatile
  1148                           
  1149                           ;adcInterrupt.c: 54:             TRISB = TRISB | 0b00001000;
  1150     00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1151     00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1152     00B4  0806               	movf	6,w	;volatile
  1153     00B5  3808               	iorlw	8
  1154     00B6  0086               	movwf	6	;volatile
  1155     00B7                     l1221:
  1156                           
  1157                           ;adcInterrupt.c: 55:             ADCON0bits.CHS = 0b1001;
  1158     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1159     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1160     00B9  081F               	movf	31,w	;volatile
  1161     00BA  39C3               	andlw	-61
  1162     00BB  3824               	iorlw	36
  1163     00BC  009F               	movwf	31	;volatile
  1164                           
  1165                           ;adcInterrupt.c: 56:             break;
  1166     00BD  2935               	goto	l63
  1167     00BE                     l1223:
  1168                           
  1169                           ;adcInterrupt.c: 58:             ANSELH = ANSELH | 0b00000100;
  1170     00BE  1683               	bsf	3,5	;RP0=1, select bank3
  1171     00BF  1703               	bsf	3,6	;RP1=1, select bank3
  1172     00C0  0809               	movf	9,w	;volatile
  1173     00C1  3804               	iorlw	4
  1174     00C2  0089               	movwf	9	;volatile
  1175                           
  1176                           ;adcInterrupt.c: 59:             TRISB = TRISB | 0b00000010;
  1177     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1178     00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1179     00C5  0806               	movf	6,w	;volatile
  1180     00C6  3802               	iorlw	2
  1181     00C7  0086               	movwf	6	;volatile
  1182     00C8                     l1225:
  1183                           
  1184                           ;adcInterrupt.c: 60:             ADCON0bits.CHS = 0b1010;
  1185     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1186     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1187     00CA  081F               	movf	31,w	;volatile
  1188     00CB  39C3               	andlw	-61
  1189     00CC  3828               	iorlw	40
  1190     00CD  009F               	movwf	31	;volatile
  1191                           
  1192                           ;adcInterrupt.c: 61:             break;
  1193     00CE  2935               	goto	l63
  1194     00CF                     l1227:
  1195                           
  1196                           ;adcInterrupt.c: 63:             ANSELH = ANSELH | 0b00001000;
  1197     00CF  1683               	bsf	3,5	;RP0=1, select bank3
  1198     00D0  1703               	bsf	3,6	;RP1=1, select bank3
  1199     00D1  0809               	movf	9,w	;volatile
  1200     00D2  3808               	iorlw	8
  1201     00D3  0089               	movwf	9	;volatile
  1202                           
  1203                           ;adcInterrupt.c: 64:             TRISB = TRISB | 0b00010000;
  1204     00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1205     00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1206     00D6  0806               	movf	6,w	;volatile
  1207     00D7  3810               	iorlw	16
  1208     00D8  0086               	movwf	6	;volatile
  1209     00D9                     l1229:
  1210                           
  1211                           ;adcInterrupt.c: 65:             ADCON0bits.CHS = 0b1011;
  1212     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1213     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1214     00DB  081F               	movf	31,w	;volatile
  1215     00DC  39C3               	andlw	-61
  1216     00DD  382C               	iorlw	44
  1217     00DE  009F               	movwf	31	;volatile
  1218                           
  1219                           ;adcInterrupt.c: 66:             break;
  1220     00DF  2935               	goto	l63
  1221     00E0                     l1231:
  1222                           
  1223                           ;adcInterrupt.c: 68:             ANSELH = ANSELH | 0b00010000;
  1224     00E0  1683               	bsf	3,5	;RP0=1, select bank3
  1225     00E1  1703               	bsf	3,6	;RP1=1, select bank3
  1226     00E2  0809               	movf	9,w	;volatile
  1227     00E3  3810               	iorlw	16
  1228     00E4  0089               	movwf	9	;volatile
  1229                           
  1230                           ;adcInterrupt.c: 69:             TRISB = TRISB | 0b00000001;
  1231     00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1232     00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1233     00E7  0806               	movf	6,w	;volatile
  1234     00E8  3801               	iorlw	1
  1235     00E9  0086               	movwf	6	;volatile
  1236     00EA                     l1233:
  1237                           
  1238                           ;adcInterrupt.c: 70:             ADCON0bits.CHS = 0b1100;
  1239     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1240     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1241     00EC  081F               	movf	31,w	;volatile
  1242     00ED  39C3               	andlw	-61
  1243     00EE  3830               	iorlw	48
  1244     00EF  009F               	movwf	31	;volatile
  1245                           
  1246                           ;adcInterrupt.c: 71:             break;
  1247     00F0  2935               	goto	l63
  1248     00F1                     l1235:
  1249                           
  1250                           ;adcInterrupt.c: 73:             ANSELH = ANSELH | 0b00100000;
  1251     00F1  1683               	bsf	3,5	;RP0=1, select bank3
  1252     00F2  1703               	bsf	3,6	;RP1=1, select bank3
  1253     00F3  0809               	movf	9,w	;volatile
  1254     00F4  3820               	iorlw	32
  1255     00F5  0089               	movwf	9	;volatile
  1256                           
  1257                           ;adcInterrupt.c: 74:             TRISB = TRISB | 0b00100000;
  1258     00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1259     00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1260     00F8  0806               	movf	6,w	;volatile
  1261     00F9  3820               	iorlw	32
  1262     00FA  0086               	movwf	6	;volatile
  1263     00FB                     l1237:
  1264                           
  1265                           ;adcInterrupt.c: 75:             ADCON0bits.CHS = 0b1101;
  1266     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1267     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1268     00FD  081F               	movf	31,w	;volatile
  1269     00FE  39C3               	andlw	-61
  1270     00FF  3834               	iorlw	52
  1271     0100  009F               	movwf	31	;volatile
  1272                           
  1273                           ;adcInterrupt.c: 76:             break;
  1274     0101  2935               	goto	l63
  1275     0102                     l1241:
  1276                           
  1277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 1, Range of values is 0 to 0
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte            4     3 (average)
  1283                           ; direct_byte           11     8 (fixed)
  1284                           ; jumptable            260     6 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1287     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1288     0104  0821               	movf	adc_init@channel+1,w
  1289     0105  3A00               	xorlw	0	; case 0
  1290     0106  1903               	skipnz
  1291     0107  2909               	goto	l1307
  1292     0108  2935               	goto	l63
  1293     0109                     l1307:
  1294                           
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 14, Range of values is 0 to 13
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           43    22 (average)
  1300                           ; direct_byte           50     8 (fixed)
  1301                           ; jumptable            260     6 (fixed)
  1302                           ;	Chosen strategy is simple_byte
  1303     0109  0820               	movf	adc_init@channel,w
  1304     010A  3A00               	xorlw	0	; case 0
  1305     010B  1903               	skipnz
  1306     010C  2816               	goto	l1183
  1307     010D  3A01               	xorlw	1	; case 1
  1308     010E  1903               	skipnz
  1309     010F  2825               	goto	l1187
  1310     0110  3A03               	xorlw	3	; case 2
  1311     0111  1903               	skipnz
  1312     0112  2836               	goto	l1191
  1313     0113  3A01               	xorlw	1	; case 3
  1314     0114  1903               	skipnz
  1315     0115  2847               	goto	l1195
  1316     0116  3A07               	xorlw	7	; case 4
  1317     0117  1903               	skipnz
  1318     0118  2858               	goto	l1199
  1319     0119  3A01               	xorlw	1	; case 5
  1320     011A  1903               	skipnz
  1321     011B  2869               	goto	l1203
  1322     011C  3A03               	xorlw	3	; case 6
  1323     011D  1903               	skipnz
  1324     011E  287A               	goto	l1207
  1325     011F  3A01               	xorlw	1	; case 7
  1326     0120  1903               	skipnz
  1327     0121  288B               	goto	l1211
  1328     0122  3A0F               	xorlw	15	; case 8
  1329     0123  1903               	skipnz
  1330     0124  289C               	goto	l1215
  1331     0125  3A01               	xorlw	1	; case 9
  1332     0126  1903               	skipnz
  1333     0127  28AD               	goto	l1219
  1334     0128  3A03               	xorlw	3	; case 10
  1335     0129  1903               	skipnz
  1336     012A  28BE               	goto	l1223
  1337     012B  3A01               	xorlw	1	; case 11
  1338     012C  1903               	skipnz
  1339     012D  28CF               	goto	l1227
  1340     012E  3A07               	xorlw	7	; case 12
  1341     012F  1903               	skipnz
  1342     0130  28E0               	goto	l1231
  1343     0131  3A01               	xorlw	1	; case 13
  1344     0132  1903               	skipnz
  1345     0133  28F1               	goto	l1235
  1346     0134  2935               	goto	l63
  1347     0135                     l63:
  1348                           
  1349                           ;adcInterrupt.c: 79:     ADCON1bits.ADFM = 0;
  1350     0135  1683               	bsf	3,5	;RP0=1, select bank1
  1351     0136  1303               	bcf	3,6	;RP1=0, select bank1
  1352     0137  139F               	bcf	31,7	;volatile
  1353                           
  1354                           ;adcInterrupt.c: 80:     ADCON1bits.VCFG0 = 0;
  1355     0138  121F               	bcf	31,4	;volatile
  1356                           
  1357                           ;adcInterrupt.c: 81:     ADCON1bits.VCFG1 = 0;
  1358     0139  129F               	bcf	31,5	;volatile
  1359     013A                     l1243:
  1360                           
  1361                           ;adcInterrupt.c: 83:     ADCON0bits.ADCS = 0b10;
  1362     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1363     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1364     013C  081F               	movf	31,w	;volatile
  1365     013D  393F               	andlw	-193
  1366     013E  3880               	iorlw	128
  1367     013F  009F               	movwf	31	;volatile
  1368     0140                     l1245:
  1369                           
  1370                           ;adcInterrupt.c: 84:     ADCON0bits.ADON = 1;
  1371     0140  141F               	bsf	31,0	;volatile
  1372     0141                     l1247:
  1373                           
  1374                           ;adcInterrupt.c: 85:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1375     0141  3020               	movlw	32
  1376     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1377     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1378     0144  00A2               	movwf	??_adc_init
  1379     0145                     u137:
  1380     0145  0BA2               	decfsz	??_adc_init,f
  1381     0146  2945               	goto	u137
  1382     0147  0000               	nop
  1383     0148                     l1249:
  1384                           
  1385                           ;adcInterrupt.c: 87:     PIR1bits.ADIF = 0;
  1386     0148  1283               	bcf	3,5	;RP0=0, select bank0
  1387     0149  1303               	bcf	3,6	;RP1=0, select bank0
  1388     014A  130C               	bcf	12,6	;volatile
  1389     014B                     l1251:
  1390                           
  1391                           ;adcInterrupt.c: 88:     PIE1bits.ADIE = 1;
  1392     014B  1683               	bsf	3,5	;RP0=1, select bank1
  1393     014C  1303               	bcf	3,6	;RP1=0, select bank1
  1394     014D  170C               	bsf	12,6	;volatile
  1395     014E                     l1253:
  1396                           
  1397                           ;adcInterrupt.c: 89:     INTCONbits.PEIE = 1;
  1398     014E  170B               	bsf	11,6	;volatile
  1399     014F                     l1255:
  1400                           
  1401                           ;adcInterrupt.c: 90:     INTCONbits.GIE = 1;
  1402     014F  178B               	bsf	11,7	;volatile
  1403     0150                     l77:
  1404     0150  0008               	return
  1405     0151                     __end_of_adc_init:
  1406                           
  1407                           	psect	text4
  1408     017A                     __ptext4:	
  1409 ;; *************** function _isr *****************
  1410 ;; Defined at:
  1411 ;;		line 41 in file "Dig2Lab3_Puppet00.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          2       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 1
  1432 ;; This function calls:
  1433 ;;		_adc_read
  1434 ;;		_spiWrite
  1435 ;; This function is called by:
  1436 ;;		Interrupt level 1
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     017A                     _isr:	
  1441                           ;psect for function _isr
  1442                           
  1443     017A                     i1l1129:
  1444                           
  1445                           ;Dig2Lab3_Puppet00.c: 42:    if(SSPIF == 1){
  1446     017A  1283               	bcf	3,5	;RP0=0, select bank0
  1447     017B  1303               	bcf	3,6	;RP1=0, select bank0
  1448     017C  1D8C               	btfss	12,3	;volatile
  1449     017D  297F               	goto	u7_21
  1450     017E  2980               	goto	u7_20
  1451     017F                     u7_21:
  1452     017F  2989               	goto	i1l1135
  1453     0180                     u7_20:
  1454     0180                     i1l1131:
  1455                           
  1456                           ;Dig2Lab3_Puppet00.c: 43:         spiWrite(potValue);
  1457     0180  0876               	movf	_potValue,w
  1458     0181  120A  118A  21E7  120A  118A  	fcall	_spiWrite
  1459     0186                     i1l1133:
  1460                           
  1461                           ;Dig2Lab3_Puppet00.c: 44:         SSPIF = 0;
  1462     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0188  118C               	bcf	12,3	;volatile
  1465     0189                     i1l1135:
  1466                           
  1467                           ;Dig2Lab3_Puppet00.c: 46:     if(ADIF){
  1468     0189  1F0C               	btfss	12,6	;volatile
  1469     018A  298C               	goto	u8_21
  1470     018B  298D               	goto	u8_20
  1471     018C                     u8_21:
  1472     018C  299B               	goto	i1l136
  1473     018D                     u8_20:
  1474     018D                     i1l1137:
  1475                           
  1476                           ;Dig2Lab3_Puppet00.c: 47:         potValue = adc_read();
  1477     018D  120A  118A  21DD  120A  118A  	fcall	_adc_read
  1478     0192  0871               	movf	?_adc_read+1,w
  1479     0193  00F7               	movwf	_potValue+1
  1480     0194  0870               	movf	?_adc_read,w
  1481     0195  00F6               	movwf	_potValue
  1482     0196                     i1l1139:
  1483                           
  1484                           ;Dig2Lab3_Puppet00.c: 48:         PORTB = potValue;
  1485     0196  0876               	movf	_potValue,w
  1486     0197  1283               	bcf	3,5	;RP0=0, select bank0
  1487     0198  1303               	bcf	3,6	;RP1=0, select bank0
  1488     0199  0086               	movwf	6	;volatile
  1489     019A                     i1l1141:
  1490                           
  1491                           ;Dig2Lab3_Puppet00.c: 49:         PIR1bits.ADIF = 0;
  1492     019A  130C               	bcf	12,6	;volatile
  1493     019B                     i1l136:
  1494     019B  0875               	movf	??_isr+1,w
  1495     019C  008A               	movwf	10
  1496     019D  0E74               	swapf	??_isr,w
  1497     019E  0083               	movwf	3
  1498     019F  0EFE               	swapf	btemp,f
  1499     01A0  0E7E               	swapf	btemp,w
  1500     01A1  0009               	retfie
  1501     01A2                     __end_of_isr:
  1502                           
  1503                           	psect	intentry
  1504     0004                     __pintentry:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1507                           
  1508     0004                     interrupt_function:
  1509     007E                     saved_w	set	btemp
  1510     0004  00FE               	movwf	btemp
  1511     0005  0E03               	swapf	3,w
  1512     0006  00F4               	movwf	??_isr
  1513     0007  080A               	movf	10,w
  1514     0008  00F5               	movwf	??_isr+1
  1515     0009  120A  118A  297A   	ljmp	_isr
  1516                           
  1517                           	psect	text5
  1518     01E7                     __ptext5:	
  1519 ;; *************** function _spiWrite *****************
  1520 ;; Defined at:
  1521 ;;		line 25 in file "SPI.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  dat             1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  dat             1    0[COMMON] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         1       0       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_isr
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548     01E7                     _spiWrite:	
  1549                           ;psect for function _spiWrite
  1550                           
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _spiWrite: [wreg]
  1554                           ;spiWrite@dat stored from wreg
  1555     01E7  00F0               	movwf	spiWrite@dat
  1556     01E8                     i1l857:
  1557                           
  1558                           ;SPI.c: 25: void spiWrite(char dat);SPI.c: 26: {;SPI.c: 27:     SSPBUF = dat;
  1559     01E8  0870               	movf	spiWrite@dat,w
  1560     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1561     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1562     01EB  0093               	movwf	19	;volatile
  1563     01EC                     i1l26:
  1564     01EC  0008               	return
  1565     01ED                     __end_of_spiWrite:
  1566                           
  1567                           	psect	text6
  1568     01DD                     __ptext6:	
  1569 ;; *************** function _adc_read *****************
  1570 ;; Defined at:
  1571 ;;		line 93 in file "adcInterrupt.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  2    0[COMMON] int 
  1578 ;; Registers used:
  1579 ;;		wreg
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         2       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0
  1587 ;;      Temps:          2       0       0       0       0
  1588 ;;      Totals:         4       0       0       0       0
  1589 ;;Total ram usage:        4 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_isr
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598     01DD                     _adc_read:	
  1599                           ;psect for function _adc_read
  1600                           
  1601     01DD                     i1l1109:	
  1602                           ;incstack = 0
  1603                           ; Regs used in _adc_read: [wreg]
  1604                           
  1605                           
  1606                           ;adcInterrupt.c: 94:     return ADRESH;
  1607     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1608     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1609     01DF  081E               	movf	30,w	;volatile
  1610     01E0  00F2               	movwf	??_adc_read
  1611     01E1  01F3               	clrf	??_adc_read+1
  1612     01E2  0872               	movf	??_adc_read,w
  1613     01E3  00F0               	movwf	?_adc_read
  1614     01E4  0873               	movf	??_adc_read+1,w
  1615     01E5  00F1               	movwf	?_adc_read+1
  1616     01E6                     i1l80:
  1617     01E6  0008               	return
  1618     01E7                     __end_of_adc_read:
  1619     007E                     btemp	set	126	;btemp
  1620     007E                     wtemp0	set	126
  1621                           
  1622                           	psect	idloc
  1623                           
  1624                           ;Config register IDLOC0 @ 0x2000
  1625                           ;	unspecified, using default values
  1626     2000                     	org	8192
  1627     2000  3FFF               	dw	16383
  1628                           
  1629                           ;Config register IDLOC1 @ 0x2001
  1630                           ;	unspecified, using default values
  1631     2001                     	org	8193
  1632     2001  3FFF               	dw	16383
  1633                           
  1634                           ;Config register IDLOC2 @ 0x2002
  1635                           ;	unspecified, using default values
  1636     2002                     	org	8194
  1637     2002  3FFF               	dw	16383
  1638                           
  1639                           ;Config register IDLOC3 @ 0x2003
  1640                           ;	unspecified, using default values
  1641     2003                     	org	8195
  1642     2003  3FFF               	dw	16383
  1643                           
  1644                           	psect	config
  1645                           
  1646                           ;Config register CONFIG1 @ 0x2007
  1647                           ;	Oscillator Selection bits
  1648                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1649                           ;	Watchdog Timer Enable bit
  1650                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1651                           ;	Power-up Timer Enable bit
  1652                           ;	PWRTE = OFF, PWRT disabled
  1653                           ;	RE3/MCLR pin function select bit
  1654                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1655                           ;	Code Protection bit
  1656                           ;	CP = OFF, Program memory code protection is disabled
  1657                           ;	Data Code Protection bit
  1658                           ;	CPD = OFF, Data memory code protection is disabled
  1659                           ;	Brown Out Reset Selection bits
  1660                           ;	BOREN = OFF, BOR disabled
  1661                           ;	Internal External Switchover bit
  1662                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1663                           ;	Fail-Safe Clock Monitor Enabled bit
  1664                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1665                           ;	Low Voltage Programming Enable bit
  1666                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1667                           ;	In-Circuit Debugger Mode bit
  1668                           ;	DEBUG = 0x1, unprogramme  1669     2007                     	org	8199
  1670     2007  20D4               	dw	8404
  1671                           
  1672                           ;Config register CONFIG2 @ 0x2008
  1673                           ;	Brown-out Reset Selection bit
  1674                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1675                           ;	Flash Program Memory Self Write Enable bits
  1676                           ;	WRT = OFF, Write protection off
  1677     2008                     	org	8200
  1678     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     577
                                              4 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     577
                           _adc_init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             3     1      2     121
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              4 COMMON     2     2      0
                           _adc_read
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _adc_init
     _spiInit

 _isr (ROOT)
   _adc_read
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 01 23:45:31 2023

            _SSPSTATbits 0094                       l16 01BA                       l17 01BF  
                     l63 0135                       l77 0150                      l148 0179  
                    u100 01AE                      u101 01AD                      u110 01CB  
                    u111 01CA                      u127 01D1                      u137 0145  
                    _isr 017A                     l1201 0062                     l1211 008B  
                   l1203 0069                     l1221 00B7                     l1213 0095  
                   l1205 0073                     l1231 00E0                     l1223 00BE  
                   l1215 009C                     l1207 007A                     l1233 00EA  
                   l1225 00C8                     l1217 00A6                     l1209 0084  
                   l1241 0102                     l1251 014B                     l1243 013A  
                   l1307 0109                     l1235 00F1                     l1227 00CF  
                   l1219 00AD                     l1171 01A5                     l1253 014E  
                   l1245 0140                     l1237 00FB                     l1229 00D9  
                   l1181 0015                     l1173 01AE                     l1255 014F  
                   l1247 0141                     l1191 0036                     l1183 0016  
                   l1175 01B2                     l1271 0160                     l1263 0151  
                   l1249 0148                     l1193 0040                     l1185 0020  
                   l1177 01B4                     l1273 0163                     l1265 015D  
                   l1281 01C5                     l1195 0047                     l1187 0025  
                   l1179 01B9                     l1275 0164                     l1267 015E  
                   l1283 01CB                     l1197 0051                     l1189 002F  
                   l1277 016F                     l1269 015F                     l1285 01D6  
                   l1199 0058                     l1279 01C0                     _ADIF 0066  
                   ?_isr 0070                     i1l26 01EC                     i1l80 01E6  
                   u7_20 0180                     u7_21 017F                     u8_20 018D  
                   u8_21 018C                     _main 01C0                     btemp 007E  
                   start 000C                    ??_isr 0074                    ?_main 0070  
                  _ANSEL 0188                    i1l136 019B                    i1l857 01E8  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0151                    pclath 000A  
        __end_of_spiInit 01C0                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01DD                   ??_main 0024  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_init 0151         __end_of_adc_read 01E7                   i1l1131 0180  
                 i1l1109 01DD                   i1l1141 019A                   i1l1133 0186  
                 i1l1135 0189                   i1l1137 018D                   i1l1129 017A  
                 i1l1139 0196                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 01ED                ??_spiInit 0076  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 017A           _OPTION_REGbits 0081  
                ??_setup 0076               __pmaintext 01C0               __pintentry 0004  
              ?_adc_init 0020                ?_adc_read 0070                  _SSPSTAT 0094  
              ?_spiWrite 0070               ??_adc_init 0022               ??_adc_read 0072  
                __ptext1 0151                  __ptext2 01A2                  __ptext3 0015  
                __ptext4 017A                  __ptext5 01E7                  __ptext6 01DD  
                _spiInit 01A2     end_of_initialization 0011               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 01A2          adc_init@channel 0020              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020                 ?_spiInit 0020  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _WPUBbits 0095  
               _adc_init 0015                 _adc_read 01DD                 _potValue 0076  
               _spiWrite 01E7             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jul 26 23:48:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     000E                     	;# 
   400     000E                     	;# 
   401     000F                     	;# 
   402     0010                     	;# 
   403     0011                     	;# 
   404     0012                     	;# 
   405     0013                     	;# 
   406     0014                     	;# 
   407     0015                     	;# 
   408     0015                     	;# 
   409     0016                     	;# 
   410     0017                     	;# 
   411     0018                     	;# 
   412     0019                     	;# 
   413     001A                     	;# 
   414     001B                     	;# 
   415     001B                     	;# 
   416     001C                     	;# 
   417     001D                     	;# 
   418     001E                     	;# 
   419     001F                     	;# 
   420     0081                     	;# 
   421     0085                     	;# 
   422     0086                     	;# 
   423     0087                     	;# 
   424     0088                     	;# 
   425     0089                     	;# 
   426     008C                     	;# 
   427     008D                     	;# 
   428     008E                     	;# 
   429     008F                     	;# 
   430     0090                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009C                     	;# 
   445     009D                     	;# 
   446     009E                     	;# 
   447     009F                     	;# 
   448     0105                     	;# 
   449     0107                     	;# 
   450     0108                     	;# 
   451     0109                     	;# 
   452     010C                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     0185                     	;# 
   458     0187                     	;# 
   459     0188                     	;# 
   460     0189                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0019                     _TXREG	set	25
   464     0018                     _RCSTAbits	set	24
   465     0009                     _PORTEbits	set	9
   466     0009                     _PORTE	set	9
   467     0008                     _PORTD	set	8
   468     0006                     _PORTB	set	6
   469     0005                     _PORTA	set	5
   470     001A                     _RCREG	set	26
   471     001E                     _ADRESH	set	30
   472     000B                     _INTCONbits	set	11
   473     000C                     _PIR1bits	set	12
   474     001F                     _ADCON0bits	set	31
   475     0049                     _RE1	set	73
   476     0047                     _RD7	set	71
   477     0046                     _RD6	set	70
   478     0045                     _RD5	set	69
   479     0044                     _RD4	set	68
   480     0043                     _RD3	set	67
   481     0042                     _RD2	set	66
   482     0041                     _RD1	set	65
   483     0040                     _RD0	set	64
   484     0066                     _ADIF	set	102
   485     0098                     _TXSTAbits	set	152
   486     009A                     _SPBRGH	set	154
   487     0099                     _SPBRG	set	153
   488     008F                     _OSCCONbits	set	143
   489     0088                     _TRISD	set	136
   490     008C                     _PIE1bits	set	140
   491     009F                     _ADCON1bits	set	159
   492     0086                     _TRISB	set	134
   493     0089                     _TRISE	set	137
   494     0085                     _TRISA	set	133
   495     0187                     _BAUDCTLbits	set	391
   496     0189                     _ANSELH	set	393
   497     0188                     _ANSEL	set	392
   498                           
   499                           	psect	strings
   500     068A                     __pstrings:
   501     068A                     stringtab:
   502     068A                     __stringtab:
   503     068A                     stringcode:	
   504                           ;	String table - string pointers are 1 byte each
   505                           
   506     068A                     stringdir:
   507     068A  3006               	movlw	high stringdir
   508     068B  008A               	movwf	10
   509     068C  0804               	movf	4,w
   510     068D  0A84               	incf	4,f
   511     068E  0782               	addwf	2,f
   512     068F                     __stringbase:
   513     068F  3400               	retlw	0
   514     0690                     __end_of__stringtab:
   515     0690                     STR_1:
   516     0690  3450               	retlw	80	;'P'
   517     0691  346F               	retlw	111	;'o'
   518     0692  3474               	retlw	116	;'t'
   519     0693  3431               	retlw	49	;'1'
   520     0694  3420               	retlw	32	;' '
   521     0695  343A               	retlw	58	;':'
   522     0696  3400               	retlw	0
   523     0697                     STR_2:
   524     0697  3443               	retlw	67	;'C'
   525     0698  3450               	retlw	80	;'P'
   526     0699  3455               	retlw	85	;'U'
   527     069A  3420               	retlw	32	;' '
   528     069B  343A               	retlw	58	;':'
   529     069C  3400               	retlw	0
   530                           
   531                           	psect	cinit
   532     0011                     start_initialization:	
   533                           ; #config settings
   534                           
   535     0011                     __initialization:
   536                           
   537                           ; Clear objects allocated to BANK0
   538     0011  1383               	bcf	3,7	;select IRP bank0
   539     0012  3043               	movlw	low __pbssBANK0
   540     0013  0084               	movwf	4
   541     0014  3053               	movlw	low (__pbssBANK0+16)
   542     0015  120A  118A  26C4  120A  118A  	fcall	clear_ram0
   543     001A                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546     001A                     __end_of__initialization:
   547     001A  0183               	clrf	3
   548     001B  120A  118A  2A91   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551     0043                     __pbssBANK0:
   552     0043                     _unidadCont:
   553     0043                     	ds	2
   554     0045                     _decenaCont:
   555     0045                     	ds	2
   556     0047                     _centenaCont:
   557     0047                     	ds	2
   558     0049                     _cont:
   559     0049                     	ds	2
   560     004B                     _unidadVolt:
   561     004B                     	ds	2
   562     004D                     _decenaVolt:
   563     004D                     	ds	2
   564     004F                     _centenaVolt:
   565     004F                     	ds	2
   566     0051                     _potValue:
   567     0051                     	ds	2
   568                           
   569                           	psect	clrtext
   570     06C4                     clear_ram0:	
   571                           ;	Called with FSR containing the base address, and
   572                           ;	W with the last address+1
   573                           
   574     06C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   575     06C5                     clrloop0:
   576     06C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   577     06C6  0A84               	incf	4,f	;increment pointer
   578     06C7  0604               	xorwf	4,w	;XOR with final address
   579     06C8  1903               	btfsc	3,2	;have we reached the end yet?
   580     06C9  3400               	retlw	0	;all done for this memory range, return
   581     06CA  0604               	xorwf	4,w	;XOR again to restore value
   582     06CB  2EC5               	goto	clrloop0	;do the next byte
   583                           
   584                           	psect	cstackCOMMON
   585     0070                     __pcstackCOMMON:
   586     0070                     ?_UART_write_char:
   587     0070                     ??_UART_write_char:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_UART_read_char:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ??_UART_read_char:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_setup:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_Lcd_Init:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_Lcd_Clear:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?_Lcd_Write_String:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_Lcd_Write_Char:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_Lcd_Port:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_Lcd_Cmd:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_adc_read:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_main:	
   624                           ; 2 bytes @ 0x0
   625                           
   626     0070                     ?___wmul:	
   627                           ; 2 bytes @ 0x0
   628                           
   629     0070                     ?___awmod:	
   630                           ; 2 bytes @ 0x0
   631                           
   632     0070                     ?___lwmod:	
   633                           ; 2 bytes @ 0x0
   634                           
   635     0070                     UART_write_char@c:	
   636                           ; 2 bytes @ 0x0
   637                           
   638     0070                     ___wmul@multiplier:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ___awmod@divisor:	
   642                           ; 2 bytes @ 0x0
   643                           
   644     0070                     ___lwmod@divisor:	
   645                           ; 2 bytes @ 0x0
   646                           
   647                           
   648                           ; 2 bytes @ 0x0
   649     0070                     	ds	2
   650     0072                     ??_adc_read:
   651     0072                     ___wmul@multiplicand:	
   652                           ; 1 bytes @ 0x2
   653                           
   654     0072                     ___awmod@dividend:	
   655                           ; 2 bytes @ 0x2
   656                           
   657     0072                     ___lwmod@dividend:	
   658                           ; 2 bytes @ 0x2
   659                           
   660                           
   661                           ; 2 bytes @ 0x2
   662     0072                     	ds	2
   663     0074                     ??___wmul:
   664     0074                     ??___awmod:	
   665                           ; 1 bytes @ 0x4
   666                           
   667     0074                     ??___lwmod:	
   668                           ; 1 bytes @ 0x4
   669                           
   670     0074                     ___wmul@product:	
   671                           ; 1 bytes @ 0x4
   672                           
   673                           
   674                           ; 2 bytes @ 0x4
   675     0074                     	ds	1
   676     0075                     ___awmod@counter:
   677     0075                     ___lwmod@counter:	
   678                           ; 1 bytes @ 0x5
   679                           
   680                           
   681                           ; 1 bytes @ 0x5
   682     0075                     	ds	1
   683     0076                     ?___lwdiv:
   684     0076                     ___awmod@sign:	
   685                           ; 2 bytes @ 0x6
   686                           
   687     0076                     ___lwdiv@divisor:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           ; 2 bytes @ 0x6
   692     0076                     	ds	1
   693     0077                     ?___awdiv:
   694     0077                     ___awdiv@divisor:	
   695                           ; 2 bytes @ 0x7
   696                           
   697                           
   698                           ; 2 bytes @ 0x7
   699     0077                     	ds	1
   700     0078                     ___lwdiv@dividend:
   701                           
   702                           ; 2 bytes @ 0x8
   703     0078                     	ds	1
   704     0079                     ___awdiv@dividend:
   705                           
   706                           ; 2 bytes @ 0x9
   707     0079                     	ds	1
   708     007A                     ??___lwdiv:
   709                           
   710                           ; 1 bytes @ 0xA
   711     007A                     	ds	1
   712     007B                     ??___awdiv:
   713     007B                     ___lwdiv@quotient:	
   714                           ; 1 bytes @ 0xB
   715                           
   716                           
   717                           ; 2 bytes @ 0xB
   718     007B                     	ds	1
   719     007C                     ??_map:
   720     007C                     map@newVal:	
   721                           ; 1 bytes @ 0xC
   722                           
   723                           
   724                           ; 2 bytes @ 0xC
   725     007C                     	ds	1
   726     007D                     ___lwdiv@counter:
   727                           
   728                           ; 1 bytes @ 0xD
   729     007D                     	ds	1
   730                           
   731                           	psect	cstackBANK0
   732     0020                     __pcstackBANK0:
   733     0020                     ___awdiv@counter:
   734                           
   735                           ; 1 bytes @ 0x0
   736     0020                     	ds	1
   737     0021                     ___awdiv@sign:
   738                           
   739                           ; 1 bytes @ 0x1
   740     0021                     	ds	1
   741     0022                     ___awdiv@quotient:
   742                           
   743                           ; 2 bytes @ 0x2
   744     0022                     	ds	2
   745     0024                     ?_map:
   746     0024                     map@val:	
   747                           ; 2 bytes @ 0x4
   748                           
   749                           
   750                           ; 2 bytes @ 0x4
   751     0024                     	ds	2
   752     0026                     map@minOld:
   753                           
   754                           ; 2 bytes @ 0x6
   755     0026                     	ds	2
   756     0028                     map@maxOld:
   757                           
   758                           ; 2 bytes @ 0x8
   759     0028                     	ds	2
   760     002A                     map@minNew:
   761                           
   762                           ; 2 bytes @ 0xA
   763     002A                     	ds	2
   764     002C                     map@maxNew:
   765                           
   766                           ; 2 bytes @ 0xC
   767     002C                     	ds	2
   768     002E                     ??_isr:
   769                           
   770                           ; 1 bytes @ 0xE
   771     002E                     	ds	2
   772     0030                     _isr$1211:
   773                           
   774                           ; 2 bytes @ 0x10
   775     0030                     	ds	2
   776     0032                     _isr$1212:
   777                           
   778                           ; 2 bytes @ 0x12
   779     0032                     	ds	2
   780     0034                     _isr$1213:
   781                           
   782                           ; 2 bytes @ 0x14
   783     0034                     	ds	2
   784     0036                     isr@tempEntry:
   785                           
   786                           ; 1 bytes @ 0x16
   787     0036                     	ds	1
   788     0037                     isr@temp:
   789                           
   790                           ; 2 bytes @ 0x17
   791     0037                     	ds	2
   792     0039                     ?_NumtoChar:
   793     0039                     ?_UART_TX_config:	
   794                           ; 1 bytes @ 0x19
   795                           
   796     0039                     ?_UART_RX_config:	
   797                           ; 1 bytes @ 0x19
   798                           
   799     0039                     ?_adc_init:	
   800                           ; 1 bytes @ 0x19
   801                           
   802     0039                     ??_Lcd_Port:	
   803                           ; 1 bytes @ 0x19
   804                           
   805     0039                     Lcd_Port@a:	
   806                           ; 1 bytes @ 0x19
   807                           
   808     0039                     adc_init@channel:	
   809                           ; 1 bytes @ 0x19
   810                           
   811     0039                     NumtoChar@a:	
   812                           ; 2 bytes @ 0x19
   813                           
   814     0039                     UART_RX_config@baudrate:	
   815                           ; 2 bytes @ 0x19
   816                           
   817     0039                     UART_TX_config@baudrate:	
   818                           ; 2 bytes @ 0x19
   819                           
   820                           
   821                           ; 2 bytes @ 0x19
   822     0039                     	ds	1
   823     003A                     ??_Lcd_Write_Char:
   824     003A                     ??_Lcd_Cmd:	
   825                           ; 1 bytes @ 0x1A
   826                           
   827                           
   828                           ; 1 bytes @ 0x1A
   829     003A                     	ds	1
   830     003B                     ??_NumtoChar:
   831     003B                     ??_UART_TX_config:	
   832                           ; 1 bytes @ 0x1B
   833                           
   834     003B                     ??_UART_RX_config:	
   835                           ; 1 bytes @ 0x1B
   836                           
   837     003B                     ??_adc_init:	
   838                           ; 1 bytes @ 0x1B
   839                           
   840     003B                     Lcd_Write_Char@a:	
   841                           ; 1 bytes @ 0x1B
   842                           
   843                           
   844                           ; 1 bytes @ 0x1B
   845     003B                     	ds	1
   846     003C                     ??_setup:
   847     003C                     ??_Lcd_Write_String:	
   848                           ; 1 bytes @ 0x1C
   849                           
   850     003C                     Lcd_Cmd@a:	
   851                           ; 1 bytes @ 0x1C
   852                           
   853     003C                     Lcd_Write_String@i:	
   854                           ; 1 bytes @ 0x1C
   855                           
   856                           
   857                           ; 2 bytes @ 0x1C
   858     003C                     	ds	1
   859     003D                     ??_Lcd_Init:
   860     003D                     ??_Lcd_Clear:	
   861                           ; 1 bytes @ 0x1D
   862                           
   863     003D                     ?_Lcd_Set_Cursor:	
   864                           ; 1 bytes @ 0x1D
   865                           
   866     003D                     Lcd_Set_Cursor@b:	
   867                           ; 1 bytes @ 0x1D
   868                           
   869                           
   870                           ; 1 bytes @ 0x1D
   871     003D                     	ds	1
   872     003E                     ??_Lcd_Set_Cursor:
   873     003E                     Lcd_Set_Cursor@a:	
   874                           ; 1 bytes @ 0x1E
   875                           
   876     003E                     Lcd_Write_String@a:	
   877                           ; 1 bytes @ 0x1E
   878                           
   879                           
   880                           ; 1 bytes @ 0x1E
   881     003E                     	ds	1
   882     003F                     Lcd_Set_Cursor@temp:
   883                           
   884                           ; 1 bytes @ 0x1F
   885     003F                     	ds	1
   886     0040                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x20
   889     0040                     	ds	3
   890                           
   891                           	psect	maintext
   892     0291                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 92 in file "Dig2lab2.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  2  148[None  ] int 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       3       0       0       0
   915 ;;      Totals:         0       3       0       0       0
   916 ;;Total ram usage:        3 bytes
   917 ;; Hardware stack levels required when called: 6
   918 ;; This function calls:
   919 ;;		_Lcd_Clear
   920 ;;		_Lcd_Init
   921 ;;		_Lcd_Set_Cursor
   922 ;;		_Lcd_Write_Char
   923 ;;		_Lcd_Write_String
   924 ;;		_NumtoChar
   925 ;;		_setup
   926 ;; This function is called by:
   927 ;;		Startup code after reset
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931     0291                     _main:	
   932                           ;psect for function _main
   933                           
   934     0291                     l1880:	
   935                           ;incstack = 0
   936                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;Dig2lab2.c: 93:     setup();
   940     0291  120A  118A  259A  120A  118A  	fcall	_setup
   941     0296                     l1882:
   942                           
   943                           ;Dig2lab2.c: 94:     Lcd_Init();
   944     0296  120A  118A  2422  120A  118A  	fcall	_Lcd_Init
   945     029B                     l1884:
   946                           
   947                           ;Dig2lab2.c: 96:         if(ADCON0bits.GO == 0){
   948     029B  1283               	bcf	3,5	;RP0=0, select bank0
   949     029C  1303               	bcf	3,6	;RP1=0, select bank0
   950     029D  189F               	btfsc	31,1	;volatile
   951     029E  2AA0               	goto	u1081
   952     029F  2AA1               	goto	u1080
   953     02A0                     u1081:
   954     02A0  2AAF               	goto	l1890
   955     02A1                     u1080:
   956     02A1                     l1886:
   957                           
   958                           ;Dig2lab2.c: 97:             _delay((unsigned long)((10)*(8000000/4000.0)));
   959     02A1  301A               	movlw	26
   960     02A2  1283               	bcf	3,5	;RP0=0, select bank0
   961     02A3  1303               	bcf	3,6	;RP1=0, select bank0
   962     02A4  00C1               	movwf	??_main+1
   963     02A5  30F7               	movlw	247
   964     02A6  00C0               	movwf	??_main
   965     02A7                     u1097:
   966     02A7  0BC0               	decfsz	??_main,f
   967     02A8  2AA7               	goto	u1097
   968     02A9  0BC1               	decfsz	??_main+1,f
   969     02AA  2AA7               	goto	u1097
   970     02AB  2AAC               	nop2
   971     02AC                     l1888:
   972                           
   973                           ;Dig2lab2.c: 98:             ADCON0bits.GO = 1;
   974     02AC  1283               	bcf	3,5	;RP0=0, select bank0
   975     02AD  1303               	bcf	3,6	;RP1=0, select bank0
   976     02AE  149F               	bsf	31,1	;volatile
   977     02AF                     l1890:
   978                           
   979                           ;Dig2lab2.c: 100:         Lcd_Clear();
   980     02AF  120A  118A  26AD  120A  118A  	fcall	_Lcd_Clear
   981     02B4                     l1892:
   982                           
   983                           ;Dig2lab2.c: 101:         Lcd_Set_Cursor(1,2);
   984     02B4  3002               	movlw	2
   985     02B5  1283               	bcf	3,5	;RP0=0, select bank0
   986     02B6  1303               	bcf	3,6	;RP1=0, select bank0
   987     02B7  00BD               	movwf	Lcd_Set_Cursor@b
   988     02B8  3001               	movlw	1
   989     02B9  120A  118A  261E  120A  118A  	fcall	_Lcd_Set_Cursor
   990     02BE                     l1894:
   991                           
   992                           ;Dig2lab2.c: 102:         Lcd_Write_String("Pot1 :");
   993     02BE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   994     02BF  120A  118A  25D0  120A  118A  	fcall	_Lcd_Write_String
   995     02C4                     l1896:
   996                           
   997                           ;Dig2lab2.c: 103:         Lcd_Set_Cursor(2,3);
   998     02C4  3003               	movlw	3
   999     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1000     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1001     02C7  00BD               	movwf	Lcd_Set_Cursor@b
  1002     02C8  3002               	movlw	2
  1003     02C9  120A  118A  261E  120A  118A  	fcall	_Lcd_Set_Cursor
  1004     02CE                     l1898:
  1005                           
  1006                           ;Dig2lab2.c: 104:         Lcd_Write_Char(NumtoChar(centenaVolt));
  1007     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1008     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1009     02D0  0850               	movf	_centenaVolt+1,w
  1010     02D1  00BA               	movwf	NumtoChar@a+1
  1011     02D2  084F               	movf	_centenaVolt,w
  1012     02D3  00B9               	movwf	NumtoChar@a
  1013     02D4  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1014     02D9  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1015     02DE                     l1900:
  1016                           
  1017                           ;Dig2lab2.c: 105:         Lcd_Write_Char('.');
  1018     02DE  302E               	movlw	46
  1019     02DF  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1020     02E4                     l1902:
  1021                           
  1022                           ;Dig2lab2.c: 106:         Lcd_Write_Char(NumtoChar(decenaVolt));
  1023     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1024     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1025     02E6  084E               	movf	_decenaVolt+1,w
  1026     02E7  00BA               	movwf	NumtoChar@a+1
  1027     02E8  084D               	movf	_decenaVolt,w
  1028     02E9  00B9               	movwf	NumtoChar@a
  1029     02EA  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1030     02EF  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1031     02F4                     l1904:
  1032                           
  1033                           ;Dig2lab2.c: 107:         Lcd_Write_Char(NumtoChar(unidadVolt));
  1034     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1035     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1036     02F6  084C               	movf	_unidadVolt+1,w
  1037     02F7  00BA               	movwf	NumtoChar@a+1
  1038     02F8  084B               	movf	_unidadVolt,w
  1039     02F9  00B9               	movwf	NumtoChar@a
  1040     02FA  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1041     02FF  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1042     0304                     l1906:
  1043                           
  1044                           ;Dig2lab2.c: 108:         Lcd_Set_Cursor(1,11);
  1045     0304  300B               	movlw	11
  1046     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1047     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0307  00BD               	movwf	Lcd_Set_Cursor@b
  1049     0308  3001               	movlw	1
  1050     0309  120A  118A  261E  120A  118A  	fcall	_Lcd_Set_Cursor
  1051     030E                     l1908:
  1052                           
  1053                           ;Dig2lab2.c: 109:         Lcd_Write_String("CPU :");
  1054     030E  3008               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1055     030F  120A  118A  25D0  120A  118A  	fcall	_Lcd_Write_String
  1056     0314                     l1910:
  1057                           
  1058                           ;Dig2lab2.c: 110:         Lcd_Set_Cursor(2,11);
  1059     0314  300B               	movlw	11
  1060     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1061     0316  1303               	bcf	3,6	;RP1=0, select bank0
  1062     0317  00BD               	movwf	Lcd_Set_Cursor@b
  1063     0318  3002               	movlw	2
  1064     0319  120A  118A  261E  120A  118A  	fcall	_Lcd_Set_Cursor
  1065     031E                     l1912:
  1066                           
  1067                           ;Dig2lab2.c: 111:         Lcd_Write_Char(NumtoChar(centenaCont));
  1068     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1069     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0320  0848               	movf	_centenaCont+1,w
  1071     0321  00BA               	movwf	NumtoChar@a+1
  1072     0322  0847               	movf	_centenaCont,w
  1073     0323  00B9               	movwf	NumtoChar@a
  1074     0324  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1075     0329  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1076     032E                     l1914:
  1077                           
  1078                           ;Dig2lab2.c: 112:         Lcd_Write_Char(NumtoChar(decenaCont));
  1079     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1080     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1081     0330  0846               	movf	_decenaCont+1,w
  1082     0331  00BA               	movwf	NumtoChar@a+1
  1083     0332  0845               	movf	_decenaCont,w
  1084     0333  00B9               	movwf	NumtoChar@a
  1085     0334  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1086     0339  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1087     033E                     l1916:
  1088                           
  1089                           ;Dig2lab2.c: 113:         Lcd_Write_Char(NumtoChar(unidadCont));
  1090     033E  1283               	bcf	3,5	;RP0=0, select bank0
  1091     033F  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0340  0844               	movf	_unidadCont+1,w
  1093     0341  00BA               	movwf	NumtoChar@a+1
  1094     0342  0843               	movf	_unidadCont,w
  1095     0343  00B9               	movwf	NumtoChar@a
  1096     0344  120A  118A  24B0  120A  118A  	fcall	_NumtoChar
  1097     0349  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  1098                           
  1099                           ;Dig2lab2.c: 114:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1100     034E  3006               	movlw	6
  1101     034F  1283               	bcf	3,5	;RP0=0, select bank0
  1102     0350  1303               	bcf	3,6	;RP1=0, select bank0
  1103     0351  00C2               	movwf	??_main+2
  1104     0352  3013               	movlw	19
  1105     0353  00C1               	movwf	??_main+1
  1106     0354  30AD               	movlw	173
  1107     0355  00C0               	movwf	??_main
  1108     0356                     u1107:
  1109     0356  0BC0               	decfsz	??_main,f
  1110     0357  2B56               	goto	u1107
  1111     0358  0BC1               	decfsz	??_main+1,f
  1112     0359  2B56               	goto	u1107
  1113     035A  0BC2               	decfsz	??_main+2,f
  1114     035B  2B56               	goto	u1107
  1115     035C  2A9B               	goto	l1884
  1116     035D  120A  118A  280E   	ljmp	start
  1117     0360                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120     059A                     __ptext1:	
  1121 ;; *************** function _setup *****************
  1122 ;; Defined at:
  1123 ;;		line 118 in file "Dig2lab2.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 4
  1144 ;; This function calls:
  1145 ;;		_UART_RX_config
  1146 ;;		_UART_TX_config
  1147 ;;		_adc_init
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     059A                     _setup:	
  1154                           ;psect for function _setup
  1155                           
  1156     059A                     l1650:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1159                           
  1160                           
  1161                           ;Dig2lab2.c: 119:     ANSELH = 0;
  1162     059A  1683               	bsf	3,5	;RP0=1, select bank3
  1163     059B  1703               	bsf	3,6	;RP1=1, select bank3
  1164     059C  0189               	clrf	9	;volatile
  1165                           
  1166                           ;Dig2lab2.c: 120:     ANSEL = 0;
  1167     059D  0188               	clrf	8	;volatile
  1168                           
  1169                           ;Dig2lab2.c: 122:     TRISA = 0;
  1170     059E  1683               	bsf	3,5	;RP0=1, select bank1
  1171     059F  1303               	bcf	3,6	;RP1=0, select bank1
  1172     05A0  0185               	clrf	5	;volatile
  1173                           
  1174                           ;Dig2lab2.c: 123:     TRISB = 0;
  1175     05A1  0186               	clrf	6	;volatile
  1176                           
  1177                           ;Dig2lab2.c: 124:     TRISD = 0;
  1178     05A2  0188               	clrf	8	;volatile
  1179                           
  1180                           ;Dig2lab2.c: 125:     TRISE = 0;
  1181     05A3  0189               	clrf	9	;volatile
  1182                           
  1183                           ;Dig2lab2.c: 127:     PORTA = 0;
  1184     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1185     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1186     05A6  0185               	clrf	5	;volatile
  1187                           
  1188                           ;Dig2lab2.c: 128:     PORTB = 0;
  1189     05A7  0186               	clrf	6	;volatile
  1190                           
  1191                           ;Dig2lab2.c: 129:     PORTD = 0;
  1192     05A8  0188               	clrf	8	;volatile
  1193                           
  1194                           ;Dig2lab2.c: 130:     PORTE = 0;
  1195     05A9  0189               	clrf	9	;volatile
  1196     05AA                     l1652:
  1197                           
  1198                           ;Dig2lab2.c: 132:     OSCCONbits.IRCF = 0b111;
  1199     05AA  3070               	movlw	112
  1200     05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1201     05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1202     05AD  048F               	iorwf	15,f	;volatile
  1203     05AE                     l1654:
  1204                           
  1205                           ;Dig2lab2.c: 133:     OSCCONbits.SCS = 1;
  1206     05AE  140F               	bsf	15,0	;volatile
  1207     05AF                     l1656:
  1208                           
  1209                           ;Dig2lab2.c: 135:     adc_init(0);
  1210     05AF  3000               	movlw	0
  1211     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1212     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1213     05B2  00B9               	movwf	adc_init@channel
  1214     05B3  00BA               	movwf	adc_init@channel+1
  1215     05B4  120A  118A  201E  120A  118A  	fcall	_adc_init
  1216     05B9                     l1658:
  1217                           
  1218                           ;Dig2lab2.c: 136:     UART_TX_config(207);
  1219     05B9  30CF               	movlw	207
  1220     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1221     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1222     05BC  00B9               	movwf	UART_TX_config@baudrate
  1223     05BD  3000               	movlw	0
  1224     05BE  00BA               	movwf	UART_TX_config@baudrate+1
  1225     05BF  120A  118A  269D  120A  118A  	fcall	_UART_TX_config
  1226     05C4                     l1660:
  1227                           
  1228                           ;Dig2lab2.c: 137:     UART_RX_config(207);
  1229     05C4  30CF               	movlw	207
  1230     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1231     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1232     05C7  00B9               	movwf	UART_RX_config@baudrate
  1233     05C8  3000               	movlw	0
  1234     05C9  00BA               	movwf	UART_RX_config@baudrate+1
  1235     05CA  120A  118A  2674  120A  118A  	fcall	_UART_RX_config
  1236     05CF                     l156:
  1237     05CF  0008               	return
  1238     05D0                     __end_of_setup:
  1239                           
  1240                           	psect	text2
  1241     001E                     __ptext2:	
  1242 ;; *************** function _adc_init *****************
  1243 ;; Defined at:
  1244 ;;		line 4 in file "adcInterrupt.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  channel         2   25[BANK0 ] int 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       2       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          0       1       0       0       0
  1261 ;;      Totals:         0       3       0       0       0
  1262 ;;Total ram usage:        3 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 3
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_setup
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272     001E                     _adc_init:	
  1273                           ;psect for function _adc_init
  1274                           
  1275     001E                     l1440:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1278                           
  1279                           
  1280                           ;adcInterrupt.c: 6:     switch(channel){
  1281     001E  290B               	goto	l1500
  1282     001F                     l1442:
  1283                           
  1284                           ;adcInterrupt.c: 8:             ANSEL = ANSEL | 0b00000001;
  1285     001F  1683               	bsf	3,5	;RP0=1, select bank3
  1286     0020  1703               	bsf	3,6	;RP1=1, select bank3
  1287     0021  0808               	movf	8,w	;volatile
  1288     0022  3801               	iorlw	1
  1289     0023  0088               	movwf	8	;volatile
  1290                           
  1291                           ;adcInterrupt.c: 9:             TRISA = TRISA | 0b00000001;
  1292     0024  1683               	bsf	3,5	;RP0=1, select bank1
  1293     0025  1303               	bcf	3,6	;RP1=0, select bank1
  1294     0026  0805               	movf	5,w	;volatile
  1295     0027  3801               	iorlw	1
  1296     0028  0085               	movwf	5	;volatile
  1297     0029                     l1444:
  1298                           
  1299                           ;adcInterrupt.c: 10:             ADCON0bits.CHS = 0b0000;
  1300     0029  30C3               	movlw	-61
  1301     002A  1283               	bcf	3,5	;RP0=0, select bank0
  1302     002B  1303               	bcf	3,6	;RP1=0, select bank0
  1303     002C  059F               	andwf	31,f	;volatile
  1304                           
  1305                           ;adcInterrupt.c: 11:             break;
  1306     002D  293E               	goto	l29
  1307     002E                     l1446:
  1308                           
  1309                           ;adcInterrupt.c: 13:             ANSEL = ANSEL | 0b00000010;
  1310     002E  1683               	bsf	3,5	;RP0=1, select bank3
  1311     002F  1703               	bsf	3,6	;RP1=1, select bank3
  1312     0030  0808               	movf	8,w	;volatile
  1313     0031  3802               	iorlw	2
  1314     0032  0088               	movwf	8	;volatile
  1315                           
  1316                           ;adcInterrupt.c: 14:             TRISA = TRISA | 0b00000010;
  1317     0033  1683               	bsf	3,5	;RP0=1, select bank1
  1318     0034  1303               	bcf	3,6	;RP1=0, select bank1
  1319     0035  0805               	movf	5,w	;volatile
  1320     0036  3802               	iorlw	2
  1321     0037  0085               	movwf	5	;volatile
  1322     0038                     l1448:
  1323                           
  1324                           ;adcInterrupt.c: 15:             ADCON0bits.CHS = 0b0001;
  1325     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1327     003A  081F               	movf	31,w	;volatile
  1328     003B  39C3               	andlw	-61
  1329     003C  3804               	iorlw	4
  1330     003D  009F               	movwf	31	;volatile
  1331                           
  1332                           ;adcInterrupt.c: 16:             break;
  1333     003E  293E               	goto	l29
  1334     003F                     l1450:
  1335                           
  1336                           ;adcInterrupt.c: 18:             ANSEL = ANSEL | 0b00000100;
  1337     003F  1683               	bsf	3,5	;RP0=1, select bank3
  1338     0040  1703               	bsf	3,6	;RP1=1, select bank3
  1339     0041  0808               	movf	8,w	;volatile
  1340     0042  3804               	iorlw	4
  1341     0043  0088               	movwf	8	;volatile
  1342                           
  1343                           ;adcInterrupt.c: 19:             TRISA = TRISA | 0b00000100;
  1344     0044  1683               	bsf	3,5	;RP0=1, select bank1
  1345     0045  1303               	bcf	3,6	;RP1=0, select bank1
  1346     0046  0805               	movf	5,w	;volatile
  1347     0047  3804               	iorlw	4
  1348     0048  0085               	movwf	5	;volatile
  1349     0049                     l1452:
  1350                           
  1351                           ;adcInterrupt.c: 20:             ADCON0bits.CHS = 0b0010;
  1352     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1353     004A  1303               	bcf	3,6	;RP1=0, select bank0
  1354     004B  081F               	movf	31,w	;volatile
  1355     004C  39C3               	andlw	-61
  1356     004D  3808               	iorlw	8
  1357     004E  009F               	movwf	31	;volatile
  1358                           
  1359                           ;adcInterrupt.c: 21:             break;
  1360     004F  293E               	goto	l29
  1361     0050                     l1454:
  1362                           
  1363                           ;adcInterrupt.c: 23:             ANSEL = ANSEL | 0b00001000;
  1364     0050  1683               	bsf	3,5	;RP0=1, select bank3
  1365     0051  1703               	bsf	3,6	;RP1=1, select bank3
  1366     0052  0808               	movf	8,w	;volatile
  1367     0053  3808               	iorlw	8
  1368     0054  0088               	movwf	8	;volatile
  1369                           
  1370                           ;adcInterrupt.c: 24:             TRISA = TRISA | 0b00001000;
  1371     0055  1683               	bsf	3,5	;RP0=1, select bank1
  1372     0056  1303               	bcf	3,6	;RP1=0, select bank1
  1373     0057  0805               	movf	5,w	;volatile
  1374     0058  3808               	iorlw	8
  1375     0059  0085               	movwf	5	;volatile
  1376     005A                     l1456:
  1377                           
  1378                           ;adcInterrupt.c: 25:             ADCON0bits.CHS = 0b0011;
  1379     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1380     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1381     005C  081F               	movf	31,w	;volatile
  1382     005D  39C3               	andlw	-61
  1383     005E  380C               	iorlw	12
  1384     005F  009F               	movwf	31	;volatile
  1385                           
  1386                           ;adcInterrupt.c: 26:             break;
  1387     0060  293E               	goto	l29
  1388     0061                     l1458:
  1389                           
  1390                           ;adcInterrupt.c: 28:             ANSEL = ANSEL | 0b00010000;
  1391     0061  1683               	bsf	3,5	;RP0=1, select bank3
  1392     0062  1703               	bsf	3,6	;RP1=1, select bank3
  1393     0063  0808               	movf	8,w	;volatile
  1394     0064  3810               	iorlw	16
  1395     0065  0088               	movwf	8	;volatile
  1396                           
  1397                           ;adcInterrupt.c: 29:             TRISA = TRISA | 0b00100000;
  1398     0066  1683               	bsf	3,5	;RP0=1, select bank1
  1399     0067  1303               	bcf	3,6	;RP1=0, select bank1
  1400     0068  0805               	movf	5,w	;volatile
  1401     0069  3820               	iorlw	32
  1402     006A  0085               	movwf	5	;volatile
  1403     006B                     l1460:
  1404                           
  1405                           ;adcInterrupt.c: 30:             ADCON0bits.CHS = 0b0100;
  1406     006B  1283               	bcf	3,5	;RP0=0, select bank0
  1407     006C  1303               	bcf	3,6	;RP1=0, select bank0
  1408     006D  081F               	movf	31,w	;volatile
  1409     006E  39C3               	andlw	-61
  1410     006F  3810               	iorlw	16
  1411     0070  009F               	movwf	31	;volatile
  1412                           
  1413                           ;adcInterrupt.c: 31:             break;
  1414     0071  293E               	goto	l29
  1415     0072                     l1462:
  1416                           
  1417                           ;adcInterrupt.c: 33:             ANSEL = ANSEL | 0b00100000;
  1418     0072  1683               	bsf	3,5	;RP0=1, select bank3
  1419     0073  1703               	bsf	3,6	;RP1=1, select bank3
  1420     0074  0808               	movf	8,w	;volatile
  1421     0075  3820               	iorlw	32
  1422     0076  0088               	movwf	8	;volatile
  1423                           
  1424                           ;adcInterrupt.c: 34:             TRISE = TRISE | 0b00000001;
  1425     0077  1683               	bsf	3,5	;RP0=1, select bank1
  1426     0078  1303               	bcf	3,6	;RP1=0, select bank1
  1427     0079  0809               	movf	9,w	;volatile
  1428     007A  3801               	iorlw	1
  1429     007B  0089               	movwf	9	;volatile
  1430     007C                     l1464:
  1431                           
  1432                           ;adcInterrupt.c: 35:             ADCON0bits.CHS = 0b0101;
  1433     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1434     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1435     007E  081F               	movf	31,w	;volatile
  1436     007F  39C3               	andlw	-61
  1437     0080  3814               	iorlw	20
  1438     0081  009F               	movwf	31	;volatile
  1439                           
  1440                           ;adcInterrupt.c: 36:             break;
  1441     0082  293E               	goto	l29
  1442     0083                     l1466:
  1443                           
  1444                           ;adcInterrupt.c: 38:             ANSEL = ANSEL | 0b01000000;
  1445     0083  1683               	bsf	3,5	;RP0=1, select bank3
  1446     0084  1703               	bsf	3,6	;RP1=1, select bank3
  1447     0085  0808               	movf	8,w	;volatile
  1448     0086  3840               	iorlw	64
  1449     0087  0088               	movwf	8	;volatile
  1450                           
  1451                           ;adcInterrupt.c: 39:             TRISE = TRISE | 0b00000010;
  1452     0088  1683               	bsf	3,5	;RP0=1, select bank1
  1453     0089  1303               	bcf	3,6	;RP1=0, select bank1
  1454     008A  0809               	movf	9,w	;volatile
  1455     008B  3802               	iorlw	2
  1456     008C  0089               	movwf	9	;volatile
  1457     008D                     l1468:
  1458                           
  1459                           ;adcInterrupt.c: 40:             ADCON0bits.CHS = 0b0110;
  1460     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1461     008E  1303               	bcf	3,6	;RP1=0, select bank0
  1462     008F  081F               	movf	31,w	;volatile
  1463     0090  39C3               	andlw	-61
  1464     0091  3818               	iorlw	24
  1465     0092  009F               	movwf	31	;volatile
  1466                           
  1467                           ;adcInterrupt.c: 41:             break;
  1468     0093  293E               	goto	l29
  1469     0094                     l1470:
  1470                           
  1471                           ;adcInterrupt.c: 43:             ANSEL = ANSEL | 0b10000000;
  1472     0094  1683               	bsf	3,5	;RP0=1, select bank3
  1473     0095  1703               	bsf	3,6	;RP1=1, select bank3
  1474     0096  0808               	movf	8,w	;volatile
  1475     0097  3880               	iorlw	128
  1476     0098  0088               	movwf	8	;volatile
  1477                           
  1478                           ;adcInterrupt.c: 44:             TRISE = TRISE | 0b00000100;
  1479     0099  1683               	bsf	3,5	;RP0=1, select bank1
  1480     009A  1303               	bcf	3,6	;RP1=0, select bank1
  1481     009B  0809               	movf	9,w	;volatile
  1482     009C  3804               	iorlw	4
  1483     009D  0089               	movwf	9	;volatile
  1484     009E                     l1472:
  1485                           
  1486                           ;adcInterrupt.c: 45:             ADCON0bits.CHS = 0b0111;
  1487     009E  1283               	bcf	3,5	;RP0=0, select bank0
  1488     009F  1303               	bcf	3,6	;RP1=0, select bank0
  1489     00A0  081F               	movf	31,w	;volatile
  1490     00A1  39C3               	andlw	-61
  1491     00A2  381C               	iorlw	28
  1492     00A3  009F               	movwf	31	;volatile
  1493                           
  1494                           ;adcInterrupt.c: 46:             break;
  1495     00A4  293E               	goto	l29
  1496     00A5                     l1474:
  1497                           
  1498                           ;adcInterrupt.c: 48:             ANSELH = ANSELH | 0b00000001;
  1499     00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1500     00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1501     00A7  0809               	movf	9,w	;volatile
  1502     00A8  3801               	iorlw	1
  1503     00A9  0089               	movwf	9	;volatile
  1504                           
  1505                           ;adcInterrupt.c: 49:             TRISB = TRISB | 0b00000100;
  1506     00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1507     00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1508     00AC  0806               	movf	6,w	;volatile
  1509     00AD  3804               	iorlw	4
  1510     00AE  0086               	movwf	6	;volatile
  1511     00AF                     l1476:
  1512                           
  1513                           ;adcInterrupt.c: 50:             ADCON0bits.CHS = 0b1000;
  1514     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1515     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1516     00B1  081F               	movf	31,w	;volatile
  1517     00B2  39C3               	andlw	-61
  1518     00B3  3820               	iorlw	32
  1519     00B4  009F               	movwf	31	;volatile
  1520                           
  1521                           ;adcInterrupt.c: 51:             break;
  1522     00B5  293E               	goto	l29
  1523     00B6                     l1478:
  1524                           
  1525                           ;adcInterrupt.c: 53:             ANSELH = ANSELH | 0b00000010;
  1526     00B6  1683               	bsf	3,5	;RP0=1, select bank3
  1527     00B7  1703               	bsf	3,6	;RP1=1, select bank3
  1528     00B8  0809               	movf	9,w	;volatile
  1529     00B9  3802               	iorlw	2
  1530     00BA  0089               	movwf	9	;volatile
  1531                           
  1532                           ;adcInterrupt.c: 54:             TRISB = TRISB | 0b00001000;
  1533     00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1534     00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1535     00BD  0806               	movf	6,w	;volatile
  1536     00BE  3808               	iorlw	8
  1537     00BF  0086               	movwf	6	;volatile
  1538     00C0                     l1480:
  1539                           
  1540                           ;adcInterrupt.c: 55:             ADCON0bits.CHS = 0b1001;
  1541     00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1542     00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1543     00C2  081F               	movf	31,w	;volatile
  1544     00C3  39C3               	andlw	-61
  1545     00C4  3824               	iorlw	36
  1546     00C5  009F               	movwf	31	;volatile
  1547                           
  1548                           ;adcInterrupt.c: 56:             break;
  1549     00C6  293E               	goto	l29
  1550     00C7                     l1482:
  1551                           
  1552                           ;adcInterrupt.c: 58:             ANSELH = ANSELH | 0b00000100;
  1553     00C7  1683               	bsf	3,5	;RP0=1, select bank3
  1554     00C8  1703               	bsf	3,6	;RP1=1, select bank3
  1555     00C9  0809               	movf	9,w	;volatile
  1556     00CA  3804               	iorlw	4
  1557     00CB  0089               	movwf	9	;volatile
  1558                           
  1559                           ;adcInterrupt.c: 59:             TRISB = TRISB | 0b00000010;
  1560     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1561     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1562     00CE  0806               	movf	6,w	;volatile
  1563     00CF  3802               	iorlw	2
  1564     00D0  0086               	movwf	6	;volatile
  1565     00D1                     l1484:
  1566                           
  1567                           ;adcInterrupt.c: 60:             ADCON0bits.CHS = 0b1010;
  1568     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1569     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1570     00D3  081F               	movf	31,w	;volatile
  1571     00D4  39C3               	andlw	-61
  1572     00D5  3828               	iorlw	40
  1573     00D6  009F               	movwf	31	;volatile
  1574                           
  1575                           ;adcInterrupt.c: 61:             break;
  1576     00D7  293E               	goto	l29
  1577     00D8                     l1486:
  1578                           
  1579                           ;adcInterrupt.c: 63:             ANSELH = ANSELH | 0b00001000;
  1580     00D8  1683               	bsf	3,5	;RP0=1, select bank3
  1581     00D9  1703               	bsf	3,6	;RP1=1, select bank3
  1582     00DA  0809               	movf	9,w	;volatile
  1583     00DB  3808               	iorlw	8
  1584     00DC  0089               	movwf	9	;volatile
  1585                           
  1586                           ;adcInterrupt.c: 64:             TRISB = TRISB | 0b00010000;
  1587     00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1588     00DE  1303               	bcf	3,6	;RP1=0, select bank1
  1589     00DF  0806               	movf	6,w	;volatile
  1590     00E0  3810               	iorlw	16
  1591     00E1  0086               	movwf	6	;volatile
  1592     00E2                     l1488:
  1593                           
  1594                           ;adcInterrupt.c: 65:             ADCON0bits.CHS = 0b1011;
  1595     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1596     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1597     00E4  081F               	movf	31,w	;volatile
  1598     00E5  39C3               	andlw	-61
  1599     00E6  382C               	iorlw	44
  1600     00E7  009F               	movwf	31	;volatile
  1601                           
  1602                           ;adcInterrupt.c: 66:             break;
  1603     00E8  293E               	goto	l29
  1604     00E9                     l1490:
  1605                           
  1606                           ;adcInterrupt.c: 68:             ANSELH = ANSELH | 0b00010000;
  1607     00E9  1683               	bsf	3,5	;RP0=1, select bank3
  1608     00EA  1703               	bsf	3,6	;RP1=1, select bank3
  1609     00EB  0809               	movf	9,w	;volatile
  1610     00EC  3810               	iorlw	16
  1611     00ED  0089               	movwf	9	;volatile
  1612                           
  1613                           ;adcInterrupt.c: 69:             TRISB = TRISB | 0b00000001;
  1614     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1615     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1616     00F0  0806               	movf	6,w	;volatile
  1617     00F1  3801               	iorlw	1
  1618     00F2  0086               	movwf	6	;volatile
  1619     00F3                     l1492:
  1620                           
  1621                           ;adcInterrupt.c: 70:             ADCON0bits.CHS = 0b1100;
  1622     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1623     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1624     00F5  081F               	movf	31,w	;volatile
  1625     00F6  39C3               	andlw	-61
  1626     00F7  3830               	iorlw	48
  1627     00F8  009F               	movwf	31	;volatile
  1628                           
  1629                           ;adcInterrupt.c: 71:             break;
  1630     00F9  293E               	goto	l29
  1631     00FA                     l1494:
  1632                           
  1633                           ;adcInterrupt.c: 73:             ANSELH = ANSELH | 0b00100000;
  1634     00FA  1683               	bsf	3,5	;RP0=1, select bank3
  1635     00FB  1703               	bsf	3,6	;RP1=1, select bank3
  1636     00FC  0809               	movf	9,w	;volatile
  1637     00FD  3820               	iorlw	32
  1638     00FE  0089               	movwf	9	;volatile
  1639                           
  1640                           ;adcInterrupt.c: 74:             TRISB = TRISB | 0b00100000;
  1641     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1642     0100  1303               	bcf	3,6	;RP1=0, select bank1
  1643     0101  0806               	movf	6,w	;volatile
  1644     0102  3820               	iorlw	32
  1645     0103  0086               	movwf	6	;volatile
  1646     0104                     l1496:
  1647                           
  1648                           ;adcInterrupt.c: 75:             ADCON0bits.CHS = 0b1101;
  1649     0104  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0105  1303               	bcf	3,6	;RP1=0, select bank0
  1651     0106  081F               	movf	31,w	;volatile
  1652     0107  39C3               	andlw	-61
  1653     0108  3834               	iorlw	52
  1654     0109  009F               	movwf	31	;volatile
  1655                           
  1656                           ;adcInterrupt.c: 76:             break;
  1657     010A  293E               	goto	l29
  1658     010B                     l1500:
  1659                           
  1660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 1, Range of values is 0 to 0
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte            4     3 (average)
  1666                           ; direct_byte           11     8 (fixed)
  1667                           ; jumptable            260     6 (fixed)
  1668                           ;	Chosen strategy is simple_byte
  1669     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1670     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1671     010D  083A               	movf	adc_init@channel+1,w
  1672     010E  3A00               	xorlw	0	; case 0
  1673     010F  1903               	skipnz
  1674     0110  2912               	goto	l1972
  1675     0111  293E               	goto	l29
  1676     0112                     l1972:
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 14, Range of values is 0 to 13
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte           43    22 (average)
  1683                           ; direct_byte           50     8 (fixed)
  1684                           ; jumptable            260     6 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686     0112  0839               	movf	adc_init@channel,w
  1687     0113  3A00               	xorlw	0	; case 0
  1688     0114  1903               	skipnz
  1689     0115  281F               	goto	l1442
  1690     0116  3A01               	xorlw	1	; case 1
  1691     0117  1903               	skipnz
  1692     0118  282E               	goto	l1446
  1693     0119  3A03               	xorlw	3	; case 2
  1694     011A  1903               	skipnz
  1695     011B  283F               	goto	l1450
  1696     011C  3A01               	xorlw	1	; case 3
  1697     011D  1903               	skipnz
  1698     011E  2850               	goto	l1454
  1699     011F  3A07               	xorlw	7	; case 4
  1700     0120  1903               	skipnz
  1701     0121  2861               	goto	l1458
  1702     0122  3A01               	xorlw	1	; case 5
  1703     0123  1903               	skipnz
  1704     0124  2872               	goto	l1462
  1705     0125  3A03               	xorlw	3	; case 6
  1706     0126  1903               	skipnz
  1707     0127  2883               	goto	l1466
  1708     0128  3A01               	xorlw	1	; case 7
  1709     0129  1903               	skipnz
  1710     012A  2894               	goto	l1470
  1711     012B  3A0F               	xorlw	15	; case 8
  1712     012C  1903               	skipnz
  1713     012D  28A5               	goto	l1474
  1714     012E  3A01               	xorlw	1	; case 9
  1715     012F  1903               	skipnz
  1716     0130  28B6               	goto	l1478
  1717     0131  3A03               	xorlw	3	; case 10
  1718     0132  1903               	skipnz
  1719     0133  28C7               	goto	l1482
  1720     0134  3A01               	xorlw	1	; case 11
  1721     0135  1903               	skipnz
  1722     0136  28D8               	goto	l1486
  1723     0137  3A07               	xorlw	7	; case 12
  1724     0138  1903               	skipnz
  1725     0139  28E9               	goto	l1490
  1726     013A  3A01               	xorlw	1	; case 13
  1727     013B  1903               	skipnz
  1728     013C  28FA               	goto	l1494
  1729     013D  293E               	goto	l29
  1730     013E                     l29:
  1731                           
  1732                           ;adcInterrupt.c: 79:     ADCON1bits.ADFM = 0;
  1733     013E  1683               	bsf	3,5	;RP0=1, select bank1
  1734     013F  1303               	bcf	3,6	;RP1=0, select bank1
  1735     0140  139F               	bcf	31,7	;volatile
  1736                           
  1737                           ;adcInterrupt.c: 80:     ADCON1bits.VCFG0 = 0;
  1738     0141  121F               	bcf	31,4	;volatile
  1739                           
  1740                           ;adcInterrupt.c: 81:     ADCON1bits.VCFG1 = 0;
  1741     0142  129F               	bcf	31,5	;volatile
  1742     0143                     l1502:
  1743                           
  1744                           ;adcInterrupt.c: 83:     ADCON0bits.ADCS = 0b10;
  1745     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1746     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1747     0145  081F               	movf	31,w	;volatile
  1748     0146  393F               	andlw	-193
  1749     0147  3880               	iorlw	128
  1750     0148  009F               	movwf	31	;volatile
  1751     0149                     l1504:
  1752                           
  1753                           ;adcInterrupt.c: 84:     ADCON0bits.ADON = 1;
  1754     0149  141F               	bsf	31,0	;volatile
  1755     014A                     l1506:
  1756                           
  1757                           ;adcInterrupt.c: 85:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1758     014A  3020               	movlw	32
  1759     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1760     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1761     014D  00BB               	movwf	??_adc_init
  1762     014E                     u1117:
  1763     014E  0BBB               	decfsz	??_adc_init,f
  1764     014F  294E               	goto	u1117
  1765     0150  0000               	nop
  1766     0151                     l1508:
  1767                           
  1768                           ;adcInterrupt.c: 87:     PIR1bits.ADIF = 0;
  1769     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1770     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0153  130C               	bcf	12,6	;volatile
  1772     0154                     l1510:
  1773                           
  1774                           ;adcInterrupt.c: 88:     PIE1bits.ADIE = 1;
  1775     0154  1683               	bsf	3,5	;RP0=1, select bank1
  1776     0155  1303               	bcf	3,6	;RP1=0, select bank1
  1777     0156  170C               	bsf	12,6	;volatile
  1778     0157                     l1512:
  1779                           
  1780                           ;adcInterrupt.c: 89:     INTCONbits.PEIE = 1;
  1781     0157  170B               	bsf	11,6	;volatile
  1782     0158                     l1514:
  1783                           
  1784                           ;adcInterrupt.c: 90:     INTCONbits.GIE = 1;
  1785     0158  178B               	bsf	11,7	;volatile
  1786     0159                     l43:
  1787     0159  0008               	return
  1788     015A                     __end_of_adc_init:
  1789                           
  1790                           	psect	text3
  1791     069D                     __ptext3:	
  1792 ;; *************** function _UART_TX_config *****************
  1793 ;; Defined at:
  1794 ;;		line 20 in file "Usart.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  baudrate        2   25[BANK0 ] unsigned int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       2       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       2       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 3
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_setup
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     069D                     _UART_TX_config:	
  1823                           ;psect for function _UART_TX_config
  1824                           
  1825     069D                     l1532:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _UART_TX_config: [wreg+status,2]
  1828                           
  1829                           
  1830                           ;Usart.c: 21:     TXSTAbits.SYNC = 0;
  1831     069D  1683               	bsf	3,5	;RP0=1, select bank1
  1832     069E  1303               	bcf	3,6	;RP1=0, select bank1
  1833     069F  1218               	bcf	24,4	;volatile
  1834                           
  1835                           ;Usart.c: 22:     TXSTAbits.BRGH = 1;
  1836     06A0  1518               	bsf	24,2	;volatile
  1837                           
  1838                           ;Usart.c: 24:     BAUDCTLbits.BRG16 = 1;
  1839     06A1  1683               	bsf	3,5	;RP0=1, select bank3
  1840     06A2  1703               	bsf	3,6	;RP1=1, select bank3
  1841     06A3  1587               	bsf	7,3	;volatile
  1842     06A4                     l1534:
  1843                           
  1844                           ;Usart.c: 26:     SPBRG = baudrate;
  1845     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1846     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1847     06A6  0839               	movf	UART_TX_config@baudrate,w
  1848     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  1849     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  1850     06A9  0099               	movwf	25	;volatile
  1851     06AA                     l1536:
  1852                           
  1853                           ;Usart.c: 27:     SPBRGH = 0;
  1854     06AA  019A               	clrf	26	;volatile
  1855     06AB                     l1538:
  1856                           
  1857                           ;Usart.c: 29:     TXSTAbits.TXEN = 1;
  1858     06AB  1698               	bsf	24,5	;volatile
  1859     06AC                     l268:
  1860     06AC  0008               	return
  1861     06AD                     __end_of_UART_TX_config:
  1862                           
  1863                           	psect	text4
  1864     0674                     __ptext4:	
  1865 ;; *************** function _UART_RX_config *****************
  1866 ;; Defined at:
  1867 ;;		line 3 in file "Usart.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  baudrate        2   25[BANK0 ] unsigned int 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       2       0       0       0
  1882 ;;      Locals:         0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0
  1884 ;;      Totals:         0       2       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 3
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_setup
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895     0674                     _UART_RX_config:	
  1896                           ;psect for function _UART_RX_config
  1897                           
  1898     0674                     l1542:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _UART_RX_config: [wreg+status,2]
  1901                           
  1902                           
  1903                           ;Usart.c: 5:     BAUDCTLbits.BRG16 = 1;
  1904     0674  1683               	bsf	3,5	;RP0=1, select bank3
  1905     0675  1703               	bsf	3,6	;RP1=1, select bank3
  1906     0676  1587               	bsf	7,3	;volatile
  1907     0677                     l1544:
  1908                           
  1909                           ;Usart.c: 7:     SPBRG = baudrate;
  1910     0677  1283               	bcf	3,5	;RP0=0, select bank0
  1911     0678  1303               	bcf	3,6	;RP1=0, select bank0
  1912     0679  0839               	movf	UART_RX_config@baudrate,w
  1913     067A  1683               	bsf	3,5	;RP0=1, select bank1
  1914     067B  1303               	bcf	3,6	;RP1=0, select bank1
  1915     067C  0099               	movwf	25	;volatile
  1916     067D                     l1546:
  1917                           
  1918                           ;Usart.c: 8:     SPBRGH = 0;
  1919     067D  019A               	clrf	26	;volatile
  1920     067E                     l1548:
  1921                           
  1922                           ;Usart.c: 10:     RCSTAbits.SPEN = 1;
  1923     067E  1283               	bcf	3,5	;RP0=0, select bank0
  1924     067F  1303               	bcf	3,6	;RP1=0, select bank0
  1925     0680  1798               	bsf	24,7	;volatile
  1926     0681                     l1550:
  1927                           
  1928                           ;Usart.c: 11:     RCSTAbits.RX9 = 0;
  1929     0681  1318               	bcf	24,6	;volatile
  1930     0682                     l1552:
  1931                           
  1932                           ;Usart.c: 12:     RCSTAbits.CREN = 1;
  1933     0682  1618               	bsf	24,4	;volatile
  1934     0683                     l1554:
  1935                           
  1936                           ;Usart.c: 14:     PIR1bits.RCIF = 0;
  1937     0683  128C               	bcf	12,5	;volatile
  1938     0684                     l1556:
  1939                           
  1940                           ;Usart.c: 15:     PIE1bits.RCIE = 1;
  1941     0684  1683               	bsf	3,5	;RP0=1, select bank1
  1942     0685  1303               	bcf	3,6	;RP1=0, select bank1
  1943     0686  168C               	bsf	12,5	;volatile
  1944     0687                     l1558:
  1945                           
  1946                           ;Usart.c: 16:     INTCONbits.PEIE = 1;
  1947     0687  170B               	bsf	11,6	;volatile
  1948     0688                     l1560:
  1949                           
  1950                           ;Usart.c: 17:     INTCONbits.GIE = 1;
  1951     0688  178B               	bsf	11,7	;volatile
  1952     0689                     l265:
  1953     0689  0008               	return
  1954     068A                     __end_of_UART_RX_config:
  1955                           
  1956                           	psect	text5
  1957     04B0                     __ptext5:	
  1958 ;; *************** function _NumtoChar *****************
  1959 ;; Defined at:
  1960 ;;		line 140 in file "Dig2lab2.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  a               2   25[BANK0 ] int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      unsigned char 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       2       0       0       0
  1975 ;;      Locals:         0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0
  1977 ;;      Totals:         0       2       0       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 3
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988     04B0                     _NumtoChar:	
  1989                           ;psect for function _NumtoChar
  1990                           
  1991     04B0                     l1694:	
  1992                           ;incstack = 0
  1993                           ; Regs used in _NumtoChar: [wreg-fsr0h+status,2+status,0]
  1994                           
  1995                           
  1996                           ;Dig2lab2.c: 141:     switch(a){
  1997     04B0  2CC5               	goto	l1738
  1998     04B1                     l1696:
  1999                           
  2000                           ;Dig2lab2.c: 143:             return '0';
  2001     04B1  3030               	movlw	48
  2002     04B2  2CEC               	goto	l161
  2003     04B3                     l1700:
  2004                           
  2005                           ;Dig2lab2.c: 145:             return '1';
  2006     04B3  3031               	movlw	49
  2007     04B4  2CEC               	goto	l161
  2008     04B5                     l1704:
  2009                           
  2010                           ;Dig2lab2.c: 147:             return '2';
  2011     04B5  3032               	movlw	50
  2012     04B6  2CEC               	goto	l161
  2013     04B7                     l1708:
  2014                           
  2015                           ;Dig2lab2.c: 149:             return '3';
  2016     04B7  3033               	movlw	51
  2017     04B8  2CEC               	goto	l161
  2018     04B9                     l1712:
  2019                           
  2020                           ;Dig2lab2.c: 151:             return '4';
  2021     04B9  3034               	movlw	52
  2022     04BA  2CEC               	goto	l161
  2023     04BB                     l1716:
  2024                           
  2025                           ;Dig2lab2.c: 153:             return '5';
  2026     04BB  3035               	movlw	53
  2027     04BC  2CEC               	goto	l161
  2028     04BD                     l1720:
  2029                           
  2030                           ;Dig2lab2.c: 155:             return '6';
  2031     04BD  3036               	movlw	54
  2032     04BE  2CEC               	goto	l161
  2033     04BF                     l1724:
  2034                           
  2035                           ;Dig2lab2.c: 157:             return '7';
  2036     04BF  3037               	movlw	55
  2037     04C0  2CEC               	goto	l161
  2038     04C1                     l1728:
  2039                           
  2040                           ;Dig2lab2.c: 159:             return '8';
  2041     04C1  3038               	movlw	56
  2042     04C2  2CEC               	goto	l161
  2043     04C3                     l1732:
  2044                           
  2045                           ;Dig2lab2.c: 161:             return '9';
  2046     04C3  3039               	movlw	57
  2047     04C4  2CEC               	goto	l161
  2048     04C5                     l1738:
  2049                           
  2050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2051                           ; Switch size 1, requested type "simple"
  2052                           ; Number of cases is 1, Range of values is 0 to 0
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte            4     3 (average)
  2056                           ; direct_byte           11     8 (fixed)
  2057                           ; jumptable            260     6 (fixed)
  2058                           ;	Chosen strategy is simple_byte
  2059     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2060     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2061     04C7  083A               	movf	NumtoChar@a+1,w
  2062     04C8  3A00               	xorlw	0	; case 0
  2063     04C9  1903               	skipnz
  2064     04CA  2CCC               	goto	l1974
  2065     04CB  2CEC               	goto	l161
  2066     04CC                     l1974:
  2067                           
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 10, Range of values is 0 to 9
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte           31    16 (average)
  2073                           ; direct_byte           38     8 (fixed)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076     04CC  0839               	movf	NumtoChar@a,w
  2077     04CD  3A00               	xorlw	0	; case 0
  2078     04CE  1903               	skipnz
  2079     04CF  2CB1               	goto	l1696
  2080     04D0  3A01               	xorlw	1	; case 1
  2081     04D1  1903               	skipnz
  2082     04D2  2CB3               	goto	l1700
  2083     04D3  3A03               	xorlw	3	; case 2
  2084     04D4  1903               	skipnz
  2085     04D5  2CB5               	goto	l1704
  2086     04D6  3A01               	xorlw	1	; case 3
  2087     04D7  1903               	skipnz
  2088     04D8  2CB7               	goto	l1708
  2089     04D9  3A07               	xorlw	7	; case 4
  2090     04DA  1903               	skipnz
  2091     04DB  2CB9               	goto	l1712
  2092     04DC  3A01               	xorlw	1	; case 5
  2093     04DD  1903               	skipnz
  2094     04DE  2CBB               	goto	l1716
  2095     04DF  3A03               	xorlw	3	; case 6
  2096     04E0  1903               	skipnz
  2097     04E1  2CBD               	goto	l1720
  2098     04E2  3A01               	xorlw	1	; case 7
  2099     04E3  1903               	skipnz
  2100     04E4  2CBF               	goto	l1724
  2101     04E5  3A0F               	xorlw	15	; case 8
  2102     04E6  1903               	skipnz
  2103     04E7  2CC1               	goto	l1728
  2104     04E8  3A01               	xorlw	1	; case 9
  2105     04E9  1903               	skipnz
  2106     04EA  2CC3               	goto	l1732
  2107     04EB  2CEC               	goto	l161
  2108     04EC                     l161:
  2109     04EC  0008               	return
  2110     04ED                     __end_of_NumtoChar:
  2111                           
  2112                           	psect	text6
  2113     05D0                     __ptext6:	
  2114 ;; *************** function _Lcd_Write_String *****************
  2115 ;; Defined at:
  2116 ;;		line 91 in file "LCD8bits.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  a               1    wreg     PTR unsigned char 
  2119 ;;		 -> STR_2(6), STR_1(7), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  a               1   30[BANK0 ] PTR unsigned char 
  2122 ;;		 -> STR_2(6), STR_1(7), 
  2123 ;;  i               2   28[BANK0 ] int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       3       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       3       0       0       0
  2137 ;;Total ram usage:        3 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 5
  2140 ;; This function calls:
  2141 ;;		_Lcd_Write_Char
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     05D0                     _Lcd_Write_String:	
  2148                           ;psect for function _Lcd_Write_String
  2149                           
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153                           ;Lcd_Write_String@a stored from wreg
  2154     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2155     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2156     05D2  00BE               	movwf	Lcd_Write_String@a
  2157     05D3                     l1686:
  2158                           
  2159                           ;LCD8bits.c: 92:     int i;;LCD8bits.c: 93:     for (i = 0; a[i] != '\0'; i++)
  2160     05D3  01BC               	clrf	Lcd_Write_String@i
  2161     05D4  01BD               	clrf	Lcd_Write_String@i+1
  2162     05D5  2DEB               	goto	l1692
  2163     05D6                     l1688:
  2164                           
  2165                           ;LCD8bits.c: 94:         Lcd_Write_Char(a[i]);
  2166     05D6  083C               	movf	Lcd_Write_String@i,w
  2167     05D7  073E               	addwf	Lcd_Write_String@a,w
  2168     05D8  0084               	movwf	4
  2169     05D9  120A  118A  268A  120A  118A  	fcall	stringdir
  2170     05DE  120A  118A  265C  120A  118A  	fcall	_Lcd_Write_Char
  2171     05E3                     l1690:
  2172     05E3  3001               	movlw	1
  2173     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2174     05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2175     05E6  07BC               	addwf	Lcd_Write_String@i,f
  2176     05E7  1803               	skipnc
  2177     05E8  0ABD               	incf	Lcd_Write_String@i+1,f
  2178     05E9  3000               	movlw	0
  2179     05EA  07BD               	addwf	Lcd_Write_String@i+1,f
  2180     05EB                     l1692:
  2181     05EB  083C               	movf	Lcd_Write_String@i,w
  2182     05EC  073E               	addwf	Lcd_Write_String@a,w
  2183     05ED  0084               	movwf	4
  2184     05EE  120A  118A  268A  120A  118A  	fcall	stringdir
  2185     05F3  3A00               	xorlw	0
  2186     05F4  1D03               	skipz
  2187     05F5  2DF7               	goto	u791
  2188     05F6  2DF8               	goto	u790
  2189     05F7                     u791:
  2190     05F7  2DD6               	goto	l1688
  2191     05F8                     u790:
  2192     05F8                     l236:
  2193     05F8  0008               	return
  2194     05F9                     __end_of_Lcd_Write_String:
  2195                           
  2196                           	psect	text7
  2197     065C                     __ptext7:	
  2198 ;; *************** function _Lcd_Write_Char *****************
  2199 ;; Defined at:
  2200 ;;		line 83 in file "LCD8bits.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  a               1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  a               1   27[BANK0 ] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       1       0       0       0
  2216 ;;      Temps:          0       1       0       0       0
  2217 ;;      Totals:         0       2       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 4
  2221 ;; This function calls:
  2222 ;;		_Lcd_Port
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;;		_Lcd_Write_String
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229     065C                     _Lcd_Write_Char:	
  2230                           ;psect for function _Lcd_Write_Char
  2231                           
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2235                           ;Lcd_Write_Char@a stored from wreg
  2236     065C  1283               	bcf	3,5	;RP0=0, select bank0
  2237     065D  1303               	bcf	3,6	;RP1=0, select bank0
  2238     065E  00BB               	movwf	Lcd_Write_Char@a
  2239     065F                     l1522:
  2240                           
  2241                           ;LCD8bits.c: 84:     PORTEbits.RE0 = 1;
  2242     065F  1409               	bsf	9,0	;volatile
  2243     0660                     l1524:
  2244                           
  2245                           ;LCD8bits.c: 85:     Lcd_Port(a);
  2246     0660  083B               	movf	Lcd_Write_Char@a,w
  2247     0661  120A  118A  24ED  120A  118A  	fcall	_Lcd_Port
  2248     0666                     l1526:
  2249                           
  2250                           ;LCD8bits.c: 86:     RE1 = 1;
  2251     0666  1283               	bcf	3,5	;RP0=0, select bank0
  2252     0667  1303               	bcf	3,6	;RP1=0, select bank0
  2253     0668  1489               	bsf	9,1	;volatile
  2254     0669                     l1528:
  2255                           
  2256                           ;LCD8bits.c: 87:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2257     0669  3019               	movlw	25
  2258     066A  1283               	bcf	3,5	;RP0=0, select bank0
  2259     066B  1303               	bcf	3,6	;RP1=0, select bank0
  2260     066C  00BA               	movwf	??_Lcd_Write_Char
  2261     066D                     u1127:
  2262     066D  0BBA               	decfsz	??_Lcd_Write_Char,f
  2263     066E  2E6D               	goto	u1127
  2264     066F  2E70               	nop2
  2265     0670                     l1530:
  2266                           
  2267                           ;LCD8bits.c: 88:     RE1 = 0;
  2268     0670  1283               	bcf	3,5	;RP0=0, select bank0
  2269     0671  1303               	bcf	3,6	;RP1=0, select bank0
  2270     0672  1089               	bcf	9,1	;volatile
  2271     0673                     l230:
  2272     0673  0008               	return
  2273     0674                     __end_of_Lcd_Write_Char:
  2274                           
  2275                           	psect	text8
  2276     061E                     __ptext8:	
  2277 ;; *************** function _Lcd_Set_Cursor *****************
  2278 ;; Defined at:
  2279 ;;		line 58 in file "LCD8bits.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  a               1    wreg     unsigned char 
  2282 ;;  b               1   29[BANK0 ] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  a               1   30[BANK0 ] unsigned char 
  2285 ;;  temp            1   31[BANK0 ] unsigned char 
  2286 ;;  y               1    0        unsigned char 
  2287 ;;  z               1    0        unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       1       0       0       0
  2298 ;;      Locals:         0       2       0       0       0
  2299 ;;      Temps:          0       0       0       0       0
  2300 ;;      Totals:         0       3       0       0       0
  2301 ;;Total ram usage:        3 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 5
  2304 ;; This function calls:
  2305 ;;		_Lcd_Cmd
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311     061E                     _Lcd_Set_Cursor:	
  2312                           ;psect for function _Lcd_Set_Cursor
  2313                           
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2317                           ;Lcd_Set_Cursor@a stored from wreg
  2318     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2319     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0620  00BE               	movwf	Lcd_Set_Cursor@a
  2321     0621                     l1674:
  2322                           
  2323                           ;LCD8bits.c: 59:     char temp, z, y;;LCD8bits.c: 60:     if (a == 1) {
  2324     0621  033E               	decf	Lcd_Set_Cursor@a,w
  2325     0622  1D03               	btfss	3,2
  2326     0623  2E25               	goto	u771
  2327     0624  2E26               	goto	u770
  2328     0625                     u771:
  2329     0625  2E30               	goto	l1680
  2330     0626                     u770:
  2331     0626                     l1676:
  2332                           
  2333                           ;LCD8bits.c: 61:         temp = 0x80 + b - 1;
  2334     0626  083D               	movf	Lcd_Set_Cursor@b,w
  2335     0627  3E7F               	addlw	127
  2336     0628  00BF               	movwf	Lcd_Set_Cursor@temp
  2337     0629                     l1678:
  2338                           
  2339                           ;LCD8bits.c: 62:         Lcd_Cmd(temp);
  2340     0629  083F               	movf	Lcd_Set_Cursor@temp,w
  2341     062A  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2342                           
  2343                           ;LCD8bits.c: 63:     } else if (a == 2) {
  2344     062F  2E3F               	goto	l224
  2345     0630                     l1680:
  2346     0630  3002               	movlw	2
  2347     0631  063E               	xorwf	Lcd_Set_Cursor@a,w
  2348     0632  1D03               	btfss	3,2
  2349     0633  2E35               	goto	u781
  2350     0634  2E36               	goto	u780
  2351     0635                     u781:
  2352     0635  2E3F               	goto	l224
  2353     0636                     u780:
  2354     0636                     l1682:
  2355                           
  2356                           ;LCD8bits.c: 64:         temp = 0xC0 + b - 1;
  2357     0636  083D               	movf	Lcd_Set_Cursor@b,w
  2358     0637  3EBF               	addlw	191
  2359     0638  00BF               	movwf	Lcd_Set_Cursor@temp
  2360     0639                     l1684:
  2361                           
  2362                           ;LCD8bits.c: 65:         Lcd_Cmd(temp);
  2363     0639  083F               	movf	Lcd_Set_Cursor@temp,w
  2364     063A  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2365     063F                     l224:
  2366     063F  0008               	return
  2367     0640                     __end_of_Lcd_Set_Cursor:
  2368                           
  2369                           	psect	text9
  2370     0422                     __ptext9:	
  2371 ;; *************** function _Lcd_Init *****************
  2372 ;; Defined at:
  2373 ;;		line 69 in file "LCD8bits.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0
  2389 ;;      Temps:          0       2       0       0       0
  2390 ;;      Totals:         0       2       0       0       0
  2391 ;;Total ram usage:        2 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 5
  2394 ;; This function calls:
  2395 ;;		_Lcd_Cmd
  2396 ;;		_Lcd_Port
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402     0422                     _Lcd_Init:	
  2403                           ;psect for function _Lcd_Init
  2404                           
  2405     0422                     l1662:	
  2406                           ;incstack = 0
  2407                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2408                           
  2409                           
  2410                           ;LCD8bits.c: 70:     Lcd_Port(0x00);
  2411     0422  3000               	movlw	0
  2412     0423  120A  118A  24ED  120A  118A  	fcall	_Lcd_Port
  2413     0428                     l1664:
  2414                           
  2415                           ;LCD8bits.c: 71:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2416     0428  3034               	movlw	52
  2417     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2418     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2419     042B  00BE               	movwf	??_Lcd_Init+1
  2420     042C  30F1               	movlw	241
  2421     042D  00BD               	movwf	??_Lcd_Init
  2422     042E                     u1137:
  2423     042E  0BBD               	decfsz	??_Lcd_Init,f
  2424     042F  2C2E               	goto	u1137
  2425     0430  0BBE               	decfsz	??_Lcd_Init+1,f
  2426     0431  2C2E               	goto	u1137
  2427     0432                     l1666:
  2428                           
  2429                           ;LCD8bits.c: 72:     Lcd_Cmd(0x30);
  2430     0432  3030               	movlw	48
  2431     0433  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2432                           
  2433                           ;LCD8bits.c: 73:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2434     0438  300D               	movlw	13
  2435     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2436     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2437     043B  00BE               	movwf	??_Lcd_Init+1
  2438     043C  30FB               	movlw	251
  2439     043D  00BD               	movwf	??_Lcd_Init
  2440     043E                     u1147:
  2441     043E  0BBD               	decfsz	??_Lcd_Init,f
  2442     043F  2C3E               	goto	u1147
  2443     0440  0BBE               	decfsz	??_Lcd_Init+1,f
  2444     0441  2C3E               	goto	u1147
  2445     0442                     l1668:
  2446                           
  2447                           ;LCD8bits.c: 74:     Lcd_Cmd(0x30);
  2448     0442  3030               	movlw	48
  2449     0443  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2450     0448                     l1670:
  2451                           
  2452                           ;LCD8bits.c: 75:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2453     0448  301D               	movlw	29
  2454     0449  1283               	bcf	3,5	;RP0=0, select bank0
  2455     044A  1303               	bcf	3,6	;RP1=0, select bank0
  2456     044B  00BE               	movwf	??_Lcd_Init+1
  2457     044C  3090               	movlw	144
  2458     044D  00BD               	movwf	??_Lcd_Init
  2459     044E                     u1157:
  2460     044E  0BBD               	decfsz	??_Lcd_Init,f
  2461     044F  2C4E               	goto	u1157
  2462     0450  0BBE               	decfsz	??_Lcd_Init+1,f
  2463     0451  2C4E               	goto	u1157
  2464     0452  0000               	nop
  2465                           
  2466                           ;LCD8bits.c: 76:     Lcd_Cmd(0x30);
  2467     0453  3030               	movlw	48
  2468     0454  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2469                           
  2470                           ;LCD8bits.c: 78:     Lcd_Cmd(0x38);
  2471     0459  3038               	movlw	56
  2472     045A  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2473                           
  2474                           ;LCD8bits.c: 79:     Lcd_Cmd(0x0C);
  2475     045F  300C               	movlw	12
  2476     0460  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2477                           
  2478                           ;LCD8bits.c: 80:     Lcd_Cmd(0x06);
  2479     0465  3006               	movlw	6
  2480     0466  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2481     046B                     l227:
  2482     046B  0008               	return
  2483     046C                     __end_of_Lcd_Init:
  2484                           
  2485                           	psect	text10
  2486     06AD                     __ptext10:	
  2487 ;; *************** function _Lcd_Clear *****************
  2488 ;; Defined at:
  2489 ;;		line 53 in file "LCD8bits.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 5
  2510 ;; This function calls:
  2511 ;;		_Lcd_Cmd
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517     06AD                     _Lcd_Clear:	
  2518                           ;psect for function _Lcd_Clear
  2519                           
  2520     06AD                     l1672:	
  2521                           ;incstack = 0
  2522                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2523                           
  2524                           
  2525                           ;LCD8bits.c: 54:     Lcd_Cmd(0);
  2526     06AD  3000               	movlw	0
  2527     06AE  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2528                           
  2529                           ;LCD8bits.c: 55:     Lcd_Cmd(1);
  2530     06B3  3001               	movlw	1
  2531     06B4  120A  118A  2640  120A  118A  	fcall	_Lcd_Cmd
  2532     06B9                     l218:
  2533     06B9  0008               	return
  2534     06BA                     __end_of_Lcd_Clear:
  2535                           
  2536                           	psect	text11
  2537     0640                     __ptext11:	
  2538 ;; *************** function _Lcd_Cmd *****************
  2539 ;; Defined at:
  2540 ;;		line 45 in file "LCD8bits.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  a               1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  a               1   28[BANK0 ] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       1       0       0       0
  2556 ;;      Temps:          0       2       0       0       0
  2557 ;;      Totals:         0       3       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 4
  2561 ;; This function calls:
  2562 ;;		_Lcd_Port
  2563 ;; This function is called by:
  2564 ;;		_Lcd_Clear
  2565 ;;		_Lcd_Set_Cursor
  2566 ;;		_Lcd_Init
  2567 ;;		_Lcd_Shift_Right
  2568 ;;		_Lcd_Shift_Left
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572     0640                     _Lcd_Cmd:	
  2573                           ;psect for function _Lcd_Cmd
  2574                           
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2578                           ;Lcd_Cmd@a stored from wreg
  2579     0640  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0641  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0642  00BC               	movwf	Lcd_Cmd@a
  2582     0643                     l1564:
  2583                           
  2584                           ;LCD8bits.c: 46:     PORTEbits.RE0 = 0;
  2585     0643  1009               	bcf	9,0	;volatile
  2586     0644                     l1566:
  2587                           
  2588                           ;LCD8bits.c: 47:     Lcd_Port(a);
  2589     0644  083C               	movf	Lcd_Cmd@a,w
  2590     0645  120A  118A  24ED  120A  118A  	fcall	_Lcd_Port
  2591     064A                     l1568:
  2592                           
  2593                           ;LCD8bits.c: 48:     RE1 = 1;
  2594     064A  1283               	bcf	3,5	;RP0=0, select bank0
  2595     064B  1303               	bcf	3,6	;RP1=0, select bank0
  2596     064C  1489               	bsf	9,1	;volatile
  2597     064D                     l1570:
  2598                           
  2599                           ;LCD8bits.c: 49:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2600     064D  300B               	movlw	11
  2601     064E  1283               	bcf	3,5	;RP0=0, select bank0
  2602     064F  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0650  00BB               	movwf	??_Lcd_Cmd+1
  2604     0651  3061               	movlw	97
  2605     0652  00BA               	movwf	??_Lcd_Cmd
  2606     0653                     u1167:
  2607     0653  0BBA               	decfsz	??_Lcd_Cmd,f
  2608     0654  2E53               	goto	u1167
  2609     0655  0BBB               	decfsz	??_Lcd_Cmd+1,f
  2610     0656  2E53               	goto	u1167
  2611     0657  2E58               	nop2
  2612     0658                     l1572:
  2613                           
  2614                           ;LCD8bits.c: 50:     RE1 = 0;
  2615     0658  1283               	bcf	3,5	;RP0=0, select bank0
  2616     0659  1303               	bcf	3,6	;RP1=0, select bank0
  2617     065A  1089               	bcf	9,1	;volatile
  2618     065B                     l215:
  2619     065B  0008               	return
  2620     065C                     __end_of_Lcd_Cmd:
  2621                           
  2622                           	psect	text12
  2623     04ED                     __ptext12:	
  2624 ;; *************** function _Lcd_Port *****************
  2625 ;; Defined at:
  2626 ;;		line 3 in file "LCD8bits.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  a               1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  a               1   25[BANK0 ] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       1       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         0       1       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 3
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_Lcd_Cmd
  2651 ;;		_Lcd_Init
  2652 ;;		_Lcd_Write_Char
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656     04ED                     _Lcd_Port:	
  2657                           ;psect for function _Lcd_Port
  2658                           
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _Lcd_Port: [wreg]
  2662                           ;Lcd_Port@a stored from wreg
  2663     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2664     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2665     04EF  00B9               	movwf	Lcd_Port@a
  2666     04F0                     l1422:
  2667                           
  2668                           ;LCD8bits.c: 4:     if (a & 1)
  2669     04F0  1C39               	btfss	Lcd_Port@a,0
  2670     04F1  2CF3               	goto	u551
  2671     04F2  2CF4               	goto	u550
  2672     04F3                     u551:
  2673     04F3  2CF6               	goto	l196
  2674     04F4                     u550:
  2675     04F4                     l1424:
  2676                           
  2677                           ;LCD8bits.c: 5:         RD0 = 1;
  2678     04F4  1408               	bsf	8,0	;volatile
  2679     04F5  2CF7               	goto	l197
  2680     04F6                     l196:	
  2681                           ;LCD8bits.c: 6:     else
  2682                           
  2683                           
  2684                           ;LCD8bits.c: 7:         RD0 = 0;
  2685     04F6  1008               	bcf	8,0	;volatile
  2686     04F7                     l197:
  2687                           
  2688                           ;LCD8bits.c: 9:     if (a & 2)
  2689     04F7  1CB9               	btfss	Lcd_Port@a,1
  2690     04F8  2CFA               	goto	u561
  2691     04F9  2CFB               	goto	u560
  2692     04FA                     u561:
  2693     04FA  2CFD               	goto	l198
  2694     04FB                     u560:
  2695     04FB                     l1426:
  2696                           
  2697                           ;LCD8bits.c: 10:         RD1 = 1;
  2698     04FB  1488               	bsf	8,1	;volatile
  2699     04FC  2CFE               	goto	l199
  2700     04FD                     l198:	
  2701                           ;LCD8bits.c: 11:     else
  2702                           
  2703                           
  2704                           ;LCD8bits.c: 12:         RD1 = 0;
  2705     04FD  1088               	bcf	8,1	;volatile
  2706     04FE                     l199:
  2707                           
  2708                           ;LCD8bits.c: 14:     if (a & 4)
  2709     04FE  1D39               	btfss	Lcd_Port@a,2
  2710     04FF  2D01               	goto	u571
  2711     0500  2D02               	goto	u570
  2712     0501                     u571:
  2713     0501  2D04               	goto	l200
  2714     0502                     u570:
  2715     0502                     l1428:
  2716                           
  2717                           ;LCD8bits.c: 15:         RD2 = 1;
  2718     0502  1508               	bsf	8,2	;volatile
  2719     0503  2D05               	goto	l201
  2720     0504                     l200:	
  2721                           ;LCD8bits.c: 16:     else
  2722                           
  2723                           
  2724                           ;LCD8bits.c: 17:         RD2 = 0;
  2725     0504  1108               	bcf	8,2	;volatile
  2726     0505                     l201:
  2727                           
  2728                           ;LCD8bits.c: 19:     if (a & 8)
  2729     0505  1DB9               	btfss	Lcd_Port@a,3
  2730     0506  2D08               	goto	u581
  2731     0507  2D09               	goto	u580
  2732     0508                     u581:
  2733     0508  2D0B               	goto	l202
  2734     0509                     u580:
  2735     0509                     l1430:
  2736                           
  2737                           ;LCD8bits.c: 20:         RD3 = 1;
  2738     0509  1588               	bsf	8,3	;volatile
  2739     050A  2D0C               	goto	l203
  2740     050B                     l202:	
  2741                           ;LCD8bits.c: 21:     else
  2742                           
  2743                           
  2744                           ;LCD8bits.c: 22:         RD3 = 0;
  2745     050B  1188               	bcf	8,3	;volatile
  2746     050C                     l203:
  2747                           
  2748                           ;LCD8bits.c: 24:     if (a & 16)
  2749     050C  1E39               	btfss	Lcd_Port@a,4
  2750     050D  2D0F               	goto	u591
  2751     050E  2D10               	goto	u590
  2752     050F                     u591:
  2753     050F  2D12               	goto	l204
  2754     0510                     u590:
  2755     0510                     l1432:
  2756                           
  2757                           ;LCD8bits.c: 25:         RD4 = 1;
  2758     0510  1608               	bsf	8,4	;volatile
  2759     0511  2D13               	goto	l205
  2760     0512                     l204:	
  2761                           ;LCD8bits.c: 26:     else
  2762                           
  2763                           
  2764                           ;LCD8bits.c: 27:         RD4 = 0;
  2765     0512  1208               	bcf	8,4	;volatile
  2766     0513                     l205:
  2767                           
  2768                           ;LCD8bits.c: 29:     if (a & 32)
  2769     0513  1EB9               	btfss	Lcd_Port@a,5
  2770     0514  2D16               	goto	u601
  2771     0515  2D17               	goto	u600
  2772     0516                     u601:
  2773     0516  2D19               	goto	l206
  2774     0517                     u600:
  2775     0517                     l1434:
  2776                           
  2777                           ;LCD8bits.c: 30:         RD5 = 1;
  2778     0517  1688               	bsf	8,5	;volatile
  2779     0518  2D1A               	goto	l207
  2780     0519                     l206:	
  2781                           ;LCD8bits.c: 31:     else
  2782                           
  2783                           
  2784                           ;LCD8bits.c: 32:         RD5 = 0;
  2785     0519  1288               	bcf	8,5	;volatile
  2786     051A                     l207:
  2787                           
  2788                           ;LCD8bits.c: 34:     if (a & 64)
  2789     051A  1F39               	btfss	Lcd_Port@a,6
  2790     051B  2D1D               	goto	u611
  2791     051C  2D1E               	goto	u610
  2792     051D                     u611:
  2793     051D  2D20               	goto	l208
  2794     051E                     u610:
  2795     051E                     l1436:
  2796                           
  2797                           ;LCD8bits.c: 35:         RD6 = 1;
  2798     051E  1708               	bsf	8,6	;volatile
  2799     051F  2D21               	goto	l209
  2800     0520                     l208:	
  2801                           ;LCD8bits.c: 36:     else
  2802                           
  2803                           
  2804                           ;LCD8bits.c: 37:         RD6 = 0;
  2805     0520  1308               	bcf	8,6	;volatile
  2806     0521                     l209:
  2807                           
  2808                           ;LCD8bits.c: 39:     if (a & 128)
  2809     0521  1FB9               	btfss	Lcd_Port@a,7
  2810     0522  2D24               	goto	u621
  2811     0523  2D25               	goto	u620
  2812     0524                     u621:
  2813     0524  2D27               	goto	l210
  2814     0525                     u620:
  2815     0525                     l1438:
  2816                           
  2817                           ;LCD8bits.c: 40:         RD7 = 1;
  2818     0525  1788               	bsf	8,7	;volatile
  2819     0526  2D28               	goto	l212
  2820     0527                     l210:	
  2821                           ;LCD8bits.c: 41:     else
  2822                           
  2823                           
  2824                           ;LCD8bits.c: 42:         RD7 = 0;
  2825     0527  1388               	bcf	8,7	;volatile
  2826     0528                     l212:
  2827     0528  0008               	return
  2828     0529                     __end_of_Lcd_Port:
  2829                           
  2830                           	psect	text13
  2831     015A                     __ptext13:	
  2832 ;; *************** function _isr *****************
  2833 ;; Defined at:
  2834 ;;		line 58 in file "Dig2lab2.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  tempEntry       1   22[BANK0 ] unsigned char 
  2839 ;;  temp            2   23[BANK0 ] unsigned int 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         0       0       0       0       0
  2850 ;;      Locals:         0       9       0       0       0
  2851 ;;      Temps:          0       2       0       0       0
  2852 ;;      Totals:         0      11       0       0       0
  2853 ;;Total ram usage:       11 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 2
  2856 ;; This function calls:
  2857 ;;		_UART_read_char
  2858 ;;		_UART_write_char
  2859 ;;		___awdiv
  2860 ;;		___awmod
  2861 ;;		___lwdiv
  2862 ;;		___lwmod
  2863 ;;		___wmul
  2864 ;;		_adc_read
  2865 ;;		_map
  2866 ;; This function is called by:
  2867 ;;		Interrupt level 1
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871     015A                     _isr:	
  2872                           ;psect for function _isr
  2873                           
  2874     015A                     i1l1832:
  2875                           
  2876                           ;Dig2lab2.c: 59:     if(ADIF){
  2877     015A  1F0C               	btfss	12,6	;volatile
  2878     015B  295D               	goto	u102_21
  2879     015C  295E               	goto	u102_20
  2880     015D                     u102_21:
  2881     015D  29F3               	goto	i1l1850
  2882     015E                     u102_20:
  2883     015E                     i1l1834:
  2884                           
  2885                           ;Dig2lab2.c: 60:         potValue = adc_read();
  2886     015E  120A  118A  26BA  120A  118A  	fcall	_adc_read
  2887     0163  0871               	movf	?_adc_read+1,w
  2888     0164  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0165  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0166  00D2               	movwf	_potValue+1
  2891     0167  0870               	movf	?_adc_read,w
  2892     0168  00D1               	movwf	_potValue
  2893     0169                     i1l1836:
  2894                           
  2895                           ;Dig2lab2.c: 61:         uint16_t temp = map(potValue, 0, 255, 0, 50)*10;
  2896     0169  3032               	movlw	50
  2897     016A  00AC               	movwf	map@maxNew
  2898     016B  3000               	movlw	0
  2899     016C  00AD               	movwf	map@maxNew+1
  2900     016D  3000               	movlw	0
  2901     016E  00AA               	movwf	map@minNew
  2902     016F  00AB               	movwf	map@minNew+1
  2903     0170  30FF               	movlw	255
  2904     0171  00A8               	movwf	map@maxOld
  2905     0172  3000               	movlw	0
  2906     0173  00A9               	movwf	map@maxOld+1
  2907     0174  3000               	movlw	0
  2908     0175  00A6               	movwf	map@minOld
  2909     0176  00A7               	movwf	map@minOld+1
  2910     0177  0852               	movf	_potValue+1,w
  2911     0178  00A5               	movwf	map@val+1
  2912     0179  0851               	movf	_potValue,w
  2913     017A  00A4               	movwf	map@val
  2914     017B  120A  118A  2563  120A  118A  	fcall	_map
  2915     0180  1283               	bcf	3,5	;RP0=0, select bank0
  2916     0181  1303               	bcf	3,6	;RP1=0, select bank0
  2917     0182  0825               	movf	?_map+1,w
  2918     0183  00B1               	movwf	_isr$1211+1
  2919     0184  0824               	movf	?_map,w
  2920     0185  00B0               	movwf	_isr$1211
  2921     0186                     i1l1838:
  2922                           
  2923                           ;Dig2lab2.c: 61:         uint16_t temp = map(potValue, 0, 255, 0, 50)*10;
  2924     0186  0831               	movf	_isr$1211+1,w
  2925     0187  00F1               	movwf	___wmul@multiplier+1
  2926     0188  0830               	movf	_isr$1211,w
  2927     0189  00F0               	movwf	___wmul@multiplier
  2928     018A  300A               	movlw	10
  2929     018B  00F2               	movwf	___wmul@multiplicand
  2930     018C  3000               	movlw	0
  2931     018D  00F3               	movwf	___wmul@multiplicand+1
  2932     018E  120A  118A  25F9  120A  118A  	fcall	___wmul
  2933     0193  0871               	movf	?___wmul+1,w
  2934     0194  1283               	bcf	3,5	;RP0=0, select bank0
  2935     0195  1303               	bcf	3,6	;RP1=0, select bank0
  2936     0196  00B8               	movwf	isr@temp+1
  2937     0197  0870               	movf	?___wmul,w
  2938     0198  00B7               	movwf	isr@temp
  2939     0199                     i1l1840:
  2940                           
  2941                           ;Dig2lab2.c: 62:         centenaVolt = temp/100;
  2942     0199  3064               	movlw	100
  2943     019A  00F6               	movwf	___lwdiv@divisor
  2944     019B  3000               	movlw	0
  2945     019C  00F7               	movwf	___lwdiv@divisor+1
  2946     019D  0838               	movf	isr@temp+1,w
  2947     019E  00F9               	movwf	___lwdiv@dividend+1
  2948     019F  0837               	movf	isr@temp,w
  2949     01A0  00F8               	movwf	___lwdiv@dividend
  2950     01A1  120A  118A  246C  120A  118A  	fcall	___lwdiv
  2951     01A6  0877               	movf	?___lwdiv+1,w
  2952     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2953     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2954     01A9  00D0               	movwf	_centenaVolt+1
  2955     01AA  0876               	movf	?___lwdiv,w
  2956     01AB  00CF               	movwf	_centenaVolt
  2957     01AC                     i1l1842:
  2958                           
  2959                           ;Dig2lab2.c: 63:         decenaVolt = (temp%100)/10;
  2960     01AC  300A               	movlw	10
  2961     01AD  00F6               	movwf	___lwdiv@divisor
  2962     01AE  3000               	movlw	0
  2963     01AF  00F7               	movwf	___lwdiv@divisor+1
  2964     01B0  0838               	movf	isr@temp+1,w
  2965     01B1  00F3               	movwf	___lwmod@dividend+1
  2966     01B2  0837               	movf	isr@temp,w
  2967     01B3  00F2               	movwf	___lwmod@dividend
  2968     01B4  3064               	movlw	100
  2969     01B5  00F0               	movwf	___lwmod@divisor
  2970     01B6  3000               	movlw	0
  2971     01B7  00F1               	movwf	___lwmod@divisor+1
  2972     01B8  120A  118A  2529  120A  118A  	fcall	___lwmod
  2973     01BD  0871               	movf	?___lwmod+1,w
  2974     01BE  00F9               	movwf	___lwdiv@dividend+1
  2975     01BF  0870               	movf	?___lwmod,w
  2976     01C0  00F8               	movwf	___lwdiv@dividend
  2977     01C1  120A  118A  246C  120A  118A  	fcall	___lwdiv
  2978     01C6  0877               	movf	?___lwdiv+1,w
  2979     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2980     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2981     01C9  00CE               	movwf	_decenaVolt+1
  2982     01CA  0876               	movf	?___lwdiv,w
  2983     01CB  00CD               	movwf	_decenaVolt
  2984     01CC                     i1l1844:
  2985                           
  2986                           ;Dig2lab2.c: 64:         unidadVolt = (temp%100)%10;
  2987     01CC  0838               	movf	isr@temp+1,w
  2988     01CD  00F3               	movwf	___lwmod@dividend+1
  2989     01CE  0837               	movf	isr@temp,w
  2990     01CF  00F2               	movwf	___lwmod@dividend
  2991     01D0  3064               	movlw	100
  2992     01D1  00F0               	movwf	___lwmod@divisor
  2993     01D2  3000               	movlw	0
  2994     01D3  00F1               	movwf	___lwmod@divisor+1
  2995     01D4  120A  118A  2529  120A  118A  	fcall	___lwmod
  2996     01D9  0871               	movf	?___lwmod+1,w
  2997     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2998     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2999     01DC  00B3               	movwf	_isr$1212+1
  3000     01DD  0870               	movf	?___lwmod,w
  3001     01DE  00B2               	movwf	_isr$1212
  3002     01DF                     i1l1846:
  3003                           
  3004                           ;Dig2lab2.c: 64:         unidadVolt = (temp%100)%10;
  3005     01DF  300A               	movlw	10
  3006     01E0  00F0               	movwf	___lwmod@divisor
  3007     01E1  3000               	movlw	0
  3008     01E2  00F1               	movwf	___lwmod@divisor+1
  3009     01E3  0833               	movf	_isr$1212+1,w
  3010     01E4  00F3               	movwf	___lwmod@dividend+1
  3011     01E5  0832               	movf	_isr$1212,w
  3012     01E6  00F2               	movwf	___lwmod@dividend
  3013     01E7  120A  118A  2529  120A  118A  	fcall	___lwmod
  3014     01EC  0871               	movf	?___lwmod+1,w
  3015     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3016     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3017     01EF  00CC               	movwf	_unidadVolt+1
  3018     01F0  0870               	movf	?___lwmod,w
  3019     01F1  00CB               	movwf	_unidadVolt
  3020     01F2                     i1l1848:
  3021                           
  3022                           ;Dig2lab2.c: 65:         PIR1bits.ADIF = 0;
  3023     01F2  130C               	bcf	12,6	;volatile
  3024     01F3                     i1l1850:
  3025                           
  3026                           ;Dig2lab2.c: 67:     if(PIR1bits.RCIF){
  3027     01F3  1E8C               	btfss	12,5	;volatile
  3028     01F4  29F6               	goto	u103_21
  3029     01F5  29F7               	goto	u103_20
  3030     01F6                     u103_21:
  3031     01F6  2A8A               	goto	i1l144
  3032     01F7                     u103_20:
  3033     01F7                     i1l1852:
  3034                           
  3035                           ;Dig2lab2.c: 68:         UART_write_char(RCREG);
  3036     01F7  081A               	movf	26,w	;volatile
  3037     01F8  120A  118A  26CC  120A  118A  	fcall	_UART_write_char
  3038     01FD                     i1l1854:
  3039                           
  3040                           ;Dig2lab2.c: 69:         char tempEntry = UART_read_char();
  3041     01FD  120A  118A  26D2  120A  118A  	fcall	_UART_read_char
  3042     0202  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0203  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0204  00B6               	movwf	isr@tempEntry
  3045     0205                     i1l1856:
  3046                           
  3047                           ;Dig2lab2.c: 71:         if(tempEntry == 43){
  3048     0205  302B               	movlw	43
  3049     0206  0636               	xorwf	isr@tempEntry,w
  3050     0207  1D03               	btfss	3,2
  3051     0208  2A0A               	goto	u104_21
  3052     0209  2A0B               	goto	u104_20
  3053     020A                     u104_21:
  3054     020A  2A1C               	goto	i1l1864
  3055     020B                     u104_20:
  3056     020B                     i1l1858:
  3057                           
  3058                           ;Dig2lab2.c: 72:             if(cont == 255){
  3059     020B  0A49               	incf	_cont,w
  3060     020C  044A               	iorwf	_cont+1,w
  3061     020D  1D03               	btfss	3,2
  3062     020E  2A10               	goto	u105_21
  3063     020F  2A11               	goto	u105_20
  3064     0210                     u105_21:
  3065     0210  2A16               	goto	i1l1862
  3066     0211                     u105_20:
  3067     0211                     i1l1860:
  3068                           
  3069                           ;Dig2lab2.c: 73:                 cont = 255;
  3070     0211  30FF               	movlw	255
  3071     0212  00C9               	movwf	_cont
  3072     0213  3000               	movlw	0
  3073     0214  00CA               	movwf	_cont+1
  3074                           
  3075                           ;Dig2lab2.c: 74:             }else{
  3076     0215  2A1C               	goto	i1l1864
  3077     0216                     i1l1862:
  3078                           
  3079                           ;Dig2lab2.c: 75:                 cont++;
  3080     0216  3001               	movlw	1
  3081     0217  07C9               	addwf	_cont,f
  3082     0218  1803               	skipnc
  3083     0219  0ACA               	incf	_cont+1,f
  3084     021A  3000               	movlw	0
  3085     021B  07CA               	addwf	_cont+1,f
  3086     021C                     i1l1864:
  3087                           
  3088                           ;Dig2lab2.c: 79:         if(tempEntry == 45){
  3089     021C  302D               	movlw	45
  3090     021D  0636               	xorwf	isr@tempEntry,w
  3091     021E  1D03               	btfss	3,2
  3092     021F  2A21               	goto	u106_21
  3093     0220  2A22               	goto	u106_20
  3094     0221                     u106_21:
  3095     0221  2A31               	goto	i1l1872
  3096     0222                     u106_20:
  3097     0222                     i1l1866:
  3098                           
  3099                           ;Dig2lab2.c: 80:             if(cont == 0){
  3100     0222  0849               	movf	_cont,w
  3101     0223  044A               	iorwf	_cont+1,w
  3102     0224  1D03               	btfss	3,2
  3103     0225  2A27               	goto	u107_21
  3104     0226  2A28               	goto	u107_20
  3105     0227                     u107_21:
  3106     0227  2A2B               	goto	i1l1870
  3107     0228                     u107_20:
  3108     0228                     i1l1868:
  3109                           
  3110                           ;Dig2lab2.c: 81:                 cont = 0;
  3111     0228  01C9               	clrf	_cont
  3112     0229  01CA               	clrf	_cont+1
  3113                           
  3114                           ;Dig2lab2.c: 82:             }else{
  3115     022A  2A31               	goto	i1l1872
  3116     022B                     i1l1870:
  3117                           
  3118                           ;Dig2lab2.c: 83:                 cont--;
  3119     022B  30FF               	movlw	255
  3120     022C  07C9               	addwf	_cont,f
  3121     022D  1803               	skipnc
  3122     022E  0ACA               	incf	_cont+1,f
  3123     022F  30FF               	movlw	255
  3124     0230  07CA               	addwf	_cont+1,f
  3125     0231                     i1l1872:
  3126                           
  3127                           ;Dig2lab2.c: 86:         centenaCont = cont/100;
  3128     0231  3064               	movlw	100
  3129     0232  00F7               	movwf	___awdiv@divisor
  3130     0233  3000               	movlw	0
  3131     0234  00F8               	movwf	___awdiv@divisor+1
  3132     0235  084A               	movf	_cont+1,w
  3133     0236  00FA               	movwf	___awdiv@dividend+1
  3134     0237  0849               	movf	_cont,w
  3135     0238  00F9               	movwf	___awdiv@dividend
  3136     0239  120A  118A  2360  120A  118A  	fcall	___awdiv
  3137     023E  0878               	movf	?___awdiv+1,w
  3138     023F  1283               	bcf	3,5	;RP0=0, select bank0
  3139     0240  1303               	bcf	3,6	;RP1=0, select bank0
  3140     0241  00C8               	movwf	_centenaCont+1
  3141     0242  0877               	movf	?___awdiv,w
  3142     0243  00C7               	movwf	_centenaCont
  3143     0244                     i1l1874:
  3144                           
  3145                           ;Dig2lab2.c: 87:         decenaCont = (cont%100)/10;
  3146     0244  300A               	movlw	10
  3147     0245  00F7               	movwf	___awdiv@divisor
  3148     0246  3000               	movlw	0
  3149     0247  00F8               	movwf	___awdiv@divisor+1
  3150     0248  084A               	movf	_cont+1,w
  3151     0249  00F3               	movwf	___awmod@dividend+1
  3152     024A  0849               	movf	_cont,w
  3153     024B  00F2               	movwf	___awmod@dividend
  3154     024C  3064               	movlw	100
  3155     024D  00F0               	movwf	___awmod@divisor
  3156     024E  3000               	movlw	0
  3157     024F  00F1               	movwf	___awmod@divisor+1
  3158     0250  120A  118A  23C9  120A  118A  	fcall	___awmod
  3159     0255  0871               	movf	?___awmod+1,w
  3160     0256  00FA               	movwf	___awdiv@dividend+1
  3161     0257  0870               	movf	?___awmod,w
  3162     0258  00F9               	movwf	___awdiv@dividend
  3163     0259  120A  118A  2360  120A  118A  	fcall	___awdiv
  3164     025E  0878               	movf	?___awdiv+1,w
  3165     025F  1283               	bcf	3,5	;RP0=0, select bank0
  3166     0260  1303               	bcf	3,6	;RP1=0, select bank0
  3167     0261  00C6               	movwf	_decenaCont+1
  3168     0262  0877               	movf	?___awdiv,w
  3169     0263  00C5               	movwf	_decenaCont
  3170     0264                     i1l1876:
  3171                           
  3172                           ;Dig2lab2.c: 88:         unidadCont = (cont%100)%10;
  3173     0264  084A               	movf	_cont+1,w
  3174     0265  00F3               	movwf	___awmod@dividend+1
  3175     0266  0849               	movf	_cont,w
  3176     0267  00F2               	movwf	___awmod@dividend
  3177     0268  3064               	movlw	100
  3178     0269  00F0               	movwf	___awmod@divisor
  3179     026A  3000               	movlw	0
  3180     026B  00F1               	movwf	___awmod@divisor+1
  3181     026C  120A  118A  23C9  120A  118A  	fcall	___awmod
  3182     0271  0871               	movf	?___awmod+1,w
  3183     0272  1283               	bcf	3,5	;RP0=0, select bank0
  3184     0273  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0274  00B5               	movwf	_isr$1213+1
  3186     0275  0870               	movf	?___awmod,w
  3187     0276  00B4               	movwf	_isr$1213
  3188     0277                     i1l1878:
  3189                           
  3190                           ;Dig2lab2.c: 88:         unidadCont = (cont%100)%10;
  3191     0277  300A               	movlw	10
  3192     0278  00F0               	movwf	___awmod@divisor
  3193     0279  3000               	movlw	0
  3194     027A  00F1               	movwf	___awmod@divisor+1
  3195     027B  0835               	movf	_isr$1213+1,w
  3196     027C  00F3               	movwf	___awmod@dividend+1
  3197     027D  0834               	movf	_isr$1213,w
  3198     027E  00F2               	movwf	___awmod@dividend
  3199     027F  120A  118A  23C9  120A  118A  	fcall	___awmod
  3200     0284  0871               	movf	?___awmod+1,w
  3201     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3203     0287  00C4               	movwf	_unidadCont+1
  3204     0288  0870               	movf	?___awmod,w
  3205     0289  00C3               	movwf	_unidadCont
  3206     028A                     i1l144:
  3207     028A  082F               	movf	??_isr+1,w
  3208     028B  008A               	movwf	10
  3209     028C  0E2E               	swapf	??_isr,w
  3210     028D  0083               	movwf	3
  3211     028E  0EFE               	swapf	btemp,f
  3212     028F  0E7E               	swapf	btemp,w
  3213     0290  0009               	retfie
  3214     0291                     __end_of_isr:
  3215                           
  3216                           	psect	intentry
  3217     0004                     __pintentry:	
  3218                           ;incstack = 0
  3219                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3220                           
  3221     0004                     interrupt_function:
  3222     007E                     saved_w	set	btemp
  3223     0004  00FE               	movwf	btemp
  3224     0005  0E03               	swapf	3,w
  3225     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3227     0008  00AE               	movwf	??_isr
  3228     0009  080A               	movf	10,w
  3229     000A  00AF               	movwf	??_isr+1
  3230     000B  120A  118A  295A   	ljmp	_isr
  3231                           
  3232                           	psect	text14
  3233     0563                     __ptext14:	
  3234 ;; *************** function _map *****************
  3235 ;; Defined at:
  3236 ;;		line 104 in file "adcInterrupt.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  val             2    4[BANK0 ] int 
  3239 ;;  minOld          2    6[BANK0 ] int 
  3240 ;;  maxOld          2    8[BANK0 ] int 
  3241 ;;  minNew          2   10[BANK0 ] int 
  3242 ;;  maxNew          2   12[BANK0 ] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  newVal          2   12[COMMON] int 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2    4[BANK0 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0      10       0       0       0
  3255 ;;      Locals:         2       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         2      10       0       0       0
  3258 ;;Total ram usage:       12 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		___awdiv
  3263 ;;		___wmul
  3264 ;; This function is called by:
  3265 ;;		_isr
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269     0563                     _map:	
  3270                           ;psect for function _map
  3271                           
  3272     0563                     i1l1636:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3275                           
  3276                           
  3277                           ;adcInterrupt.c: 105:     int newVal = minNew + (val - minOld)*(maxNew - minNew)/(maxOld
      +                           - minOld);
  3278     0563  1283               	bcf	3,5	;RP0=0, select bank0
  3279     0564  1303               	bcf	3,6	;RP1=0, select bank0
  3280     0565  0826               	movf	map@minOld,w
  3281     0566  0228               	subwf	map@maxOld,w
  3282     0567  00F7               	movwf	___awdiv@divisor
  3283     0568  0827               	movf	map@minOld+1,w
  3284     0569  1C03               	skipc
  3285     056A  0A27               	incf	map@minOld+1,w
  3286     056B  0229               	subwf	map@maxOld+1,w
  3287     056C  00F8               	movwf	___awdiv@divisor+1
  3288     056D  0826               	movf	map@minOld,w
  3289     056E  0224               	subwf	map@val,w
  3290     056F  00F0               	movwf	___wmul@multiplier
  3291     0570  0827               	movf	map@minOld+1,w
  3292     0571  1C03               	skipc
  3293     0572  0A27               	incf	map@minOld+1,w
  3294     0573  0225               	subwf	map@val+1,w
  3295     0574  00F1               	movwf	___wmul@multiplier+1
  3296     0575  082A               	movf	map@minNew,w
  3297     0576  022C               	subwf	map@maxNew,w
  3298     0577  00F2               	movwf	___wmul@multiplicand
  3299     0578  082B               	movf	map@minNew+1,w
  3300     0579  1C03               	skipc
  3301     057A  0A2B               	incf	map@minNew+1,w
  3302     057B  022D               	subwf	map@maxNew+1,w
  3303     057C  00F3               	movwf	___wmul@multiplicand+1
  3304     057D  120A  118A  25F9  120A  118A  	fcall	___wmul
  3305     0582  0871               	movf	?___wmul+1,w
  3306     0583  00FA               	movwf	___awdiv@dividend+1
  3307     0584  0870               	movf	?___wmul,w
  3308     0585  00F9               	movwf	___awdiv@dividend
  3309     0586  120A  118A  2360  120A  118A  	fcall	___awdiv
  3310     058B  1283               	bcf	3,5	;RP0=0, select bank0
  3311     058C  1303               	bcf	3,6	;RP1=0, select bank0
  3312     058D  082A               	movf	map@minNew,w
  3313     058E  0777               	addwf	?___awdiv,w
  3314     058F  00FC               	movwf	map@newVal
  3315     0590  082B               	movf	map@minNew+1,w
  3316     0591  1803               	skipnc
  3317     0592  0A2B               	incf	map@minNew+1,w
  3318     0593  0778               	addwf	?___awdiv+1,w
  3319     0594  00FD               	movwf	map@newVal+1
  3320     0595                     i1l1638:
  3321                           
  3322                           ;adcInterrupt.c: 106:     return newVal;
  3323     0595  087D               	movf	map@newVal+1,w
  3324     0596  00A5               	movwf	?_map+1
  3325     0597  087C               	movf	map@newVal,w
  3326     0598  00A4               	movwf	?_map
  3327     0599                     i1l55:
  3328     0599  0008               	return
  3329     059A                     __end_of_map:
  3330                           
  3331                           	psect	text15
  3332     05F9                     __ptext15:	
  3333 ;; *************** function ___wmul *****************
  3334 ;; Defined at:
  3335 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  multiplier      2    0[COMMON] unsigned int 
  3338 ;;  multiplicand    2    2[COMMON] unsigned int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  product         2    4[COMMON] unsigned int 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2    0[COMMON] unsigned int 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         4       0       0       0       0
  3351 ;;      Locals:         2       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0
  3353 ;;      Totals:         6       0       0       0       0
  3354 ;;Total ram usage:        6 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_map
  3360 ;;		_isr
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     05F9                     ___wmul:	
  3365                           ;psect for function ___wmul
  3366                           
  3367     05F9                     i1l1574:	
  3368                           ;incstack = 0
  3369                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3370                           
  3371     05F9  01F4               	clrf	___wmul@product
  3372     05FA  01F5               	clrf	___wmul@product+1
  3373     05FB                     i1l1576:
  3374     05FB  1C70               	btfss	___wmul@multiplier,0
  3375     05FC  2DFE               	goto	u63_21
  3376     05FD  2DFF               	goto	u63_20
  3377     05FE                     u63_21:
  3378     05FE  2E05               	goto	i1l360
  3379     05FF                     u63_20:
  3380     05FF                     i1l1578:
  3381     05FF  0872               	movf	___wmul@multiplicand,w
  3382     0600  07F4               	addwf	___wmul@product,f
  3383     0601  1803               	skipnc
  3384     0602  0AF5               	incf	___wmul@product+1,f
  3385     0603  0873               	movf	___wmul@multiplicand+1,w
  3386     0604  07F5               	addwf	___wmul@product+1,f
  3387     0605                     i1l360:
  3388     0605  3001               	movlw	1
  3389     0606                     u64_25:
  3390     0606  1003               	clrc
  3391     0607  0DF2               	rlf	___wmul@multiplicand,f
  3392     0608  0DF3               	rlf	___wmul@multiplicand+1,f
  3393     0609  3EFF               	addlw	-1
  3394     060A  1D03               	skipz
  3395     060B  2E06               	goto	u64_25
  3396     060C                     i1l1580:
  3397     060C  3001               	movlw	1
  3398     060D                     u65_25:
  3399     060D  1003               	clrc
  3400     060E  0CF1               	rrf	___wmul@multiplier+1,f
  3401     060F  0CF0               	rrf	___wmul@multiplier,f
  3402     0610  3EFF               	addlw	-1
  3403     0611  1D03               	skipz
  3404     0612  2E0D               	goto	u65_25
  3405     0613                     i1l1582:
  3406     0613  0870               	movf	___wmul@multiplier,w
  3407     0614  0471               	iorwf	___wmul@multiplier+1,w
  3408     0615  1D03               	btfss	3,2
  3409     0616  2E18               	goto	u66_21
  3410     0617  2E19               	goto	u66_20
  3411     0618                     u66_21:
  3412     0618  2DFB               	goto	i1l1576
  3413     0619                     u66_20:
  3414     0619                     i1l1584:
  3415     0619  0875               	movf	___wmul@product+1,w
  3416     061A  00F1               	movwf	?___wmul+1
  3417     061B  0874               	movf	___wmul@product,w
  3418     061C  00F0               	movwf	?___wmul
  3419     061D                     i1l362:
  3420     061D  0008               	return
  3421     061E                     __end_of___wmul:
  3422                           
  3423                           	psect	text16
  3424     0360                     __ptext16:	
  3425 ;; *************** function ___awdiv *****************
  3426 ;; Defined at:
  3427 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  divisor         2    7[COMMON] int 
  3430 ;;  dividend        2    9[COMMON] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  quotient        2    2[BANK0 ] int 
  3433 ;;  sign            1    1[BANK0 ] unsigned char 
  3434 ;;  counter         1    0[BANK0 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2    7[COMMON] int 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         4       0       0       0       0
  3445 ;;      Locals:         0       4       0       0       0
  3446 ;;      Temps:          1       0       0       0       0
  3447 ;;      Totals:         5       4       0       0       0
  3448 ;;Total ram usage:        9 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_map
  3454 ;;		_isr
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458     0360                     ___awdiv:	
  3459                           ;psect for function ___awdiv
  3460                           
  3461     0360                     i1l1588:	
  3462                           ;incstack = 0
  3463                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3464                           
  3465     0360  1283               	bcf	3,5	;RP0=0, select bank0
  3466     0361  1303               	bcf	3,6	;RP1=0, select bank0
  3467     0362  01A1               	clrf	___awdiv@sign
  3468     0363                     i1l1590:
  3469     0363  1FF8               	btfss	___awdiv@divisor+1,7
  3470     0364  2B66               	goto	u67_21
  3471     0365  2B67               	goto	u67_20
  3472     0366                     u67_21:
  3473     0366  2B6E               	goto	i1l1596
  3474     0367                     u67_20:
  3475     0367                     i1l1592:
  3476     0367  09F7               	comf	___awdiv@divisor,f
  3477     0368  09F8               	comf	___awdiv@divisor+1,f
  3478     0369  0AF7               	incf	___awdiv@divisor,f
  3479     036A  1903               	skipnz
  3480     036B  0AF8               	incf	___awdiv@divisor+1,f
  3481     036C                     i1l1594:
  3482     036C  01A1               	clrf	___awdiv@sign
  3483     036D  0AA1               	incf	___awdiv@sign,f
  3484     036E                     i1l1596:
  3485     036E  1FFA               	btfss	___awdiv@dividend+1,7
  3486     036F  2B71               	goto	u68_21
  3487     0370  2B72               	goto	u68_20
  3488     0371                     u68_21:
  3489     0371  2B7B               	goto	i1l1602
  3490     0372                     u68_20:
  3491     0372                     i1l1598:
  3492     0372  09F9               	comf	___awdiv@dividend,f
  3493     0373  09FA               	comf	___awdiv@dividend+1,f
  3494     0374  0AF9               	incf	___awdiv@dividend,f
  3495     0375  1903               	skipnz
  3496     0376  0AFA               	incf	___awdiv@dividend+1,f
  3497     0377                     i1l1600:
  3498     0377  3001               	movlw	1
  3499     0378  00FB               	movwf	??___awdiv
  3500     0379  087B               	movf	??___awdiv,w
  3501     037A  06A1               	xorwf	___awdiv@sign,f
  3502     037B                     i1l1602:
  3503     037B  01A2               	clrf	___awdiv@quotient
  3504     037C  01A3               	clrf	___awdiv@quotient+1
  3505     037D                     i1l1604:
  3506     037D  0877               	movf	___awdiv@divisor,w
  3507     037E  0478               	iorwf	___awdiv@divisor+1,w
  3508     037F  1903               	btfsc	3,2
  3509     0380  2B82               	goto	u69_21
  3510     0381  2B83               	goto	u69_20
  3511     0382                     u69_21:
  3512     0382  2BBA               	goto	i1l1624
  3513     0383                     u69_20:
  3514     0383                     i1l1606:
  3515     0383  01A0               	clrf	___awdiv@counter
  3516     0384  0AA0               	incf	___awdiv@counter,f
  3517     0385  2B91               	goto	i1l1612
  3518     0386                     i1l1608:
  3519     0386  3001               	movlw	1
  3520     0387                     u70_25:
  3521     0387  1003               	clrc
  3522     0388  0DF7               	rlf	___awdiv@divisor,f
  3523     0389  0DF8               	rlf	___awdiv@divisor+1,f
  3524     038A  3EFF               	addlw	-1
  3525     038B  1D03               	skipz
  3526     038C  2B87               	goto	u70_25
  3527     038D                     i1l1610:
  3528     038D  3001               	movlw	1
  3529     038E  00FB               	movwf	??___awdiv
  3530     038F  087B               	movf	??___awdiv,w
  3531     0390  07A0               	addwf	___awdiv@counter,f
  3532     0391                     i1l1612:
  3533     0391  1FF8               	btfss	___awdiv@divisor+1,7
  3534     0392  2B94               	goto	u71_21
  3535     0393  2B95               	goto	u71_20
  3536     0394                     u71_21:
  3537     0394  2B86               	goto	i1l1608
  3538     0395                     u71_20:
  3539     0395                     i1l1614:
  3540     0395  3001               	movlw	1
  3541     0396                     u72_25:
  3542     0396  1003               	clrc
  3543     0397  0DA2               	rlf	___awdiv@quotient,f
  3544     0398  0DA3               	rlf	___awdiv@quotient+1,f
  3545     0399  3EFF               	addlw	-1
  3546     039A  1D03               	skipz
  3547     039B  2B96               	goto	u72_25
  3548     039C  0878               	movf	___awdiv@divisor+1,w
  3549     039D  027A               	subwf	___awdiv@dividend+1,w
  3550     039E  1D03               	skipz
  3551     039F  2BA2               	goto	u73_25
  3552     03A0  0877               	movf	___awdiv@divisor,w
  3553     03A1  0279               	subwf	___awdiv@dividend,w
  3554     03A2                     u73_25:
  3555     03A2  1C03               	skipc
  3556     03A3  2BA5               	goto	u73_21
  3557     03A4  2BA6               	goto	u73_20
  3558     03A5                     u73_21:
  3559     03A5  2BAD               	goto	i1l1620
  3560     03A6                     u73_20:
  3561     03A6                     i1l1616:
  3562     03A6  0877               	movf	___awdiv@divisor,w
  3563     03A7  02F9               	subwf	___awdiv@dividend,f
  3564     03A8  0878               	movf	___awdiv@divisor+1,w
  3565     03A9  1C03               	skipc
  3566     03AA  03FA               	decf	___awdiv@dividend+1,f
  3567     03AB  02FA               	subwf	___awdiv@dividend+1,f
  3568     03AC                     i1l1618:
  3569     03AC  1422               	bsf	___awdiv@quotient,0
  3570     03AD                     i1l1620:
  3571     03AD  3001               	movlw	1
  3572     03AE                     u74_25:
  3573     03AE  1003               	clrc
  3574     03AF  0CF8               	rrf	___awdiv@divisor+1,f
  3575     03B0  0CF7               	rrf	___awdiv@divisor,f
  3576     03B1  3EFF               	addlw	-1
  3577     03B2  1D03               	skipz
  3578     03B3  2BAE               	goto	u74_25
  3579     03B4                     i1l1622:
  3580     03B4  3001               	movlw	1
  3581     03B5  02A0               	subwf	___awdiv@counter,f
  3582     03B6  1D03               	btfss	3,2
  3583     03B7  2BB9               	goto	u75_21
  3584     03B8  2BBA               	goto	u75_20
  3585     03B9                     u75_21:
  3586     03B9  2B95               	goto	i1l1614
  3587     03BA                     u75_20:
  3588     03BA                     i1l1624:
  3589     03BA  0821               	movf	___awdiv@sign,w
  3590     03BB  1903               	btfsc	3,2
  3591     03BC  2BBE               	goto	u76_21
  3592     03BD  2BBF               	goto	u76_20
  3593     03BE                     u76_21:
  3594     03BE  2BC4               	goto	i1l1628
  3595     03BF                     u76_20:
  3596     03BF                     i1l1626:
  3597     03BF  09A2               	comf	___awdiv@quotient,f
  3598     03C0  09A3               	comf	___awdiv@quotient+1,f
  3599     03C1  0AA2               	incf	___awdiv@quotient,f
  3600     03C2  1903               	skipnz
  3601     03C3  0AA3               	incf	___awdiv@quotient+1,f
  3602     03C4                     i1l1628:
  3603     03C4  0823               	movf	___awdiv@quotient+1,w
  3604     03C5  00F8               	movwf	?___awdiv+1
  3605     03C6  0822               	movf	___awdiv@quotient,w
  3606     03C7  00F7               	movwf	?___awdiv
  3607     03C8                     i1l513:
  3608     03C8  0008               	return
  3609     03C9                     __end_of___awdiv:
  3610                           
  3611                           	psect	text17
  3612     06BA                     __ptext17:	
  3613 ;; *************** function _adc_read *****************
  3614 ;; Defined at:
  3615 ;;		line 93 in file "adcInterrupt.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  2    0[COMMON] int 
  3622 ;; Registers used:
  3623 ;;		wreg
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         2       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0
  3631 ;;      Temps:          2       0       0       0       0
  3632 ;;      Totals:         4       0       0       0       0
  3633 ;;Total ram usage:        4 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_isr
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     06BA                     _adc_read:	
  3643                           ;psect for function _adc_read
  3644                           
  3645     06BA                     i1l1632:	
  3646                           ;incstack = 0
  3647                           ; Regs used in _adc_read: [wreg]
  3648                           
  3649                           
  3650                           ;adcInterrupt.c: 94:     return ADRESH;
  3651     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3652     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3653     06BC  081E               	movf	30,w	;volatile
  3654     06BD  00F2               	movwf	??_adc_read
  3655     06BE  01F3               	clrf	??_adc_read+1
  3656     06BF  0872               	movf	??_adc_read,w
  3657     06C0  00F0               	movwf	?_adc_read
  3658     06C1  0873               	movf	??_adc_read+1,w
  3659     06C2  00F1               	movwf	?_adc_read+1
  3660     06C3                     i1l46:
  3661     06C3  0008               	return
  3662     06C4                     __end_of_adc_read:
  3663                           
  3664                           	psect	text18
  3665     0529                     __ptext18:	
  3666 ;; *************** function ___lwmod *****************
  3667 ;; Defined at:
  3668 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  divisor         2    0[COMMON] unsigned int 
  3671 ;;  dividend        2    2[COMMON] unsigned int 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  counter         1    5[COMMON] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2    0[COMMON] unsigned int 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         4       0       0       0       0
  3684 ;;      Locals:         1       0       0       0       0
  3685 ;;      Temps:          1       0       0       0       0
  3686 ;;      Totals:         6       0       0       0       0
  3687 ;;Total ram usage:        6 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_isr
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696     0529                     ___lwmod:	
  3697                           ;psect for function ___lwmod
  3698                           
  3699     0529                     i1l1810:	
  3700                           ;incstack = 0
  3701                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3702                           
  3703     0529  0870               	movf	___lwmod@divisor,w
  3704     052A  0471               	iorwf	___lwmod@divisor+1,w
  3705     052B  1903               	btfsc	3,2
  3706     052C  2D2E               	goto	u96_21
  3707     052D  2D2F               	goto	u96_20
  3708     052E                     u96_21:
  3709     052E  2D5E               	goto	i1l1828
  3710     052F                     u96_20:
  3711     052F                     i1l1812:
  3712     052F  01F5               	clrf	___lwmod@counter
  3713     0530  0AF5               	incf	___lwmod@counter,f
  3714     0531  2D3D               	goto	i1l1818
  3715     0532                     i1l1814:
  3716     0532  3001               	movlw	1
  3717     0533                     u97_25:
  3718     0533  1003               	clrc
  3719     0534  0DF0               	rlf	___lwmod@divisor,f
  3720     0535  0DF1               	rlf	___lwmod@divisor+1,f
  3721     0536  3EFF               	addlw	-1
  3722     0537  1D03               	skipz
  3723     0538  2D33               	goto	u97_25
  3724     0539                     i1l1816:
  3725     0539  3001               	movlw	1
  3726     053A  00F4               	movwf	??___lwmod
  3727     053B  0874               	movf	??___lwmod,w
  3728     053C  07F5               	addwf	___lwmod@counter,f
  3729     053D                     i1l1818:
  3730     053D  1FF1               	btfss	___lwmod@divisor+1,7
  3731     053E  2D40               	goto	u98_21
  3732     053F  2D41               	goto	u98_20
  3733     0540                     u98_21:
  3734     0540  2D32               	goto	i1l1814
  3735     0541                     u98_20:
  3736     0541                     i1l1820:
  3737     0541  0871               	movf	___lwmod@divisor+1,w
  3738     0542  0273               	subwf	___lwmod@dividend+1,w
  3739     0543  1D03               	skipz
  3740     0544  2D47               	goto	u99_25
  3741     0545  0870               	movf	___lwmod@divisor,w
  3742     0546  0272               	subwf	___lwmod@dividend,w
  3743     0547                     u99_25:
  3744     0547  1C03               	skipc
  3745     0548  2D4A               	goto	u99_21
  3746     0549  2D4B               	goto	u99_20
  3747     054A                     u99_21:
  3748     054A  2D51               	goto	i1l1824
  3749     054B                     u99_20:
  3750     054B                     i1l1822:
  3751     054B  0870               	movf	___lwmod@divisor,w
  3752     054C  02F2               	subwf	___lwmod@dividend,f
  3753     054D  0871               	movf	___lwmod@divisor+1,w
  3754     054E  1C03               	skipc
  3755     054F  03F3               	decf	___lwmod@dividend+1,f
  3756     0550  02F3               	subwf	___lwmod@dividend+1,f
  3757     0551                     i1l1824:
  3758     0551  3001               	movlw	1
  3759     0552                     u100_25:
  3760     0552  1003               	clrc
  3761     0553  0CF1               	rrf	___lwmod@divisor+1,f
  3762     0554  0CF0               	rrf	___lwmod@divisor,f
  3763     0555  3EFF               	addlw	-1
  3764     0556  1D03               	skipz
  3765     0557  2D52               	goto	u100_25
  3766     0558                     i1l1826:
  3767     0558  3001               	movlw	1
  3768     0559  02F5               	subwf	___lwmod@counter,f
  3769     055A  1D03               	btfss	3,2
  3770     055B  2D5D               	goto	u101_21
  3771     055C  2D5E               	goto	u101_20
  3772     055D                     u101_21:
  3773     055D  2D41               	goto	i1l1820
  3774     055E                     u101_20:
  3775     055E                     i1l1828:
  3776     055E  0873               	movf	___lwmod@dividend+1,w
  3777     055F  00F1               	movwf	?___lwmod+1
  3778     0560  0872               	movf	___lwmod@dividend,w
  3779     0561  00F0               	movwf	?___lwmod
  3780     0562                     i1l642:
  3781     0562  0008               	return
  3782     0563                     __end_of___lwmod:
  3783                           
  3784                           	psect	text19
  3785     046C                     __ptext19:	
  3786 ;; *************** function ___lwdiv *****************
  3787 ;; Defined at:
  3788 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  divisor         2    6[COMMON] unsigned int 
  3791 ;;  dividend        2    8[COMMON] unsigned int 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  quotient        2   11[COMMON] unsigned int 
  3794 ;;  counter         1   13[COMMON] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2    6[COMMON] unsigned int 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         4       0       0       0       0
  3805 ;;      Locals:         3       0       0       0       0
  3806 ;;      Temps:          1       0       0       0       0
  3807 ;;      Totals:         8       0       0       0       0
  3808 ;;Total ram usage:        8 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_isr
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817     046C                     ___lwdiv:	
  3818                           ;psect for function ___lwdiv
  3819                           
  3820     046C                     i1l1784:	
  3821                           ;incstack = 0
  3822                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3823                           
  3824     046C  01FB               	clrf	___lwdiv@quotient
  3825     046D  01FC               	clrf	___lwdiv@quotient+1
  3826     046E                     i1l1786:
  3827     046E  0876               	movf	___lwdiv@divisor,w
  3828     046F  0477               	iorwf	___lwdiv@divisor+1,w
  3829     0470  1903               	btfsc	3,2
  3830     0471  2C73               	goto	u89_21
  3831     0472  2C74               	goto	u89_20
  3832     0473                     u89_21:
  3833     0473  2CAB               	goto	i1l1806
  3834     0474                     u89_20:
  3835     0474                     i1l1788:
  3836     0474  01FD               	clrf	___lwdiv@counter
  3837     0475  0AFD               	incf	___lwdiv@counter,f
  3838     0476  2C82               	goto	i1l1794
  3839     0477                     i1l1790:
  3840     0477  3001               	movlw	1
  3841     0478                     u90_25:
  3842     0478  1003               	clrc
  3843     0479  0DF6               	rlf	___lwdiv@divisor,f
  3844     047A  0DF7               	rlf	___lwdiv@divisor+1,f
  3845     047B  3EFF               	addlw	-1
  3846     047C  1D03               	skipz
  3847     047D  2C78               	goto	u90_25
  3848     047E                     i1l1792:
  3849     047E  3001               	movlw	1
  3850     047F  00FA               	movwf	??___lwdiv
  3851     0480  087A               	movf	??___lwdiv,w
  3852     0481  07FD               	addwf	___lwdiv@counter,f
  3853     0482                     i1l1794:
  3854     0482  1FF7               	btfss	___lwdiv@divisor+1,7
  3855     0483  2C85               	goto	u91_21
  3856     0484  2C86               	goto	u91_20
  3857     0485                     u91_21:
  3858     0485  2C77               	goto	i1l1790
  3859     0486                     u91_20:
  3860     0486                     i1l1796:
  3861     0486  3001               	movlw	1
  3862     0487                     u92_25:
  3863     0487  1003               	clrc
  3864     0488  0DFB               	rlf	___lwdiv@quotient,f
  3865     0489  0DFC               	rlf	___lwdiv@quotient+1,f
  3866     048A  3EFF               	addlw	-1
  3867     048B  1D03               	skipz
  3868     048C  2C87               	goto	u92_25
  3869     048D  0877               	movf	___lwdiv@divisor+1,w
  3870     048E  0279               	subwf	___lwdiv@dividend+1,w
  3871     048F  1D03               	skipz
  3872     0490  2C93               	goto	u93_25
  3873     0491  0876               	movf	___lwdiv@divisor,w
  3874     0492  0278               	subwf	___lwdiv@dividend,w
  3875     0493                     u93_25:
  3876     0493  1C03               	skipc
  3877     0494  2C96               	goto	u93_21
  3878     0495  2C97               	goto	u93_20
  3879     0496                     u93_21:
  3880     0496  2C9E               	goto	i1l1802
  3881     0497                     u93_20:
  3882     0497                     i1l1798:
  3883     0497  0876               	movf	___lwdiv@divisor,w
  3884     0498  02F8               	subwf	___lwdiv@dividend,f
  3885     0499  0877               	movf	___lwdiv@divisor+1,w
  3886     049A  1C03               	skipc
  3887     049B  03F9               	decf	___lwdiv@dividend+1,f
  3888     049C  02F9               	subwf	___lwdiv@dividend+1,f
  3889     049D                     i1l1800:
  3890     049D  147B               	bsf	___lwdiv@quotient,0
  3891     049E                     i1l1802:
  3892     049E  3001               	movlw	1
  3893     049F                     u94_25:
  3894     049F  1003               	clrc
  3895     04A0  0CF7               	rrf	___lwdiv@divisor+1,f
  3896     04A1  0CF6               	rrf	___lwdiv@divisor,f
  3897     04A2  3EFF               	addlw	-1
  3898     04A3  1D03               	skipz
  3899     04A4  2C9F               	goto	u94_25
  3900     04A5                     i1l1804:
  3901     04A5  3001               	movlw	1
  3902     04A6  02FD               	subwf	___lwdiv@counter,f
  3903     04A7  1D03               	btfss	3,2
  3904     04A8  2CAA               	goto	u95_21
  3905     04A9  2CAB               	goto	u95_20
  3906     04AA                     u95_21:
  3907     04AA  2C86               	goto	i1l1796
  3908     04AB                     u95_20:
  3909     04AB                     i1l1806:
  3910     04AB  087C               	movf	___lwdiv@quotient+1,w
  3911     04AC  00F7               	movwf	?___lwdiv+1
  3912     04AD  087B               	movf	___lwdiv@quotient,w
  3913     04AE  00F6               	movwf	?___lwdiv
  3914     04AF                     i1l632:
  3915     04AF  0008               	return
  3916     04B0                     __end_of___lwdiv:
  3917                           
  3918                           	psect	text20
  3919     03C9                     __ptext20:	
  3920 ;; *************** function ___awmod *****************
  3921 ;; Defined at:
  3922 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  divisor         2    0[COMMON] int 
  3925 ;;  dividend        2    2[COMMON] int 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  sign            1    6[COMMON] unsigned char 
  3928 ;;  counter         1    5[COMMON] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  2    0[COMMON] int 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         4       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0
  3940 ;;      Temps:          1       0       0       0       0
  3941 ;;      Totals:         7       0       0       0       0
  3942 ;;Total ram usage:        7 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_isr
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951     03C9                     ___awmod:	
  3952                           ;psect for function ___awmod
  3953                           
  3954     03C9                     i1l1746:	
  3955                           ;incstack = 0
  3956                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3957                           
  3958     03C9  01F6               	clrf	___awmod@sign
  3959     03CA                     i1l1748:
  3960     03CA  1FF3               	btfss	___awmod@dividend+1,7
  3961     03CB  2BCD               	goto	u80_21
  3962     03CC  2BCE               	goto	u80_20
  3963     03CD                     u80_21:
  3964     03CD  2BD5               	goto	i1l1754
  3965     03CE                     u80_20:
  3966     03CE                     i1l1750:
  3967     03CE  09F2               	comf	___awmod@dividend,f
  3968     03CF  09F3               	comf	___awmod@dividend+1,f
  3969     03D0  0AF2               	incf	___awmod@dividend,f
  3970     03D1  1903               	skipnz
  3971     03D2  0AF3               	incf	___awmod@dividend+1,f
  3972     03D3                     i1l1752:
  3973     03D3  01F6               	clrf	___awmod@sign
  3974     03D4  0AF6               	incf	___awmod@sign,f
  3975     03D5                     i1l1754:
  3976     03D5  1FF1               	btfss	___awmod@divisor+1,7
  3977     03D6  2BD8               	goto	u81_21
  3978     03D7  2BD9               	goto	u81_20
  3979     03D8                     u81_21:
  3980     03D8  2BDE               	goto	i1l1758
  3981     03D9                     u81_20:
  3982     03D9                     i1l1756:
  3983     03D9  09F0               	comf	___awmod@divisor,f
  3984     03DA  09F1               	comf	___awmod@divisor+1,f
  3985     03DB  0AF0               	incf	___awmod@divisor,f
  3986     03DC  1903               	skipnz
  3987     03DD  0AF1               	incf	___awmod@divisor+1,f
  3988     03DE                     i1l1758:
  3989     03DE  0870               	movf	___awmod@divisor,w
  3990     03DF  0471               	iorwf	___awmod@divisor+1,w
  3991     03E0  1903               	btfsc	3,2
  3992     03E1  2BE3               	goto	u82_21
  3993     03E2  2BE4               	goto	u82_20
  3994     03E3                     u82_21:
  3995     03E3  2C13               	goto	i1l1776
  3996     03E4                     u82_20:
  3997     03E4                     i1l1760:
  3998     03E4  01F5               	clrf	___awmod@counter
  3999     03E5  0AF5               	incf	___awmod@counter,f
  4000     03E6  2BF2               	goto	i1l1766
  4001     03E7                     i1l1762:
  4002     03E7  3001               	movlw	1
  4003     03E8                     u83_25:
  4004     03E8  1003               	clrc
  4005     03E9  0DF0               	rlf	___awmod@divisor,f
  4006     03EA  0DF1               	rlf	___awmod@divisor+1,f
  4007     03EB  3EFF               	addlw	-1
  4008     03EC  1D03               	skipz
  4009     03ED  2BE8               	goto	u83_25
  4010     03EE                     i1l1764:
  4011     03EE  3001               	movlw	1
  4012     03EF  00F4               	movwf	??___awmod
  4013     03F0  0874               	movf	??___awmod,w
  4014     03F1  07F5               	addwf	___awmod@counter,f
  4015     03F2                     i1l1766:
  4016     03F2  1FF1               	btfss	___awmod@divisor+1,7
  4017     03F3  2BF5               	goto	u84_21
  4018     03F4  2BF6               	goto	u84_20
  4019     03F5                     u84_21:
  4020     03F5  2BE7               	goto	i1l1762
  4021     03F6                     u84_20:
  4022     03F6                     i1l1768:
  4023     03F6  0871               	movf	___awmod@divisor+1,w
  4024     03F7  0273               	subwf	___awmod@dividend+1,w
  4025     03F8  1D03               	skipz
  4026     03F9  2BFC               	goto	u85_25
  4027     03FA  0870               	movf	___awmod@divisor,w
  4028     03FB  0272               	subwf	___awmod@dividend,w
  4029     03FC                     u85_25:
  4030     03FC  1C03               	skipc
  4031     03FD  2BFF               	goto	u85_21
  4032     03FE  2C00               	goto	u85_20
  4033     03FF                     u85_21:
  4034     03FF  2C06               	goto	i1l1772
  4035     0400                     u85_20:
  4036     0400                     i1l1770:
  4037     0400  0870               	movf	___awmod@divisor,w
  4038     0401  02F2               	subwf	___awmod@dividend,f
  4039     0402  0871               	movf	___awmod@divisor+1,w
  4040     0403  1C03               	skipc
  4041     0404  03F3               	decf	___awmod@dividend+1,f
  4042     0405  02F3               	subwf	___awmod@dividend+1,f
  4043     0406                     i1l1772:
  4044     0406  3001               	movlw	1
  4045     0407                     u86_25:
  4046     0407  1003               	clrc
  4047     0408  0CF1               	rrf	___awmod@divisor+1,f
  4048     0409  0CF0               	rrf	___awmod@divisor,f
  4049     040A  3EFF               	addlw	-1
  4050     040B  1D03               	skipz
  4051     040C  2C07               	goto	u86_25
  4052     040D                     i1l1774:
  4053     040D  3001               	movlw	1
  4054     040E  02F5               	subwf	___awmod@counter,f
  4055     040F  1D03               	btfss	3,2
  4056     0410  2C12               	goto	u87_21
  4057     0411  2C13               	goto	u87_20
  4058     0412                     u87_21:
  4059     0412  2BF6               	goto	i1l1768
  4060     0413                     u87_20:
  4061     0413                     i1l1776:
  4062     0413  0876               	movf	___awmod@sign,w
  4063     0414  1903               	btfsc	3,2
  4064     0415  2C17               	goto	u88_21
  4065     0416  2C18               	goto	u88_20
  4066     0417                     u88_21:
  4067     0417  2C1D               	goto	i1l1780
  4068     0418                     u88_20:
  4069     0418                     i1l1778:
  4070     0418  09F2               	comf	___awmod@dividend,f
  4071     0419  09F3               	comf	___awmod@dividend+1,f
  4072     041A  0AF2               	incf	___awmod@dividend,f
  4073     041B  1903               	skipnz
  4074     041C  0AF3               	incf	___awmod@dividend+1,f
  4075     041D                     i1l1780:
  4076     041D  0873               	movf	___awmod@dividend+1,w
  4077     041E  00F1               	movwf	?___awmod+1
  4078     041F  0872               	movf	___awmod@dividend,w
  4079     0420  00F0               	movwf	?___awmod
  4080     0421                     i1l526:
  4081     0421  0008               	return
  4082     0422                     __end_of___awmod:
  4083                           
  4084                           	psect	text21
  4085     06CC                     __ptext21:	
  4086 ;; *************** function _UART_write_char *****************
  4087 ;; Defined at:
  4088 ;;		line 32 in file "Usart.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  c               1    wreg     unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  c               1    0[COMMON] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         1       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0
  4105 ;;      Totals:         1       0       0       0       0
  4106 ;;Total ram usage:        1 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_isr
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115     06CC                     _UART_write_char:	
  4116                           ;psect for function _UART_write_char
  4117                           
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _UART_write_char: [wreg]
  4121                           ;UART_write_char@c stored from wreg
  4122     06CC  00F0               	movwf	UART_write_char@c
  4123     06CD                     i1l1642:
  4124                           
  4125                           ;Usart.c: 33:     TXREG = c;
  4126     06CD  0870               	movf	UART_write_char@c,w
  4127     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4128     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  4129     06D0  0099               	movwf	25	;volatile
  4130     06D1                     i1l271:
  4131     06D1  0008               	return
  4132     06D2                     __end_of_UART_write_char:
  4133                           
  4134                           	psect	text22
  4135     06D2                     __ptext22:	
  4136 ;; *************** function _UART_read_char *****************
  4137 ;; Defined at:
  4138 ;;		line 36 in file "Usart.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      unsigned char 
  4145 ;; Registers used:
  4146 ;;		wreg
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0
  4155 ;;      Totals:         0       0       0       0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_isr
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165     06D2                     _UART_read_char:	
  4166                           ;psect for function _UART_read_char
  4167                           
  4168     06D2                     i1l1646:	
  4169                           ;incstack = 0
  4170                           ; Regs used in _UART_read_char: [wreg]
  4171                           
  4172                           
  4173                           ;Usart.c: 37:     return RCREG;
  4174     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  4175     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  4176     06D4  081A               	movf	26,w	;volatile
  4177     06D5                     i1l274:
  4178     06D5  0008               	return
  4179     06D6                     __end_of_UART_read_char:
  4180     007E                     btemp	set	126	;btemp
  4181     007E                     wtemp0	set	126
  4182                           
  4183                           	psect	idloc
  4184                           
  4185                           ;Config register IDLOC0 @ 0x2000
  4186                           ;	unspecified, using default values
  4187     2000                     	org	8192
  4188     2000  3FFF               	dw	16383
  4189                           
  4190                           ;Config register IDLOC1 @ 0x2001
  4191                           ;	unspecified, using default values
  4192     2001                     	org	8193
  4193     2001  3FFF               	dw	16383
  4194                           
  4195                           ;Config register IDLOC2 @ 0x2002
  4196                           ;	unspecified, using default values
  4197     2002                     	org	8194
  4198     2002  3FFF               	dw	16383
  4199                           
  4200                           ;Config register IDLOC3 @ 0x2003
  4201                           ;	unspecified, using default values
  4202     2003                     	org	8195
  4203     2003  3FFF               	dw	16383
  4204                           
  4205                           	psect	config
  4206                           
  4207                           ;Config register CONFIG1 @ 0x2007
  4208                           ;	Oscillator Selection bits
  4209                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4210                           ;	Watchdog Timer Enable bit
  4211                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4212                           ;	Power-up Timer Enable bit
  4213                           ;	PWRTE = OFF, PWRT disabled
  4214                           ;	RE3/MCLR pin function select bit
  4215                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4216                           ;	Code Protection bit
  4217                           ;	CP = OFF, Program memory code protection is disabled
  4218                           ;	Data Code Protection bit
  4219                           ;	CPD = OFF, Data memory code protection is disabled
  4220                           ;	Brown Out Reset Selection bits
  4221                           ;	BOREN = OFF, BOR disabled
  4222                           ;	Internal External Switchover bit
  4223                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4224                           ;	Fail-Safe Clock Monitor Enabled bit
  4225                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4226                           ;	Low Voltage Programming Enable bit
  4227                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4228                           ;	In-Circuit Debugger Mode bit
  4229                           ;	DEBUG = 0x1, unprogramme  4230     2007                     	org	8199
  4231     2007  20D4               	dw	8404
  4232                           
  4233                           ;Config register CONFIG2 @ 0x2008
  4234                           ;	Brown-out Reset Selection bit
  4235                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4236                           ;	Flash Program Memory Self Write Enable bits
  4237                           ;	WRT = OFF, Write protection off
  4238     2008                     	org	8200
  4239     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    _isr->_map
    _map->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _setup->_adc_init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2532
                                             32 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _NumtoChar
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     294
                     _UART_RX_config
                     _UART_TX_config
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             3     1      2      98
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                       2     0      2      98
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                       2     0      2      98
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _NumtoChar                                            2     0      2     478
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     354
                                             28 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                             26 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     636
                                             29 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                             29 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                             26 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 11    11      0    4897
                                             14 BANK0     11    11      0
                     _UART_read_char
                    _UART_write_char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           _adc_read
                                _map
 ---------------------------------------------------------------------------------
 (5) _map                                                 12     2     10    1709
                                             12 COMMON     2     2      0
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _UART_write_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _NumtoChar
   _setup
     _UART_RX_config
     _UART_TX_config
     _adc_init

 _isr (ROOT)
   _UART_read_char
   _UART_write_char
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___awmod
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___wmul
   _adc_read
   _map
     ___awdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jul 26 23:48:19 2023

                       pc 0002                        l43 0159                        l29 013E  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
                     l200 0504                       l201 0505                       l210 0527  
                     l202 050B                       l203 050C                       l212 0528  
                     l204 0512                       l205 0513                       l206 0519  
                     l230 0673                       l207 051A                       l215 065B  
                     l208 0520                       l224 063F                       l209 0521  
                     l161 04EC                       l218 06B9                       l227 046B  
                     l236 05F8                       l156 05CF                       l265 0689  
                     l196 04F6                       l268 06AC                       l197 04F7  
                     l198 04FD                       l199 04FE                       _RD0 0040  
                     _RD1 0041                       _RD2 0042                       _RD3 0043  
                     _RE1 0049                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u600 0517  
                     u601 0516                       u610 051E                       u611 051D  
                     u620 0525                       u621 0524                       u550 04F4  
                     u551 04F3                       u560 04FB                       u561 04FA  
                     u570 0502                       u571 0501                       u580 0509  
                     u581 0508                       u590 0510                       u591 050F  
                     u770 0626                       u771 0625                       u780 0636  
                     u781 0635                       u790 05F8                       u791 05F7  
                     _map 0563                       _isr 015A                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076                      l1500 010B  
                    l1430 0509                      l1422 04F0                      l1510 0154  
                    l1502 0143                      l1432 0510                      l1424 04F4  
                    l1512 0157                      l1504 0149                      l1440 001E  
                    l1434 0517                      l1426 04FB                      l1530 0670  
                    l1522 065F                      l1514 0158                      l1506 014A  
                    l1450 003F                      l1442 001F                      l1436 051E  
                    l1428 0502                      l1524 0660                      l1700 04B3  
                    l1532 069D                      l1508 0151                      l1460 006B  
                    l1452 0049                      l1444 0029                      l1438 0525  
                    l1526 0666                      l1550 0681                      l1542 0674  
                    l1534 06A4                      l1470 0094                      l1462 0072  
                    l1454 0050                      l1446 002E                      l1528 0669  
                    l1720 04BD                      l1712 04B9                      l1704 04B5  
                    l1560 0688                      l1552 0682                      l1544 0677  
                    l1536 06AA                      l1480 00C0                      l1472 009E  
                    l1464 007C                      l1456 005A                      l1448 0038  
                    l1570 064D                      l1554 0683                      l1546 067D  
                    l1538 06AB                      l1490 00E9                      l1482 00C7  
                    l1474 00A5                      l1466 0083                      l1458 0061  
                    l1650 059A                      l1572 0658                      l1564 0643  
                    l1732 04C3                      l1724 04BF                      l1716 04BB  
                    l1708 04B7                      l1556 0684                      l1548 067E  
                    l1492 00F3                      l1484 00D1                      l1476 00AF  
                    l1468 008D                      l1660 05C4                      l1652 05AA  
                    l1900 02DE                      l1566 0644                      l1670 0448  
                    l1662 0422                      l1558 0687                      l1494 00FA  
                    l1486 00D8                      l1478 00B6                      l1654 05AE  
                    l1910 0314                      l1902 02E4                      l1568 064A  
                    l1672 06AD                      l1664 0428                      l1680 0630  
                    l1728 04C1                      l1496 0104                      l1488 00E2  
                    l1656 05AF                      l1912 031E                      l1904 02F4  
                    l1666 0432                      l1682 0636                      l1674 0621  
                    l1690 05E3                      l1738 04C5                      l1658 05B9  
                    l1914 032E                      l1906 0304                      l1668 0442  
                    l1684 0639                      l1676 0626                      l1692 05EB  
                    l1916 033E                      l1908 030E                      l1678 0629  
                    l1686 05D3                      l1694 04B0                      l1688 05D6  
                    l1696 04B1                      l1880 0291                      l1890 02AF  
                    l1882 0296                      l1972 0112                      l1892 02B4  
                    l1884 029B                      l1974 04CC                      l1894 02BE  
                    l1886 02A1                      ?_map 0024                      l1896 02C4  
                    l1888 02AC                      l1898 02CE                      _ADIF 0066  
                    ?_isr 0070                      STR_1 0690                      STR_2 0697  
                    u1107 0356                      u1117 014E                      u1127 066D  
                    u1080 02A1                      u1137 042E                      u1081 02A0  
                    u1147 043E                      u1157 044E                      u1167 0653  
                    u1097 02A7                      i1l46 06C3                      i1l55 0599  
       ?_Lcd_Write_String 0070                      _cont 0049                      _main 0291  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 003C  
         __end_of_Lcd_Cmd 065C          UART_write_char@c 0070                     ??_map 007C  
                   ??_isr 002E                     ?_main 0070           __end_of___awdiv 03C9  
         __end_of___awmod 0422                     _ANSEL 0188           ___awdiv@divisor 0077  
         __end_of___lwdiv 04B0                     i1l144 028A                     i1l271 06D1  
                   i1l360 0605           __end_of___lwmod 0563                     i1l513 03C8  
                   i1l274 06D5                     i1l362 061D                     i1l526 0421  
                   i1l632 04AF                     i1l642 0562           ___awdiv@counter 0020  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   u70_25 0387                     u71_20 0395                     u63_20 05FF  
                   u71_21 0394                     u63_21 05FE                     u80_20 03CE  
                   u80_21 03CD                     u72_25 0396                     u64_25 0606  
                   u81_20 03D9                     u73_20 03A6                     u81_21 03D8  
                   u73_21 03A5                     _TRISA 0085                     _TRISB 0086  
                   u73_25 03A2                     u65_25 060D                     _TRISD 0088  
                   _TRISE 0089                     u82_20 03E4                     u66_20 0619  
                   u82_21 03E3                     u66_21 0618                     u90_25 0478  
                   u74_25 03AE                     u91_20 0486                     u75_20 03BA  
                   u67_20 0367                     u91_21 0485                     u75_21 03B9  
                   u67_21 0366                     u83_25 03E8                     u84_20 03F6  
                   u76_20 03BF                     u68_20 0372                     u84_21 03F5  
                   u76_21 03BE                     u68_21 0371                     u92_25 0487  
                   u85_20 0400                     u93_20 0497                     u69_20 0383  
                   u85_21 03FF                     u93_21 0496                     u69_21 0382  
                   u85_25 03FC                     u93_25 0493                     u86_25 0407  
                   u94_25 049F                     u87_20 0413                     u95_20 04AB  
                   u87_21 0412                     u95_21 04AA                     u88_20 0418  
                   u96_20 052F                     u88_21 0417                     u96_21 052E  
                   u89_20 0474                     u89_21 0473                     _TXREG 0019  
                   u97_25 0533                     u98_20 0541                     u98_21 0540  
                   u99_20 054B                     u99_21 054A                     u99_25 0547  
                   _setup 059A                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 046C          __end_of_Lcd_Port 0529  
         __initialization 0011              __end_of_main 0360                    ??_main 0040  
                  _ADRESH 001E          ___awdiv@dividend 0079                    ?_setup 0070  
                  _ANSELH 0189          __end_of_adc_init 015A          __end_of_adc_read 06C4  
                  u100_25 0552                    u101_20 055E                    u101_21 055D  
                  u102_20 015E                    u102_21 015D                    u103_20 01F7  
                  u103_21 01F6                    i1l1600 0377                    u104_20 020B  
                  u104_21 020A                    i1l1610 038D                    i1l1602 037B  
                  i1l1620 03AD                    i1l1612 0391                    i1l1604 037D  
                  i1l1622 03B4                    i1l1614 0395                    i1l1606 0383  
                  i1l1800 049D                    i1l1632 06BA                    i1l1616 03A6  
                  i1l1608 0386                    i1l1624 03BA                    u105_20 0211  
                  u105_21 0210                    i1l1642 06CD                    i1l1802 049E  
                  i1l1810 0529                    i1l1626 03BF                    i1l1618 03AC  
                  i1l1804 04A5                    i1l1820 0541                    i1l1812 052F  
                  i1l1628 03C4                    i1l1580 060C                    i1l1636 0563  
                  i1l1646 06D2                    i1l1750 03CE                    i1l1806 04AB  
                  i1l1822 054B                    i1l1814 0532                    i1l1590 0363  
                  i1l1582 0613                    i1l1574 05F9                    i1l1638 0595  
                  i1l1760 03E4                    i1l1752 03D3                    i1l1824 0551  
                  i1l1816 0539                    i1l1592 0367                    i1l1584 0619  
                  i1l1576 05FB                    u106_20 0222                    i1l1840 0199  
                  i1l1832 015A                    u106_21 0221                    i1l1770 0400  
                  i1l1762 03E7                    i1l1754 03D5                    i1l1746 03C9  
                  i1l1826 0558                    i1l1818 053D                    i1l1594 036C  
                  i1l1578 05FF                    i1l1842 01AC                    i1l1834 015E  
                  i1l1850 01F3                    i1l1780 041D                    i1l1772 0406  
                  i1l1764 03EE                    i1l1756 03D9                    i1l1748 03CA  
                  i1l1828 055E                    i1l1596 036E                    i1l1588 0360  
                  i1l1860 0211                    i1l1852 01F7                    i1l1844 01CC  
                  i1l1836 0169                    i1l1774 040D                    i1l1766 03F2  
                  i1l1758 03DE                    i1l1790 0477                    i1l1598 0372  
                  i1l1870 022B                    i1l1862 0216                    i1l1854 01FD  
                  i1l1846 01DF                    i1l1838 0186                    i1l1768 03F6  
                  i1l1776 0413                    i1l1792 047E                    i1l1784 046C  
                  u107_20 0228                    i1l1872 0231                    i1l1864 021C  
                  i1l1856 0205                    i1l1848 01F2                    u107_21 0227  
                  i1l1778 0418                    i1l1794 0482                    i1l1786 046E  
                  i1l1874 0244                    i1l1866 0222                    i1l1858 020B  
                  i1l1796 0486                    i1l1788 0474                    i1l1876 0264  
                  i1l1868 0228                    i1l1798 0497                    i1l1878 0277  
               ??_Lcd_Cmd 003A                    _SPBRGH 009A                    ___wmul 05F9  
               ??___awdiv 007B                 ??___awmod 0074                 ??___lwdiv 007A  
               ??___lwmod 0074          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075                    map@val 0024                NumtoChar@a 0039  
         _UART_write_char 06CC                    saved_w 007E           Lcd_Set_Cursor@a 003E  
         Lcd_Set_Cursor@b 003D   __end_of__initialization 001A         __end_of_Lcd_Clear 06BA  
          __pcstackCOMMON 0070             __end_of_setup 05D0            _Lcd_Set_Cursor 061E  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                _decenaCont 0045  
              _decenaVolt 004D                   ??_setup 003C                __pbssBANK0 0043  
       __end_of_NumtoChar 04ED                __pmaintext 0291                   ?___wmul 0070  
              __pintentry 0004   __end_of_UART_write_char 06D2    __end_of_Lcd_Set_Cursor 0640  
               ?_adc_init 0039                 ?_adc_read 0070                ??_Lcd_Init 003D  
              ??_Lcd_Port 0039                __stringtab 068A            _Lcd_Write_Char 065C  
                 _Lcd_Cmd 0640            _UART_RX_config 0674            _UART_TX_config 069D  
            isr@tempEntry 0036                   ___awdiv 0360                   ___awmod 03C9  
                 ___lwdiv 046C                   ___lwmod 0529           ?_Lcd_Set_Cursor 003D  
              ??_adc_init 003B                ??_adc_read 0072                   __ptext1 059A  
                 __ptext2 001E                   __ptext3 069D                   __ptext4 0674  
                 __ptext5 04B0                   __ptext6 05D0                   __ptext7 065C  
                 __ptext8 061E                   __ptext9 0422          ___awmod@dividend 0072  
                 clrloop0 06C5    __end_of_Lcd_Write_Char 0674      end_of_initialization 001A  
  __end_of_UART_RX_config 068A                   isr@temp 0037    __end_of_UART_TX_config 06AD  
               _RCSTAbits 0018                 Lcd_Port@a 0039          ?_UART_write_char 0070  
               _PORTEbits 0009                _unidadCont 0043                _unidadVolt 004B  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 003E         Lcd_Write_String@i 003C  
         ?_UART_RX_config 0039           ?_UART_TX_config 0039                 _TXSTAbits 0098  
               _Lcd_Clear 06AD    UART_RX_config@baudrate 0039            __end_of___wmul 061E  
          _UART_read_char 06D2          _Lcd_Write_String 05D0               _BAUDCTLbits 0187  
     start_initialization 0011               __end_of_map 059A               __end_of_isr 0291  
              ?_Lcd_Clear 0070    __end_of_UART_read_char 06D6                  ??___wmul 0074  
               _NumtoChar 04B0           adc_init@channel 0039           Lcd_Write_Char@a 003B  
               ___latbits 0002             __pcstackBANK0 0020                  ?_Lcd_Cmd 0070  
        ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 003E               _centenaCont 0047  
         ?_UART_read_char 0070                  ?___awdiv 0077                  ?___awmod 0070  
             _centenaVolt 004F                  ?___lwdiv 0076                ?_NumtoChar 0039  
                ?___lwmod 0070                 __pstrings 068A          ___lwdiv@quotient 007B  
       interrupt_function 0004            ___wmul@product 0074                 clear_ram0 06C4  
                _PIE1bits 008C                  Lcd_Cmd@a 003C                  _PIR1bits 000C  
             ??_Lcd_Clear 003D                 map@maxOld 0028                 map@maxNew 002C  
               map@minOld 0026                 map@minNew 002A                 map@newVal 007C  
              _ADCON0bits 001F               __stringbase 068F                _ADCON1bits 009F  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 003A          ??_UART_RX_config 003B  
                _Lcd_Init 0422                  _Lcd_Port 04ED          ??_UART_TX_config 003B  
__end_of_Lcd_Write_String 05F9               ??_NumtoChar 003B        __end_of__stringtab 0690  
                _adc_init 001E                  _adc_read 06BA                  _isr$1211 0030  
                _isr$1212 0032                  _isr$1213 0034           ___lwdiv@divisor 0076  
         ___lwdiv@counter 007D                  __ptext10 06AD                  __ptext11 0640  
                __ptext20 03C9                  __ptext12 04ED                  __ptext21 06CC  
                __ptext13 015A                  __ptext22 06D2                  __ptext14 0563  
                __ptext15 05F9                  __ptext16 0360                  __ptext17 06BA  
                __ptext18 0529                  __ptext19 046C                  _potValue 0051  
  UART_TX_config@baudrate 0039                _INTCONbits 000B                  intlevel1 0000  
        ___lwmod@dividend 0072          ??_UART_read_char 0070                 stringcode 068A  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 003F           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 068A                  stringtab 068A  
       ??_UART_write_char 0070  

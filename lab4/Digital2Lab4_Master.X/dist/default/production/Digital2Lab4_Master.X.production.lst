

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 10 00:27:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0009                     _PORTE	set	9
   468     0008                     _PORTD	set	8
   469     0006                     _PORTB	set	6
   470     0005                     _PORTA	set	5
   471     000B                     _INTCONbits	set	11
   472     0013                     _SSPBUF	set	19
   473     0014                     _SSPCON	set	20
   474     0031                     _RB1	set	49
   475     0030                     _RB0	set	48
   476     0049                     _RE1	set	73
   477     0048                     _RE0	set	72
   478     0047                     _RD7	set	71
   479     0046                     _RD6	set	70
   480     0045                     _RD5	set	69
   481     0044                     _RD4	set	68
   482     0043                     _RD3	set	67
   483     0042                     _RD2	set	66
   484     0041                     _RD1	set	65
   485     0040                     _RD0	set	64
   486     0063                     _SSPIF	set	99
   487     005E                     _PEIE	set	94
   488     005F                     _GIE	set	95
   489     0096                     _IOCBbits	set	150
   490     0095                     _WPUBbits	set	149
   491     0081                     _OPTION_REGbits	set	129
   492     0089                     _TRISE	set	137
   493     0088                     _TRISD	set	136
   494     0086                     _TRISB	set	134
   495     0085                     _TRISA	set	133
   496     0091                     _SSPCON2bits	set	145
   497     0087                     _TRISCbits	set	135
   498     0094                     _SSPSTAT	set	148
   499     0093                     _SSPADD	set	147
   500     0091                     _SSPCON2	set	145
   501     0463                     _SSPIE	set	1123
   502     043C                     _TRISC4	set	1084
   503     043B                     _TRISC3	set	1083
   504     0189                     _ANSELH	set	393
   505     0188                     _ANSEL	set	392
   506                           
   507                           	psect	strings
   508     0800                     __pstrings:
   509     0800                     stringtab:
   510     0800                     __stringtab:
   511     0800                     stringcode:	
   512                           ;	String table - string pointers are 1 byte each
   513                           
   514     0800                     stringdir:
   515     0800  3008               	movlw	high stringdir
   516     0801  008A               	movwf	10
   517     0802  0804               	movf	4,w
   518     0803  0A84               	incf	4,f
   519     0804  0782               	addwf	2,f
   520     0805                     __stringbase:
   521     0805  3400               	retlw	0
   522     0806                     __end_of__stringtab:
   523     0806                     STR_1:
   524     0806  3450               	retlw	80	;'P'
   525     0807  346F               	retlw	111	;'o'
   526     0808  3474               	retlw	116	;'t'
   527     0809  3431               	retlw	49	;'1'
   528     080A  343A               	retlw	58	;':'
   529     080B  3400               	retlw	0
   530                           
   531                           	psect	cinit
   532     000F                     start_initialization:	
   533                           ; #config settings
   534                           
   535     000F                     __initialization:
   536                           
   537                           ; Clear objects allocated to BANK0
   538     000F  1383               	bcf	3,7	;select IRP bank0
   539     0010  3020               	movlw	low __pbssBANK0
   540     0011  0084               	movwf	4
   541     0012  3050               	movlw	low (__pbssBANK0+48)
   542     0013  120A  158A  2349  120A  118A  	fcall	clear_ram0
   543     0018                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546     0018                     __end_of__initialization:
   547     0018  0183               	clrf	3
   548     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551     0020                     __pbssBANK0:
   552     0020                     _uniPot:
   553     0020                     	ds	2
   554     0022                     _decPot:
   555     0022                     	ds	2
   556     0024                     _cenPot:
   557     0024                     	ds	2
   558     0026                     _potValue:
   559     0026                     	ds	2
   560     0028                     _contEdit:
   561     0028                     	ds	2
   562     002A                     _check:
   563     002A                     	ds	2
   564     002C                     _uniYear:
   565     002C                     	ds	2
   566     002E                     _decYear:
   567     002E                     	ds	2
   568     0030                     _uniMonth:
   569     0030                     	ds	2
   570     0032                     _decMonth:
   571     0032                     	ds	2
   572     0034                     _uniDay:
   573     0034                     	ds	2
   574     0036                     _decDay:
   575     0036                     	ds	2
   576     0038                     _uniHours:
   577     0038                     	ds	2
   578     003A                     _decHours:
   579     003A                     	ds	2
   580     003C                     _uniMinutes:
   581     003C                     	ds	2
   582     003E                     _decMinutes:
   583     003E                     	ds	2
   584     0040                     _uniSeconds:
   585     0040                     	ds	2
   586     0042                     _decSeconds:
   587     0042                     	ds	2
   588     0044                     _year:
   589     0044                     	ds	2
   590     0046                     _month:
   591     0046                     	ds	2
   592     0048                     _day:
   593     0048                     	ds	2
   594     004A                     _hours:
   595     004A                     	ds	2
   596     004C                     _minutes:
   597     004C                     	ds	2
   598     004E                     _seconds:
   599     004E                     	ds	2
   600                           
   601                           	psect	clrtext
   602     0B49                     clear_ram0:	
   603                           ;	Called with FSR containing the base address, and
   604                           ;	W with the last address+1
   605                           
   606     0B49  0064               	clrwdt	;clear the watchdog before getting into this loop
   607     0B4A                     clrloop0:
   608     0B4A  0180               	clrf	0	;clear RAM location pointed to by FSR
   609     0B4B  0A84               	incf	4,f	;increment pointer
   610     0B4C  0604               	xorwf	4,w	;XOR with final address
   611     0B4D  1903               	btfsc	3,2	;have we reached the end yet?
   612     0B4E  3400               	retlw	0	;all done for this memory range, return
   613     0B4F  0604               	xorwf	4,w	;XOR again to restore value
   614     0B50  2B4A               	goto	clrloop0	;do the next byte
   615                           
   616                           	psect	cstackCOMMON
   617     0070                     __pcstackCOMMON:
   618     0070                     ?_setup:
   619     0070                     ?_I2C_Master_Wait:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_I2C_Master_Start:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_I2C_Master_RepeatedStart:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_I2C_Master_Stop:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_Lcd_Port:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_Lcd_Cmd:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_Lcd_Clear:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_Lcd_Init:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_Lcd_Write_Char:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_Lcd_Write_String:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_isr:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ??_isr:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_main:	
   656                           ; 1 bytes @ 0x0
   657                           
   658                           
   659                           ; 1 bytes @ 0x0
   660     0070                     	ds	2
   661     0072                     ?_NumtoChar:
   662     0072                     ?_ioc_inint:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     ??_I2C_Master_Wait:	
   666                           ; 1 bytes @ 0x2
   667                           
   668     0072                     ??_I2C_Master_Start:	
   669                           ; 1 bytes @ 0x2
   670                           
   671     0072                     ??_I2C_Master_RepeatedStart:	
   672                           ; 1 bytes @ 0x2
   673                           
   674     0072                     ??_I2C_Master_Stop:	
   675                           ; 1 bytes @ 0x2
   676                           
   677     0072                     ?_I2C_Master_Write:	
   678                           ; 1 bytes @ 0x2
   679                           
   680     0072                     ??_Lcd_Port:	
   681                           ; 1 bytes @ 0x2
   682                           
   683     0072                     ?_increSecMin:	
   684                           ; 1 bytes @ 0x2
   685                           
   686     0072                     ?_increHour:	
   687                           ; 2 bytes @ 0x2
   688                           
   689     0072                     ?_increDay:	
   690                           ; 2 bytes @ 0x2
   691                           
   692     0072                     ?_increMonth:	
   693                           ; 2 bytes @ 0x2
   694                           
   695     0072                     ?_increYear:	
   696                           ; 2 bytes @ 0x2
   697                           
   698     0072                     ?_I2C_Master_Read:	
   699                           ; 2 bytes @ 0x2
   700                           
   701     0072                     ?___awmod:	
   702                           ; 2 bytes @ 0x2
   703                           
   704     0072                     ?___lldiv:	
   705                           ; 2 bytes @ 0x2
   706                           
   707     0072                     Lcd_Port@a:	
   708                           ; 4 bytes @ 0x2
   709                           
   710     0072                     I2C_Master_Write@d:	
   711                           ; 1 bytes @ 0x2
   712                           
   713     0072                     I2C_Master_Read@a:	
   714                           ; 2 bytes @ 0x2
   715                           
   716     0072                     NumtoChar@a:	
   717                           ; 2 bytes @ 0x2
   718                           
   719     0072                     increSecMin@b:	
   720                           ; 2 bytes @ 0x2
   721                           
   722     0072                     increHour@b:	
   723                           ; 2 bytes @ 0x2
   724                           
   725     0072                     increDay@b:	
   726                           ; 2 bytes @ 0x2
   727                           
   728     0072                     increMonth@b:	
   729                           ; 2 bytes @ 0x2
   730                           
   731     0072                     increYear@b:	
   732                           ; 2 bytes @ 0x2
   733                           
   734     0072                     ioc_inint@pin:	
   735                           ; 2 bytes @ 0x2
   736                           
   737     0072                     ___awmod@divisor:	
   738                           ; 2 bytes @ 0x2
   739                           
   740     0072                     ___lldiv@divisor:	
   741                           ; 2 bytes @ 0x2
   742                           
   743                           
   744                           ; 4 bytes @ 0x2
   745     0072                     	ds	1
   746     0073                     ??_Lcd_Cmd:
   747     0073                     ??_Lcd_Write_Char:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 1 bytes @ 0x3
   752     0073                     	ds	1
   753     0074                     ??_increSecMin:
   754     0074                     ??_increHour:	
   755                           ; 1 bytes @ 0x4
   756                           
   757     0074                     ??_increDay:	
   758                           ; 1 bytes @ 0x4
   759                           
   760     0074                     ??_increMonth:	
   761                           ; 1 bytes @ 0x4
   762                           
   763     0074                     ??_increYear:	
   764                           ; 1 bytes @ 0x4
   765                           
   766     0074                     ??_NumtoChar:	
   767                           ; 1 bytes @ 0x4
   768                           
   769     0074                     ??_ioc_inint:	
   770                           ; 1 bytes @ 0x4
   771                           
   772     0074                     ??_I2C_Master_Write:	
   773                           ; 1 bytes @ 0x4
   774                           
   775     0074                     ??_I2C_Master_Read:	
   776                           ; 1 bytes @ 0x4
   777                           
   778     0074                     Lcd_Write_Char@a:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     0074                     ___awmod@dividend:	
   782                           ; 1 bytes @ 0x4
   783                           
   784                           
   785                           ; 2 bytes @ 0x4
   786     0074                     	ds	1
   787     0075                     ??_Lcd_Write_String:
   788     0075                     Lcd_Cmd@a:	
   789                           ; 1 bytes @ 0x5
   790                           
   791     0075                     Lcd_Write_String@i:	
   792                           ; 1 bytes @ 0x5
   793                           
   794                           
   795                           ; 2 bytes @ 0x5
   796     0075                     	ds	1
   797     0076                     ??_Lcd_Clear:
   798     0076                     ?_Lcd_Set_Cursor:	
   799                           ; 1 bytes @ 0x6
   800                           
   801     0076                     ??_Lcd_Init:	
   802                           ; 1 bytes @ 0x6
   803                           
   804     0076                     ??___awmod:	
   805                           ; 1 bytes @ 0x6
   806                           
   807     0076                     Lcd_Set_Cursor@b:	
   808                           ; 1 bytes @ 0x6
   809                           
   810     0076                     I2C_Master_Read@temp:	
   811                           ; 1 bytes @ 0x6
   812                           
   813     0076                     increSecMin@val:	
   814                           ; 2 bytes @ 0x6
   815                           
   816     0076                     increHour@val:	
   817                           ; 2 bytes @ 0x6
   818                           
   819     0076                     increDay@val:	
   820                           ; 2 bytes @ 0x6
   821                           
   822     0076                     increMonth@val:	
   823                           ; 2 bytes @ 0x6
   824                           
   825     0076                     increYear@val:	
   826                           ; 2 bytes @ 0x6
   827                           
   828     0076                     ___lldiv@dividend:	
   829                           ; 2 bytes @ 0x6
   830                           
   831                           
   832                           ; 4 bytes @ 0x6
   833     0076                     	ds	1
   834     0077                     ??_Lcd_Set_Cursor:
   835     0077                     Lcd_Set_Cursor@a:	
   836                           ; 1 bytes @ 0x7
   837                           
   838     0077                     Lcd_Write_String@a:	
   839                           ; 1 bytes @ 0x7
   840                           
   841     0077                     ___awmod@counter:	
   842                           ; 1 bytes @ 0x7
   843                           
   844                           
   845                           ; 1 bytes @ 0x7
   846     0077                     	ds	1
   847     0078                     Lcd_Set_Cursor@temp:
   848     0078                     ___awmod@sign:	
   849                           ; 1 bytes @ 0x8
   850                           
   851     0078                     increSecMin@uni:	
   852                           ; 1 bytes @ 0x8
   853                           
   854     0078                     increHour@dec:	
   855                           ; 2 bytes @ 0x8
   856                           
   857     0078                     increDay@dec:	
   858                           ; 2 bytes @ 0x8
   859                           
   860     0078                     increMonth@dec:	
   861                           ; 2 bytes @ 0x8
   862                           
   863     0078                     increYear@uni:	
   864                           ; 2 bytes @ 0x8
   865                           
   866                           
   867                           ; 2 bytes @ 0x8
   868     0078                     	ds	1
   869     0079                     ??___awdiv:
   870                           
   871                           ; 1 bytes @ 0x9
   872     0079                     	ds	1
   873     007A                     ??___lldiv:
   874     007A                     increSecMin@dec:	
   875                           ; 1 bytes @ 0xA
   876                           
   877     007A                     increHour@uni:	
   878                           ; 2 bytes @ 0xA
   879                           
   880     007A                     increDay@uni:	
   881                           ; 2 bytes @ 0xA
   882                           
   883     007A                     increMonth@uni:	
   884                           ; 2 bytes @ 0xA
   885                           
   886     007A                     increYear@dec:	
   887                           ; 2 bytes @ 0xA
   888                           
   889                           
   890                           ; 2 bytes @ 0xA
   891     007A                     	ds	1
   892     007B                     ??_setup:
   893                           
   894                           ; 1 bytes @ 0xB
   895     007B                     	ds	1
   896                           
   897                           	psect	cstackBANK0
   898     0050                     __pcstackBANK0:
   899     0050                     ?___awdiv:
   900     0050                     ___awdiv@divisor:	
   901                           ; 2 bytes @ 0x0
   902                           
   903     0050                     ___lldiv@quotient:	
   904                           ; 2 bytes @ 0x0
   905                           
   906                           
   907                           ; 4 bytes @ 0x0
   908     0050                     	ds	2
   909     0052                     ___awdiv@dividend:
   910                           
   911                           ; 2 bytes @ 0x2
   912     0052                     	ds	2
   913     0054                     ___lldiv@counter:
   914     0054                     ___awdiv@counter:	
   915                           ; 1 bytes @ 0x4
   916                           
   917                           
   918                           ; 1 bytes @ 0x4
   919     0054                     	ds	1
   920     0055                     ?_I2C_Master_Init:
   921     0055                     ___awdiv@sign:	
   922                           ; 1 bytes @ 0x5
   923                           
   924     0055                     I2C_Master_Init@c:	
   925                           ; 1 bytes @ 0x5
   926                           
   927                           
   928                           ; 4 bytes @ 0x5
   929     0055                     	ds	1
   930     0056                     ___awdiv@quotient:
   931                           
   932                           ; 2 bytes @ 0x6
   933     0056                     	ds	3
   934     0059                     ??_I2C_Master_Init:
   935                           
   936                           ; 1 bytes @ 0x9
   937     0059                     	ds	4
   938     005D                     ??_main:
   939                           
   940                           ; 1 bytes @ 0xD
   941     005D                     	ds	2
   942     005F                     _main$1055:
   943                           
   944                           ; 2 bytes @ 0xF
   945     005F                     	ds	2
   946                           
   947                           	psect	maintext
   948     001C                     __pmaintext:	
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 91 in file "Dig2postlab4_Master.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : B00/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       0       0       0       0
   969 ;;      Locals:         0       2       0       0       0
   970 ;;      Temps:          0       2       0       0       0
   971 ;;      Totals:         0       4       0       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels required when called: 4
   974 ;; This function calls:
   975 ;;		_I2C_Master_Read
   976 ;;		_I2C_Master_RepeatedStart
   977 ;;		_I2C_Master_Start
   978 ;;		_I2C_Master_Stop
   979 ;;		_I2C_Master_Write
   980 ;;		_Lcd_Clear
   981 ;;		_Lcd_Init
   982 ;;		_Lcd_Set_Cursor
   983 ;;		_Lcd_Write_Char
   984 ;;		_Lcd_Write_String
   985 ;;		_NumtoChar
   986 ;;		___awdiv
   987 ;;		___awmod
   988 ;;		_increDay
   989 ;;		_increHour
   990 ;;		_increMonth
   991 ;;		_increSecMin
   992 ;;		_increYear
   993 ;;		_setup
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999     001C                     _main:	
  1000                           ;psect for function _main
  1001                           
  1002     001C                     l2169:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1005                           
  1006                           
  1007                           ;Dig2postlab4_Master.c: 92:     setup();
  1008     001C  120A  158A  2442  120A  118A  	fcall	_setup
  1009     0021                     l2171:
  1010                           
  1011                           ;Dig2postlab4_Master.c: 93:     Lcd_Init();
  1012     0021  120A  158A  2524  120A  118A  	fcall	_Lcd_Init
  1013     0026  2AF3               	goto	l2211
  1014     0027                     l2173:
  1015                           
  1016                           ;Dig2postlab4_Master.c: 97:                 if(check == 1){
  1017     0027  032A               	decf	_check,w
  1018     0028  042B               	iorwf	_check+1,w
  1019     0029  1D03               	btfss	3,2
  1020     002A  282C               	goto	u1291
  1021     002B  282D               	goto	u1290
  1022     002C                     u1291:
  1023     002C  2B0E               	goto	l2213
  1024     002D                     u1290:
  1025     002D                     l2175:
  1026                           
  1027                           ;Dig2postlab4_Master.c: 98:                     I2C_Master_Start();
  1028     002D  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1029                           
  1030                           ;Dig2postlab4_Master.c: 99:                     I2C_Master_Write(0xD0);
  1031     0032  30D0               	movlw	208
  1032     0033  00F2               	movwf	I2C_Master_Write@d
  1033     0034  3000               	movlw	0
  1034     0035  00F3               	movwf	I2C_Master_Write@d+1
  1035     0036  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1036                           
  1037                           ;Dig2postlab4_Master.c: 100:                     I2C_Master_Write(0x00);
  1038     003B  3000               	movlw	0
  1039     003C  00F2               	movwf	I2C_Master_Write@d
  1040     003D  00F3               	movwf	I2C_Master_Write@d+1
  1041     003E  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1042                           
  1043                           ;Dig2postlab4_Master.c: 101:                     I2C_Master_RepeatedStart();
  1044     0043  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1045                           
  1046                           ;Dig2postlab4_Master.c: 102:                     I2C_Master_Write(0xD1);
  1047     0048  30D1               	movlw	209
  1048     0049  00F2               	movwf	I2C_Master_Write@d
  1049     004A  3000               	movlw	0
  1050     004B  00F3               	movwf	I2C_Master_Write@d+1
  1051     004C  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1052                           
  1053                           ;Dig2postlab4_Master.c: 103:                     seconds = I2C_Master_Read(0);
  1054     0051  3000               	movlw	0
  1055     0052  00F2               	movwf	I2C_Master_Read@a
  1056     0053  00F3               	movwf	I2C_Master_Read@a+1
  1057     0054  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1058     0059  0873               	movf	?_I2C_Master_Read+1,w
  1059     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1060     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1061     005C  00CF               	movwf	_seconds+1
  1062     005D  0872               	movf	?_I2C_Master_Read,w
  1063     005E  00CE               	movwf	_seconds
  1064                           
  1065                           ;Dig2postlab4_Master.c: 104:                     I2C_Master_Stop();
  1066     005F  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1067                           
  1068                           ;Dig2postlab4_Master.c: 105:                     seconds = increSecMin(seconds);
  1069     0064  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0065  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0066  084F               	movf	_seconds+1,w
  1072     0067  00F3               	movwf	increSecMin@b+1
  1073     0068  084E               	movf	_seconds,w
  1074     0069  00F2               	movwf	increSecMin@b
  1075     006A  120A  158A  2569  120A  118A  	fcall	_increSecMin
  1076     006F  0873               	movf	?_increSecMin+1,w
  1077     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0072  00CF               	movwf	_seconds+1
  1080     0073  0872               	movf	?_increSecMin,w
  1081     0074  00CE               	movwf	_seconds
  1082                           
  1083                           ;Dig2postlab4_Master.c: 106:                     I2C_Master_Start();
  1084     0075  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1085                           
  1086                           ;Dig2postlab4_Master.c: 107:                     I2C_Master_Write(0xD0);
  1087     007A  30D0               	movlw	208
  1088     007B  00F2               	movwf	I2C_Master_Write@d
  1089     007C  3000               	movlw	0
  1090     007D  00F3               	movwf	I2C_Master_Write@d+1
  1091     007E  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1092                           
  1093                           ;Dig2postlab4_Master.c: 108:                     I2C_Master_Write(0x00);
  1094     0083  3000               	movlw	0
  1095     0084  00F2               	movwf	I2C_Master_Write@d
  1096     0085  00F3               	movwf	I2C_Master_Write@d+1
  1097     0086  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1098                           
  1099                           ;Dig2postlab4_Master.c: 109:                     I2C_Master_Write(seconds);
  1100     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1101     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1102     008D  084F               	movf	_seconds+1,w
  1103     008E  00F3               	movwf	I2C_Master_Write@d+1
  1104     008F  084E               	movf	_seconds,w
  1105     0090  00F2               	movwf	I2C_Master_Write@d
  1106     0091  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1107                           
  1108                           ;Dig2postlab4_Master.c: 110:                     I2C_Master_Stop();
  1109     0096  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1110     009B                     l2177:
  1111                           
  1112                           ;Dig2postlab4_Master.c: 111:                     check = 0;
  1113     009B  1283               	bcf	3,5	;RP0=0, select bank0
  1114     009C  1303               	bcf	3,6	;RP1=0, select bank0
  1115     009D  01AA               	clrf	_check
  1116     009E  01AB               	clrf	_check+1
  1117     009F  2B0E               	goto	l2213
  1118     00A0                     l2179:
  1119                           
  1120                           ;Dig2postlab4_Master.c: 115:                 if(check == 1){
  1121     00A0  032A               	decf	_check,w
  1122     00A1  042B               	iorwf	_check+1,w
  1123     00A2  1D03               	btfss	3,2
  1124     00A3  28A5               	goto	u1301
  1125     00A4  28A6               	goto	u1300
  1126     00A5                     u1301:
  1127     00A5  2B0E               	goto	l2213
  1128     00A6                     u1300:
  1129     00A6                     l2181:
  1130                           
  1131                           ;Dig2postlab4_Master.c: 116:                     I2C_Master_Start();
  1132     00A6  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1133                           
  1134                           ;Dig2postlab4_Master.c: 117:                     I2C_Master_Write(0xD0);
  1135     00AB  30D0               	movlw	208
  1136     00AC  00F2               	movwf	I2C_Master_Write@d
  1137     00AD  3000               	movlw	0
  1138     00AE  00F3               	movwf	I2C_Master_Write@d+1
  1139     00AF  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1140                           
  1141                           ;Dig2postlab4_Master.c: 118:                     I2C_Master_Write(0x01);
  1142     00B4  3001               	movlw	1
  1143     00B5  00F2               	movwf	I2C_Master_Write@d
  1144     00B6  3000               	movlw	0
  1145     00B7  00F3               	movwf	I2C_Master_Write@d+1
  1146     00B8  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1147                           
  1148                           ;Dig2postlab4_Master.c: 119:                     I2C_Master_RepeatedStart();
  1149     00BD  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1150                           
  1151                           ;Dig2postlab4_Master.c: 120:                     I2C_Master_Write(0xD1);
  1152     00C2  30D1               	movlw	209
  1153     00C3  00F2               	movwf	I2C_Master_Write@d
  1154     00C4  3000               	movlw	0
  1155     00C5  00F3               	movwf	I2C_Master_Write@d+1
  1156     00C6  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1157                           
  1158                           ;Dig2postlab4_Master.c: 121:                     minutes = I2C_Master_Read(0);
  1159     00CB  3000               	movlw	0
  1160     00CC  00F2               	movwf	I2C_Master_Read@a
  1161     00CD  00F3               	movwf	I2C_Master_Read@a+1
  1162     00CE  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1163     00D3  0873               	movf	?_I2C_Master_Read+1,w
  1164     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1165     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1166     00D6  00CD               	movwf	_minutes+1
  1167     00D7  0872               	movf	?_I2C_Master_Read,w
  1168     00D8  00CC               	movwf	_minutes
  1169                           
  1170                           ;Dig2postlab4_Master.c: 122:                     I2C_Master_Stop();
  1171     00D9  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1172                           
  1173                           ;Dig2postlab4_Master.c: 123:                     minutes = increSecMin(minutes);
  1174     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1175     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1176     00E0  084D               	movf	_minutes+1,w
  1177     00E1  00F3               	movwf	increSecMin@b+1
  1178     00E2  084C               	movf	_minutes,w
  1179     00E3  00F2               	movwf	increSecMin@b
  1180     00E4  120A  158A  2569  120A  118A  	fcall	_increSecMin
  1181     00E9  0873               	movf	?_increSecMin+1,w
  1182     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1183     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1184     00EC  00CD               	movwf	_minutes+1
  1185     00ED  0872               	movf	?_increSecMin,w
  1186     00EE  00CC               	movwf	_minutes
  1187                           
  1188                           ;Dig2postlab4_Master.c: 124:                     I2C_Master_Start();
  1189     00EF  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1190                           
  1191                           ;Dig2postlab4_Master.c: 125:                     I2C_Master_Write(0xD0);
  1192     00F4  30D0               	movlw	208
  1193     00F5  00F2               	movwf	I2C_Master_Write@d
  1194     00F6  3000               	movlw	0
  1195     00F7  00F3               	movwf	I2C_Master_Write@d+1
  1196     00F8  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1197                           
  1198                           ;Dig2postlab4_Master.c: 126:                     I2C_Master_Write(0x01);
  1199     00FD  3001               	movlw	1
  1200     00FE  00F2               	movwf	I2C_Master_Write@d
  1201     00FF  3000               	movlw	0
  1202     0100  00F3               	movwf	I2C_Master_Write@d+1
  1203     0101  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1204                           
  1205                           ;Dig2postlab4_Master.c: 127:                     I2C_Master_Write(minutes);
  1206     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1207     0107  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0108  084D               	movf	_minutes+1,w
  1209     0109  00F3               	movwf	I2C_Master_Write@d+1
  1210     010A  084C               	movf	_minutes,w
  1211     010B  00F2               	movwf	I2C_Master_Write@d
  1212     010C  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1213                           
  1214                           ;Dig2postlab4_Master.c: 128:                     I2C_Master_Stop();
  1215     0111  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1216     0116  289B               	goto	l2177
  1217     0117                     l2185:
  1218                           
  1219                           ;Dig2postlab4_Master.c: 133:                 if(check == 1){
  1220     0117  032A               	decf	_check,w
  1221     0118  042B               	iorwf	_check+1,w
  1222     0119  1D03               	btfss	3,2
  1223     011A  291C               	goto	u1311
  1224     011B  291D               	goto	u1310
  1225     011C                     u1311:
  1226     011C  2B0E               	goto	l2213
  1227     011D                     u1310:
  1228     011D                     l2187:
  1229                           
  1230                           ;Dig2postlab4_Master.c: 134:                     I2C_Master_Start();
  1231     011D  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1232                           
  1233                           ;Dig2postlab4_Master.c: 135:                     I2C_Master_Write(0xD0);
  1234     0122  30D0               	movlw	208
  1235     0123  00F2               	movwf	I2C_Master_Write@d
  1236     0124  3000               	movlw	0
  1237     0125  00F3               	movwf	I2C_Master_Write@d+1
  1238     0126  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1239                           
  1240                           ;Dig2postlab4_Master.c: 136:                     I2C_Master_Write(0x02);
  1241     012B  3002               	movlw	2
  1242     012C  00F2               	movwf	I2C_Master_Write@d
  1243     012D  3000               	movlw	0
  1244     012E  00F3               	movwf	I2C_Master_Write@d+1
  1245     012F  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1246                           
  1247                           ;Dig2postlab4_Master.c: 137:                     I2C_Master_RepeatedStart();
  1248     0134  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1249                           
  1250                           ;Dig2postlab4_Master.c: 138:                     I2C_Master_Write(0xD1);
  1251     0139  30D1               	movlw	209
  1252     013A  00F2               	movwf	I2C_Master_Write@d
  1253     013B  3000               	movlw	0
  1254     013C  00F3               	movwf	I2C_Master_Write@d+1
  1255     013D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1256                           
  1257                           ;Dig2postlab4_Master.c: 139:                     hours = I2C_Master_Read(0);
  1258     0142  3000               	movlw	0
  1259     0143  00F2               	movwf	I2C_Master_Read@a
  1260     0144  00F3               	movwf	I2C_Master_Read@a+1
  1261     0145  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1262     014A  0873               	movf	?_I2C_Master_Read+1,w
  1263     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1264     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1265     014D  00CB               	movwf	_hours+1
  1266     014E  0872               	movf	?_I2C_Master_Read,w
  1267     014F  00CA               	movwf	_hours
  1268                           
  1269                           ;Dig2postlab4_Master.c: 140:                     I2C_Master_Stop();
  1270     0150  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1271                           
  1272                           ;Dig2postlab4_Master.c: 141:                     hours = increHour(hours);
  1273     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1274     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1275     0157  084B               	movf	_hours+1,w
  1276     0158  00F3               	movwf	increHour@b+1
  1277     0159  084A               	movf	_hours,w
  1278     015A  00F2               	movwf	increHour@b
  1279     015B  120A  158A  2672  120A  118A  	fcall	_increHour
  1280     0160  0873               	movf	?_increHour+1,w
  1281     0161  1283               	bcf	3,5	;RP0=0, select bank0
  1282     0162  1303               	bcf	3,6	;RP1=0, select bank0
  1283     0163  00CB               	movwf	_hours+1
  1284     0164  0872               	movf	?_increHour,w
  1285     0165  00CA               	movwf	_hours
  1286                           
  1287                           ;Dig2postlab4_Master.c: 142:                     I2C_Master_Start();
  1288     0166  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1289                           
  1290                           ;Dig2postlab4_Master.c: 143:                     I2C_Master_Write(0xD0);
  1291     016B  30D0               	movlw	208
  1292     016C  00F2               	movwf	I2C_Master_Write@d
  1293     016D  3000               	movlw	0
  1294     016E  00F3               	movwf	I2C_Master_Write@d+1
  1295     016F  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1296                           
  1297                           ;Dig2postlab4_Master.c: 144:                     I2C_Master_Write(0x02);
  1298     0174  3002               	movlw	2
  1299     0175  00F2               	movwf	I2C_Master_Write@d
  1300     0176  3000               	movlw	0
  1301     0177  00F3               	movwf	I2C_Master_Write@d+1
  1302     0178  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1303                           
  1304                           ;Dig2postlab4_Master.c: 145:                     I2C_Master_Write(hours);
  1305     017D  1283               	bcf	3,5	;RP0=0, select bank0
  1306     017E  1303               	bcf	3,6	;RP1=0, select bank0
  1307     017F  084B               	movf	_hours+1,w
  1308     0180  00F3               	movwf	I2C_Master_Write@d+1
  1309     0181  084A               	movf	_hours,w
  1310     0182  00F2               	movwf	I2C_Master_Write@d
  1311     0183  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1312                           
  1313                           ;Dig2postlab4_Master.c: 146:                     I2C_Master_Stop();
  1314     0188  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1315     018D  289B               	goto	l2177
  1316     018E                     l2191:
  1317                           
  1318                           ;Dig2postlab4_Master.c: 151:                 if(check == 1){
  1319     018E  032A               	decf	_check,w
  1320     018F  042B               	iorwf	_check+1,w
  1321     0190  1D03               	btfss	3,2
  1322     0191  2993               	goto	u1321
  1323     0192  2994               	goto	u1320
  1324     0193                     u1321:
  1325     0193  2B0E               	goto	l2213
  1326     0194                     u1320:
  1327     0194                     l2193:
  1328                           
  1329                           ;Dig2postlab4_Master.c: 152:                     I2C_Master_Start();
  1330     0194  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1331                           
  1332                           ;Dig2postlab4_Master.c: 153:                     I2C_Master_Write(0xD0);
  1333     0199  30D0               	movlw	208
  1334     019A  00F2               	movwf	I2C_Master_Write@d
  1335     019B  3000               	movlw	0
  1336     019C  00F3               	movwf	I2C_Master_Write@d+1
  1337     019D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1338                           
  1339                           ;Dig2postlab4_Master.c: 154:                     I2C_Master_Write(0x04);
  1340     01A2  3004               	movlw	4
  1341     01A3  00F2               	movwf	I2C_Master_Write@d
  1342     01A4  3000               	movlw	0
  1343     01A5  00F3               	movwf	I2C_Master_Write@d+1
  1344     01A6  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1345                           
  1346                           ;Dig2postlab4_Master.c: 155:                     I2C_Master_RepeatedStart();
  1347     01AB  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1348                           
  1349                           ;Dig2postlab4_Master.c: 156:                     I2C_Master_Write(0xD1);
  1350     01B0  30D1               	movlw	209
  1351     01B1  00F2               	movwf	I2C_Master_Write@d
  1352     01B2  3000               	movlw	0
  1353     01B3  00F3               	movwf	I2C_Master_Write@d+1
  1354     01B4  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1355                           
  1356                           ;Dig2postlab4_Master.c: 157:                     day = I2C_Master_Read(0);
  1357     01B9  3000               	movlw	0
  1358     01BA  00F2               	movwf	I2C_Master_Read@a
  1359     01BB  00F3               	movwf	I2C_Master_Read@a+1
  1360     01BC  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1361     01C1  0873               	movf	?_I2C_Master_Read+1,w
  1362     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1363     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1364     01C4  00C9               	movwf	_day+1
  1365     01C5  0872               	movf	?_I2C_Master_Read,w
  1366     01C6  00C8               	movwf	_day
  1367                           
  1368                           ;Dig2postlab4_Master.c: 158:                     I2C_Master_Stop();
  1369     01C7  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1370                           
  1371                           ;Dig2postlab4_Master.c: 159:                     day = increDay(day);
  1372     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1373     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1374     01CE  0849               	movf	_day+1,w
  1375     01CF  00F3               	movwf	increDay@b+1
  1376     01D0  0848               	movf	_day,w
  1377     01D1  00F2               	movwf	increDay@b
  1378     01D2  120A  158A  2735  120A  118A  	fcall	_increDay
  1379     01D7  0873               	movf	?_increDay+1,w
  1380     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1381     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1382     01DA  00C9               	movwf	_day+1
  1383     01DB  0872               	movf	?_increDay,w
  1384     01DC  00C8               	movwf	_day
  1385                           
  1386                           ;Dig2postlab4_Master.c: 160:                     I2C_Master_Start();
  1387     01DD  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1388                           
  1389                           ;Dig2postlab4_Master.c: 161:                     I2C_Master_Write(0xD0);
  1390     01E2  30D0               	movlw	208
  1391     01E3  00F2               	movwf	I2C_Master_Write@d
  1392     01E4  3000               	movlw	0
  1393     01E5  00F3               	movwf	I2C_Master_Write@d+1
  1394     01E6  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1395                           
  1396                           ;Dig2postlab4_Master.c: 162:                     I2C_Master_Write(0x04);
  1397     01EB  3004               	movlw	4
  1398     01EC  00F2               	movwf	I2C_Master_Write@d
  1399     01ED  3000               	movlw	0
  1400     01EE  00F3               	movwf	I2C_Master_Write@d+1
  1401     01EF  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1402                           
  1403                           ;Dig2postlab4_Master.c: 163:                     I2C_Master_Write(day);
  1404     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1405     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1406     01F6  0849               	movf	_day+1,w
  1407     01F7  00F3               	movwf	I2C_Master_Write@d+1
  1408     01F8  0848               	movf	_day,w
  1409     01F9  00F2               	movwf	I2C_Master_Write@d
  1410     01FA  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1411                           
  1412                           ;Dig2postlab4_Master.c: 164:                     I2C_Master_Stop();
  1413     01FF  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1414     0204  289B               	goto	l2177
  1415     0205                     l2197:
  1416                           
  1417                           ;Dig2postlab4_Master.c: 169:                 if(check == 1){
  1418     0205  032A               	decf	_check,w
  1419     0206  042B               	iorwf	_check+1,w
  1420     0207  1D03               	btfss	3,2
  1421     0208  2A0A               	goto	u1331
  1422     0209  2A0B               	goto	u1330
  1423     020A                     u1331:
  1424     020A  2B0E               	goto	l2213
  1425     020B                     u1330:
  1426     020B                     l2199:
  1427                           
  1428                           ;Dig2postlab4_Master.c: 170:                     I2C_Master_Start();
  1429     020B  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1430                           
  1431                           ;Dig2postlab4_Master.c: 171:                     I2C_Master_Write(0xD0);
  1432     0210  30D0               	movlw	208
  1433     0211  00F2               	movwf	I2C_Master_Write@d
  1434     0212  3000               	movlw	0
  1435     0213  00F3               	movwf	I2C_Master_Write@d+1
  1436     0214  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1437                           
  1438                           ;Dig2postlab4_Master.c: 172:                     I2C_Master_Write(0x05);
  1439     0219  3005               	movlw	5
  1440     021A  00F2               	movwf	I2C_Master_Write@d
  1441     021B  3000               	movlw	0
  1442     021C  00F3               	movwf	I2C_Master_Write@d+1
  1443     021D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1444                           
  1445                           ;Dig2postlab4_Master.c: 173:                     I2C_Master_RepeatedStart();
  1446     0222  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1447                           
  1448                           ;Dig2postlab4_Master.c: 174:                     I2C_Master_Write(0xD1);
  1449     0227  30D1               	movlw	209
  1450     0228  00F2               	movwf	I2C_Master_Write@d
  1451     0229  3000               	movlw	0
  1452     022A  00F3               	movwf	I2C_Master_Write@d+1
  1453     022B  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1454                           
  1455                           ;Dig2postlab4_Master.c: 175:                     month = I2C_Master_Read(0);
  1456     0230  3000               	movlw	0
  1457     0231  00F2               	movwf	I2C_Master_Read@a
  1458     0232  00F3               	movwf	I2C_Master_Read@a+1
  1459     0233  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1460     0238  0873               	movf	?_I2C_Master_Read+1,w
  1461     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1462     023A  1303               	bcf	3,6	;RP1=0, select bank0
  1463     023B  00C7               	movwf	_month+1
  1464     023C  0872               	movf	?_I2C_Master_Read,w
  1465     023D  00C6               	movwf	_month
  1466                           
  1467                           ;Dig2postlab4_Master.c: 176:                     I2C_Master_Stop();
  1468     023E  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1469                           
  1470                           ;Dig2postlab4_Master.c: 177:                     month = increMonth(month);
  1471     0243  1283               	bcf	3,5	;RP0=0, select bank0
  1472     0244  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0245  0847               	movf	_month+1,w
  1474     0246  00F3               	movwf	increMonth@b+1
  1475     0247  0846               	movf	_month,w
  1476     0248  00F2               	movwf	increMonth@b
  1477     0249  120A  158A  26D3  120A  118A  	fcall	_increMonth
  1478     024E  0873               	movf	?_increMonth+1,w
  1479     024F  1283               	bcf	3,5	;RP0=0, select bank0
  1480     0250  1303               	bcf	3,6	;RP1=0, select bank0
  1481     0251  00C7               	movwf	_month+1
  1482     0252  0872               	movf	?_increMonth,w
  1483     0253  00C6               	movwf	_month
  1484                           
  1485                           ;Dig2postlab4_Master.c: 178:                     I2C_Master_Start();
  1486     0254  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1487                           
  1488                           ;Dig2postlab4_Master.c: 179:                     I2C_Master_Write(0xD0);
  1489     0259  30D0               	movlw	208
  1490     025A  00F2               	movwf	I2C_Master_Write@d
  1491     025B  3000               	movlw	0
  1492     025C  00F3               	movwf	I2C_Master_Write@d+1
  1493     025D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1494                           
  1495                           ;Dig2postlab4_Master.c: 180:                     I2C_Master_Write(0x05);
  1496     0262  3005               	movlw	5
  1497     0263  00F2               	movwf	I2C_Master_Write@d
  1498     0264  3000               	movlw	0
  1499     0265  00F3               	movwf	I2C_Master_Write@d+1
  1500     0266  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1501                           
  1502                           ;Dig2postlab4_Master.c: 181:                     I2C_Master_Write(month);
  1503     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1504     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1505     026D  0847               	movf	_month+1,w
  1506     026E  00F3               	movwf	I2C_Master_Write@d+1
  1507     026F  0846               	movf	_month,w
  1508     0270  00F2               	movwf	I2C_Master_Write@d
  1509     0271  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1510                           
  1511                           ;Dig2postlab4_Master.c: 182:                     I2C_Master_Stop();
  1512     0276  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1513     027B  289B               	goto	l2177
  1514     027C                     l2203:
  1515                           
  1516                           ;Dig2postlab4_Master.c: 187:                 if(check == 1){
  1517     027C  032A               	decf	_check,w
  1518     027D  042B               	iorwf	_check+1,w
  1519     027E  1D03               	btfss	3,2
  1520     027F  2A81               	goto	u1341
  1521     0280  2A82               	goto	u1340
  1522     0281                     u1341:
  1523     0281  2B0E               	goto	l2213
  1524     0282                     u1340:
  1525     0282                     l2205:
  1526                           
  1527                           ;Dig2postlab4_Master.c: 188:                     I2C_Master_Start();
  1528     0282  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1529                           
  1530                           ;Dig2postlab4_Master.c: 189:                     I2C_Master_Write(0xD0);
  1531     0287  30D0               	movlw	208
  1532     0288  00F2               	movwf	I2C_Master_Write@d
  1533     0289  3000               	movlw	0
  1534     028A  00F3               	movwf	I2C_Master_Write@d+1
  1535     028B  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1536                           
  1537                           ;Dig2postlab4_Master.c: 190:                     I2C_Master_Write(0x06);
  1538     0290  3006               	movlw	6
  1539     0291  00F2               	movwf	I2C_Master_Write@d
  1540     0292  3000               	movlw	0
  1541     0293  00F3               	movwf	I2C_Master_Write@d+1
  1542     0294  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1543                           
  1544                           ;Dig2postlab4_Master.c: 191:                     I2C_Master_RepeatedStart();
  1545     0299  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1546                           
  1547                           ;Dig2postlab4_Master.c: 192:                     I2C_Master_Write(0xD1);
  1548     029E  30D1               	movlw	209
  1549     029F  00F2               	movwf	I2C_Master_Write@d
  1550     02A0  3000               	movlw	0
  1551     02A1  00F3               	movwf	I2C_Master_Write@d+1
  1552     02A2  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1553                           
  1554                           ;Dig2postlab4_Master.c: 193:                     year = I2C_Master_Read(0);
  1555     02A7  3000               	movlw	0
  1556     02A8  00F2               	movwf	I2C_Master_Read@a
  1557     02A9  00F3               	movwf	I2C_Master_Read@a+1
  1558     02AA  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1559     02AF  0873               	movf	?_I2C_Master_Read+1,w
  1560     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1561     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1562     02B2  00C5               	movwf	_year+1
  1563     02B3  0872               	movf	?_I2C_Master_Read,w
  1564     02B4  00C4               	movwf	_year
  1565                           
  1566                           ;Dig2postlab4_Master.c: 194:                     I2C_Master_Stop();
  1567     02B5  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1568                           
  1569                           ;Dig2postlab4_Master.c: 195:                     year = increYear(year);
  1570     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1571     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1572     02BC  0845               	movf	_year+1,w
  1573     02BD  00F3               	movwf	increYear@b+1
  1574     02BE  0844               	movf	_year,w
  1575     02BF  00F2               	movwf	increYear@b
  1576     02C0  120A  158A  25C1  120A  118A  	fcall	_increYear
  1577     02C5  0873               	movf	?_increYear+1,w
  1578     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1579     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1580     02C8  00C5               	movwf	_year+1
  1581     02C9  0872               	movf	?_increYear,w
  1582     02CA  00C4               	movwf	_year
  1583                           
  1584                           ;Dig2postlab4_Master.c: 196:                     I2C_Master_Start();
  1585     02CB  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1586                           
  1587                           ;Dig2postlab4_Master.c: 197:                     I2C_Master_Write(0xD0);
  1588     02D0  30D0               	movlw	208
  1589     02D1  00F2               	movwf	I2C_Master_Write@d
  1590     02D2  3000               	movlw	0
  1591     02D3  00F3               	movwf	I2C_Master_Write@d+1
  1592     02D4  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1593                           
  1594                           ;Dig2postlab4_Master.c: 198:                     I2C_Master_Write(0x06);
  1595     02D9  3006               	movlw	6
  1596     02DA  00F2               	movwf	I2C_Master_Write@d
  1597     02DB  3000               	movlw	0
  1598     02DC  00F3               	movwf	I2C_Master_Write@d+1
  1599     02DD  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1600                           
  1601                           ;Dig2postlab4_Master.c: 199:                     I2C_Master_Write(year);
  1602     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1603     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1604     02E4  0845               	movf	_year+1,w
  1605     02E5  00F3               	movwf	I2C_Master_Write@d+1
  1606     02E6  0844               	movf	_year,w
  1607     02E7  00F2               	movwf	I2C_Master_Write@d
  1608     02E8  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1609                           
  1610                           ;Dig2postlab4_Master.c: 200:                     I2C_Master_Stop();
  1611     02ED  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1612     02F2  289B               	goto	l2177
  1613     02F3                     l2211:
  1614                           
  1615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1616                           ; Switch size 1, requested type "simple"
  1617                           ; Number of cases is 1, Range of values is 0 to 0
  1618                           ; switch strategies available:
  1619                           ; Name         Instructions Cycles
  1620                           ; simple_byte            4     3 (average)
  1621                           ; direct_byte           11     8 (fixed)
  1622                           ; jumptable            260     6 (fixed)
  1623                           ;	Chosen strategy is simple_byte
  1624     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1625     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1626     02F5  0829               	movf	_contEdit+1,w
  1627     02F6  3A00               	xorlw	0	; case 0
  1628     02F7  1903               	skipnz
  1629     02F8  2AFA               	goto	l2375
  1630     02F9  2B0E               	goto	l2213
  1631     02FA                     l2375:
  1632                           
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 6, Range of values is 0 to 5
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte           19    10 (average)
  1638                           ; direct_byte           26     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641     02FA  0828               	movf	_contEdit,w
  1642     02FB  3A00               	xorlw	0	; case 0
  1643     02FC  1903               	skipnz
  1644     02FD  2827               	goto	l2173
  1645     02FE  3A01               	xorlw	1	; case 1
  1646     02FF  1903               	skipnz
  1647     0300  28A0               	goto	l2179
  1648     0301  3A03               	xorlw	3	; case 2
  1649     0302  1903               	skipnz
  1650     0303  2917               	goto	l2185
  1651     0304  3A01               	xorlw	1	; case 3
  1652     0305  1903               	skipnz
  1653     0306  298E               	goto	l2191
  1654     0307  3A07               	xorlw	7	; case 4
  1655     0308  1903               	skipnz
  1656     0309  2A05               	goto	l2197
  1657     030A  3A01               	xorlw	1	; case 5
  1658     030B  1903               	skipnz
  1659     030C  2A7C               	goto	l2203
  1660     030D  2B0E               	goto	l2213
  1661     030E                     l2213:
  1662                           
  1663                           ;Dig2postlab4_Master.c: 208:         I2C_Master_Start();
  1664     030E  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1665                           
  1666                           ;Dig2postlab4_Master.c: 209:         I2C_Master_Write(0x50);
  1667     0313  3050               	movlw	80
  1668     0314  00F2               	movwf	I2C_Master_Write@d
  1669     0315  3000               	movlw	0
  1670     0316  00F3               	movwf	I2C_Master_Write@d+1
  1671     0317  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1672                           
  1673                           ;Dig2postlab4_Master.c: 210:         I2C_Master_Write(0);
  1674     031C  3000               	movlw	0
  1675     031D  00F2               	movwf	I2C_Master_Write@d
  1676     031E  00F3               	movwf	I2C_Master_Write@d+1
  1677     031F  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1678                           
  1679                           ;Dig2postlab4_Master.c: 211:         I2C_Master_Stop();
  1680     0324  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1681     0329                     l2215:
  1682                           
  1683                           ;Dig2postlab4_Master.c: 212:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1684     0329  3003               	movlw	3
  1685     032A  1283               	bcf	3,5	;RP0=0, select bank0
  1686     032B  1303               	bcf	3,6	;RP1=0, select bank0
  1687     032C  00DE               	movwf	??_main+1
  1688     032D  3097               	movlw	151
  1689     032E  00DD               	movwf	??_main
  1690     032F                     u1417:
  1691     032F  0BDD               	decfsz	??_main,f
  1692     0330  2B2F               	goto	u1417
  1693     0331  0BDE               	decfsz	??_main+1,f
  1694     0332  2B2F               	goto	u1417
  1695     0333                     l2217:
  1696                           
  1697                           ;Dig2postlab4_Master.c: 214:         I2C_Master_Start();
  1698     0333  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1699     0338                     l2219:
  1700                           
  1701                           ;Dig2postlab4_Master.c: 215:         I2C_Master_Write(0x51);
  1702     0338  3051               	movlw	81
  1703     0339  00F2               	movwf	I2C_Master_Write@d
  1704     033A  3000               	movlw	0
  1705     033B  00F3               	movwf	I2C_Master_Write@d+1
  1706     033C  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1707     0341                     l2221:
  1708                           
  1709                           ;Dig2postlab4_Master.c: 216:         potValue = I2C_Master_Read(0);
  1710     0341  3000               	movlw	0
  1711     0342  00F2               	movwf	I2C_Master_Read@a
  1712     0343  00F3               	movwf	I2C_Master_Read@a+1
  1713     0344  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1714     0349  0873               	movf	?_I2C_Master_Read+1,w
  1715     034A  1283               	bcf	3,5	;RP0=0, select bank0
  1716     034B  1303               	bcf	3,6	;RP1=0, select bank0
  1717     034C  00A7               	movwf	_potValue+1
  1718     034D  0872               	movf	?_I2C_Master_Read,w
  1719     034E  00A6               	movwf	_potValue
  1720     034F                     l2223:
  1721                           
  1722                           ;Dig2postlab4_Master.c: 217:         I2C_Master_Stop();
  1723     034F  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1724     0354                     l2225:
  1725                           
  1726                           ;Dig2postlab4_Master.c: 218:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1727     0354  3003               	movlw	3
  1728     0355  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0356  1303               	bcf	3,6	;RP1=0, select bank0
  1730     0357  00DE               	movwf	??_main+1
  1731     0358  3097               	movlw	151
  1732     0359  00DD               	movwf	??_main
  1733     035A                     u1427:
  1734     035A  0BDD               	decfsz	??_main,f
  1735     035B  2B5A               	goto	u1427
  1736     035C  0BDE               	decfsz	??_main+1,f
  1737     035D  2B5A               	goto	u1427
  1738                           
  1739                           ;Dig2postlab4_Master.c: 220:         I2C_Master_Start();
  1740     035E  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1741                           
  1742                           ;Dig2postlab4_Master.c: 221:         I2C_Master_Write(0xD0);
  1743     0363  30D0               	movlw	208
  1744     0364  00F2               	movwf	I2C_Master_Write@d
  1745     0365  3000               	movlw	0
  1746     0366  00F3               	movwf	I2C_Master_Write@d+1
  1747     0367  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1748                           
  1749                           ;Dig2postlab4_Master.c: 222:         I2C_Master_Write(0x00);
  1750     036C  3000               	movlw	0
  1751     036D  00F2               	movwf	I2C_Master_Write@d
  1752     036E  00F3               	movwf	I2C_Master_Write@d+1
  1753     036F  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1754                           
  1755                           ;Dig2postlab4_Master.c: 223:         I2C_Master_RepeatedStart();
  1756     0374  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1757                           
  1758                           ;Dig2postlab4_Master.c: 224:         I2C_Master_Write(0xD1);
  1759     0379  30D1               	movlw	209
  1760     037A  00F2               	movwf	I2C_Master_Write@d
  1761     037B  3000               	movlw	0
  1762     037C  00F3               	movwf	I2C_Master_Write@d+1
  1763     037D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1764                           
  1765                           ;Dig2postlab4_Master.c: 225:         seconds = I2C_Master_Read(0);
  1766     0382  3000               	movlw	0
  1767     0383  00F2               	movwf	I2C_Master_Read@a
  1768     0384  00F3               	movwf	I2C_Master_Read@a+1
  1769     0385  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1770     038A  0873               	movf	?_I2C_Master_Read+1,w
  1771     038B  1283               	bcf	3,5	;RP0=0, select bank0
  1772     038C  1303               	bcf	3,6	;RP1=0, select bank0
  1773     038D  00CF               	movwf	_seconds+1
  1774     038E  0872               	movf	?_I2C_Master_Read,w
  1775     038F  00CE               	movwf	_seconds
  1776                           
  1777                           ;Dig2postlab4_Master.c: 226:         I2C_Master_Stop();
  1778     0390  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1779                           
  1780                           ;Dig2postlab4_Master.c: 228:         I2C_Master_Start();
  1781     0395  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1782                           
  1783                           ;Dig2postlab4_Master.c: 229:         I2C_Master_Write(0xD0);
  1784     039A  30D0               	movlw	208
  1785     039B  00F2               	movwf	I2C_Master_Write@d
  1786     039C  3000               	movlw	0
  1787     039D  00F3               	movwf	I2C_Master_Write@d+1
  1788     039E  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1789                           
  1790                           ;Dig2postlab4_Master.c: 230:         I2C_Master_Write(0x01);
  1791     03A3  3001               	movlw	1
  1792     03A4  00F2               	movwf	I2C_Master_Write@d
  1793     03A5  3000               	movlw	0
  1794     03A6  00F3               	movwf	I2C_Master_Write@d+1
  1795     03A7  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1796                           
  1797                           ;Dig2postlab4_Master.c: 231:         I2C_Master_RepeatedStart();
  1798     03AC  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1799                           
  1800                           ;Dig2postlab4_Master.c: 232:         I2C_Master_Write(0xD1);
  1801     03B1  30D1               	movlw	209
  1802     03B2  00F2               	movwf	I2C_Master_Write@d
  1803     03B3  3000               	movlw	0
  1804     03B4  00F3               	movwf	I2C_Master_Write@d+1
  1805     03B5  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1806                           
  1807                           ;Dig2postlab4_Master.c: 233:         minutes = I2C_Master_Read(0);
  1808     03BA  3000               	movlw	0
  1809     03BB  00F2               	movwf	I2C_Master_Read@a
  1810     03BC  00F3               	movwf	I2C_Master_Read@a+1
  1811     03BD  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1812     03C2  0873               	movf	?_I2C_Master_Read+1,w
  1813     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1814     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1815     03C5  00CD               	movwf	_minutes+1
  1816     03C6  0872               	movf	?_I2C_Master_Read,w
  1817     03C7  00CC               	movwf	_minutes
  1818                           
  1819                           ;Dig2postlab4_Master.c: 234:         I2C_Master_Stop();
  1820     03C8  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1821                           
  1822                           ;Dig2postlab4_Master.c: 236:         I2C_Master_Start();
  1823     03CD  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1824                           
  1825                           ;Dig2postlab4_Master.c: 237:         I2C_Master_Write(0xD0);
  1826     03D2  30D0               	movlw	208
  1827     03D3  00F2               	movwf	I2C_Master_Write@d
  1828     03D4  3000               	movlw	0
  1829     03D5  00F3               	movwf	I2C_Master_Write@d+1
  1830     03D6  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1831                           
  1832                           ;Dig2postlab4_Master.c: 238:         I2C_Master_Write(0x02);
  1833     03DB  3002               	movlw	2
  1834     03DC  00F2               	movwf	I2C_Master_Write@d
  1835     03DD  3000               	movlw	0
  1836     03DE  00F3               	movwf	I2C_Master_Write@d+1
  1837     03DF  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1838                           
  1839                           ;Dig2postlab4_Master.c: 239:         I2C_Master_RepeatedStart();
  1840     03E4  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1841                           
  1842                           ;Dig2postlab4_Master.c: 240:         I2C_Master_Write(0xD1);
  1843     03E9  30D1               	movlw	209
  1844     03EA  00F2               	movwf	I2C_Master_Write@d
  1845     03EB  3000               	movlw	0
  1846     03EC  00F3               	movwf	I2C_Master_Write@d+1
  1847     03ED  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1848                           
  1849                           ;Dig2postlab4_Master.c: 241:         hours = I2C_Master_Read(0);
  1850     03F2  3000               	movlw	0
  1851     03F3  00F2               	movwf	I2C_Master_Read@a
  1852     03F4  00F3               	movwf	I2C_Master_Read@a+1
  1853     03F5  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1854     03FA  0873               	movf	?_I2C_Master_Read+1,w
  1855     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1856     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1857     03FD  00CB               	movwf	_hours+1
  1858     03FE  0872               	movf	?_I2C_Master_Read,w
  1859     03FF  00CA               	movwf	_hours
  1860                           
  1861                           ;Dig2postlab4_Master.c: 242:         I2C_Master_Stop();
  1862     0400  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1863                           
  1864                           ;Dig2postlab4_Master.c: 244:         I2C_Master_Start();
  1865     0405  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1866                           
  1867                           ;Dig2postlab4_Master.c: 245:         I2C_Master_Write(0xD0);
  1868     040A  30D0               	movlw	208
  1869     040B  00F2               	movwf	I2C_Master_Write@d
  1870     040C  3000               	movlw	0
  1871     040D  00F3               	movwf	I2C_Master_Write@d+1
  1872     040E  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1873                           
  1874                           ;Dig2postlab4_Master.c: 246:         I2C_Master_Write(0x04);
  1875     0413  3004               	movlw	4
  1876     0414  00F2               	movwf	I2C_Master_Write@d
  1877     0415  3000               	movlw	0
  1878     0416  00F3               	movwf	I2C_Master_Write@d+1
  1879     0417  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1880                           
  1881                           ;Dig2postlab4_Master.c: 247:         I2C_Master_RepeatedStart();
  1882     041C  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1883                           
  1884                           ;Dig2postlab4_Master.c: 248:         I2C_Master_Write(0xD1);
  1885     0421  30D1               	movlw	209
  1886     0422  00F2               	movwf	I2C_Master_Write@d
  1887     0423  3000               	movlw	0
  1888     0424  00F3               	movwf	I2C_Master_Write@d+1
  1889     0425  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1890                           
  1891                           ;Dig2postlab4_Master.c: 249:         day = I2C_Master_Read(0);
  1892     042A  3000               	movlw	0
  1893     042B  00F2               	movwf	I2C_Master_Read@a
  1894     042C  00F3               	movwf	I2C_Master_Read@a+1
  1895     042D  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1896     0432  0873               	movf	?_I2C_Master_Read+1,w
  1897     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1898     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0435  00C9               	movwf	_day+1
  1900     0436  0872               	movf	?_I2C_Master_Read,w
  1901     0437  00C8               	movwf	_day
  1902                           
  1903                           ;Dig2postlab4_Master.c: 250:         I2C_Master_Stop();
  1904     0438  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1905                           
  1906                           ;Dig2postlab4_Master.c: 252:         I2C_Master_Start();
  1907     043D  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1908                           
  1909                           ;Dig2postlab4_Master.c: 253:         I2C_Master_Write(0xD0);
  1910     0442  30D0               	movlw	208
  1911     0443  00F2               	movwf	I2C_Master_Write@d
  1912     0444  3000               	movlw	0
  1913     0445  00F3               	movwf	I2C_Master_Write@d+1
  1914     0446  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1915                           
  1916                           ;Dig2postlab4_Master.c: 254:         I2C_Master_Write(0x05);
  1917     044B  3005               	movlw	5
  1918     044C  00F2               	movwf	I2C_Master_Write@d
  1919     044D  3000               	movlw	0
  1920     044E  00F3               	movwf	I2C_Master_Write@d+1
  1921     044F  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1922                           
  1923                           ;Dig2postlab4_Master.c: 255:         I2C_Master_RepeatedStart();
  1924     0454  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1925                           
  1926                           ;Dig2postlab4_Master.c: 256:         I2C_Master_Write(0xD1);
  1927     0459  30D1               	movlw	209
  1928     045A  00F2               	movwf	I2C_Master_Write@d
  1929     045B  3000               	movlw	0
  1930     045C  00F3               	movwf	I2C_Master_Write@d+1
  1931     045D  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1932                           
  1933                           ;Dig2postlab4_Master.c: 257:         month = I2C_Master_Read(0);
  1934     0462  3000               	movlw	0
  1935     0463  00F2               	movwf	I2C_Master_Read@a
  1936     0464  00F3               	movwf	I2C_Master_Read@a+1
  1937     0465  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1938     046A  0873               	movf	?_I2C_Master_Read+1,w
  1939     046B  1283               	bcf	3,5	;RP0=0, select bank0
  1940     046C  1303               	bcf	3,6	;RP1=0, select bank0
  1941     046D  00C7               	movwf	_month+1
  1942     046E  0872               	movf	?_I2C_Master_Read,w
  1943     046F  00C6               	movwf	_month
  1944                           
  1945                           ;Dig2postlab4_Master.c: 258:         I2C_Master_Stop();
  1946     0470  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1947                           
  1948                           ;Dig2postlab4_Master.c: 260:         I2C_Master_Start();
  1949     0475  120A  158A  235A  120A  118A  	fcall	_I2C_Master_Start
  1950                           
  1951                           ;Dig2postlab4_Master.c: 261:         I2C_Master_Write(0xD0);
  1952     047A  30D0               	movlw	208
  1953     047B  00F2               	movwf	I2C_Master_Write@d
  1954     047C  3000               	movlw	0
  1955     047D  00F3               	movwf	I2C_Master_Write@d+1
  1956     047E  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1957                           
  1958                           ;Dig2postlab4_Master.c: 262:         I2C_Master_Write(0x06);
  1959     0483  3006               	movlw	6
  1960     0484  00F2               	movwf	I2C_Master_Write@d
  1961     0485  3000               	movlw	0
  1962     0486  00F3               	movwf	I2C_Master_Write@d+1
  1963     0487  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1964                           
  1965                           ;Dig2postlab4_Master.c: 263:         I2C_Master_RepeatedStart();
  1966     048C  120A  158A  2351  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1967                           
  1968                           ;Dig2postlab4_Master.c: 264:         I2C_Master_Write(0xD1);
  1969     0491  30D1               	movlw	209
  1970     0492  00F2               	movwf	I2C_Master_Write@d
  1971     0493  3000               	movlw	0
  1972     0494  00F3               	movwf	I2C_Master_Write@d+1
  1973     0495  120A  158A  236C  120A  118A  	fcall	_I2C_Master_Write
  1974                           
  1975                           ;Dig2postlab4_Master.c: 265:         year = I2C_Master_Read(0);
  1976     049A  3000               	movlw	0
  1977     049B  00F2               	movwf	I2C_Master_Read@a
  1978     049C  00F3               	movwf	I2C_Master_Read@a+1
  1979     049D  120A  158A  2414  120A  118A  	fcall	_I2C_Master_Read
  1980     04A2  0873               	movf	?_I2C_Master_Read+1,w
  1981     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1982     04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1983     04A5  00C5               	movwf	_year+1
  1984     04A6  0872               	movf	?_I2C_Master_Read,w
  1985     04A7  00C4               	movwf	_year
  1986                           
  1987                           ;Dig2postlab4_Master.c: 266:         I2C_Master_Stop();
  1988     04A8  120A  158A  2363  120A  118A  	fcall	_I2C_Master_Stop
  1989     04AD                     l2227:
  1990                           
  1991                           ;Dig2postlab4_Master.c: 268:         decSeconds = seconds>>4;
  1992     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1993     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1994     04AF  0E4E               	swapf	_seconds,w
  1995     04B0  390F               	andlw	15
  1996     04B1  00C2               	movwf	_decSeconds
  1997     04B2  0E4F               	swapf	_seconds+1,w
  1998     04B3  39F0               	andlw	240
  1999     04B4  04C2               	iorwf	_decSeconds,f
  2000     04B5  0E4F               	swapf	_seconds+1,w
  2001     04B6  390F               	andlw	15
  2002     04B7  00C3               	movwf	_decSeconds+1
  2003     04B8  30F0               	movlw	240
  2004     04B9  1DC3               	btfss	_decSeconds+1,3
  2005     04BA  3000               	movlw	0
  2006     04BB  04C3               	iorwf	_decSeconds+1,f
  2007     04BC                     l2229:
  2008                           
  2009                           ;Dig2postlab4_Master.c: 269:         uniSeconds = 0b00001111 & seconds;
  2010     04BC  300F               	movlw	15
  2011     04BD  054E               	andwf	_seconds,w
  2012     04BE  00C0               	movwf	_uniSeconds
  2013     04BF  3000               	movlw	0
  2014     04C0  054F               	andwf	_seconds+1,w
  2015     04C1  00C1               	movwf	_uniSeconds+1
  2016     04C2                     l2231:
  2017                           
  2018                           ;Dig2postlab4_Master.c: 270:         decMinutes = minutes>>4;
  2019     04C2  0E4C               	swapf	_minutes,w
  2020     04C3  390F               	andlw	15
  2021     04C4  00BE               	movwf	_decMinutes
  2022     04C5  0E4D               	swapf	_minutes+1,w
  2023     04C6  39F0               	andlw	240
  2024     04C7  04BE               	iorwf	_decMinutes,f
  2025     04C8  0E4D               	swapf	_minutes+1,w
  2026     04C9  390F               	andlw	15
  2027     04CA  00BF               	movwf	_decMinutes+1
  2028     04CB  30F0               	movlw	240
  2029     04CC  1DBF               	btfss	_decMinutes+1,3
  2030     04CD  3000               	movlw	0
  2031     04CE  04BF               	iorwf	_decMinutes+1,f
  2032     04CF                     l2233:
  2033                           
  2034                           ;Dig2postlab4_Master.c: 271:         uniMinutes = 0b00001111 & minutes;
  2035     04CF  300F               	movlw	15
  2036     04D0  054C               	andwf	_minutes,w
  2037     04D1  00BC               	movwf	_uniMinutes
  2038     04D2  3000               	movlw	0
  2039     04D3  054D               	andwf	_minutes+1,w
  2040     04D4  00BD               	movwf	_uniMinutes+1
  2041     04D5                     l2235:
  2042                           
  2043                           ;Dig2postlab4_Master.c: 272:         decHours = hours>>4;
  2044     04D5  0E4A               	swapf	_hours,w
  2045     04D6  390F               	andlw	15
  2046     04D7  00BA               	movwf	_decHours
  2047     04D8  0E4B               	swapf	_hours+1,w
  2048     04D9  39F0               	andlw	240
  2049     04DA  04BA               	iorwf	_decHours,f
  2050     04DB  0E4B               	swapf	_hours+1,w
  2051     04DC  390F               	andlw	15
  2052     04DD  00BB               	movwf	_decHours+1
  2053     04DE  30F0               	movlw	240
  2054     04DF  1DBB               	btfss	_decHours+1,3
  2055     04E0  3000               	movlw	0
  2056     04E1  04BB               	iorwf	_decHours+1,f
  2057     04E2                     l2237:
  2058                           
  2059                           ;Dig2postlab4_Master.c: 273:         uniHours = 0b00001111 & hours;
  2060     04E2  300F               	movlw	15
  2061     04E3  054A               	andwf	_hours,w
  2062     04E4  00B8               	movwf	_uniHours
  2063     04E5  3000               	movlw	0
  2064     04E6  054B               	andwf	_hours+1,w
  2065     04E7  00B9               	movwf	_uniHours+1
  2066     04E8                     l2239:
  2067                           
  2068                           ;Dig2postlab4_Master.c: 274:         decDay = day>>4;
  2069     04E8  0E48               	swapf	_day,w
  2070     04E9  390F               	andlw	15
  2071     04EA  00B6               	movwf	_decDay
  2072     04EB  0E49               	swapf	_day+1,w
  2073     04EC  39F0               	andlw	240
  2074     04ED  04B6               	iorwf	_decDay,f
  2075     04EE  0E49               	swapf	_day+1,w
  2076     04EF  390F               	andlw	15
  2077     04F0  00B7               	movwf	_decDay+1
  2078     04F1  30F0               	movlw	240
  2079     04F2  1DB7               	btfss	_decDay+1,3
  2080     04F3  3000               	movlw	0
  2081     04F4  04B7               	iorwf	_decDay+1,f
  2082     04F5                     l2241:
  2083                           
  2084                           ;Dig2postlab4_Master.c: 275:         uniDay = 0b00001111 & day;
  2085     04F5  300F               	movlw	15
  2086     04F6  0548               	andwf	_day,w
  2087     04F7  00B4               	movwf	_uniDay
  2088     04F8  3000               	movlw	0
  2089     04F9  0549               	andwf	_day+1,w
  2090     04FA  00B5               	movwf	_uniDay+1
  2091     04FB                     l2243:
  2092                           
  2093                           ;Dig2postlab4_Master.c: 276:         decMonth = month>>4;
  2094     04FB  0E46               	swapf	_month,w
  2095     04FC  390F               	andlw	15
  2096     04FD  00B2               	movwf	_decMonth
  2097     04FE  0E47               	swapf	_month+1,w
  2098     04FF  39F0               	andlw	240
  2099     0500  04B2               	iorwf	_decMonth,f
  2100     0501  0E47               	swapf	_month+1,w
  2101     0502  390F               	andlw	15
  2102     0503  00B3               	movwf	_decMonth+1
  2103     0504  30F0               	movlw	240
  2104     0505  1DB3               	btfss	_decMonth+1,3
  2105     0506  3000               	movlw	0
  2106     0507  04B3               	iorwf	_decMonth+1,f
  2107     0508                     l2245:
  2108                           
  2109                           ;Dig2postlab4_Master.c: 277:         uniMonth = 0b00001111 & month;
  2110     0508  300F               	movlw	15
  2111     0509  0546               	andwf	_month,w
  2112     050A  00B0               	movwf	_uniMonth
  2113     050B  3000               	movlw	0
  2114     050C  0547               	andwf	_month+1,w
  2115     050D  00B1               	movwf	_uniMonth+1
  2116     050E                     l2247:
  2117                           
  2118                           ;Dig2postlab4_Master.c: 278:         decYear = year>>4;
  2119     050E  0E44               	swapf	_year,w
  2120     050F  390F               	andlw	15
  2121     0510  00AE               	movwf	_decYear
  2122     0511  0E45               	swapf	_year+1,w
  2123     0512  39F0               	andlw	240
  2124     0513  04AE               	iorwf	_decYear,f
  2125     0514  0E45               	swapf	_year+1,w
  2126     0515  390F               	andlw	15
  2127     0516  00AF               	movwf	_decYear+1
  2128     0517  30F0               	movlw	240
  2129     0518  1DAF               	btfss	_decYear+1,3
  2130     0519  3000               	movlw	0
  2131     051A  04AF               	iorwf	_decYear+1,f
  2132     051B                     l2249:
  2133                           
  2134                           ;Dig2postlab4_Master.c: 279:         uniYear = 0b00001111 & year;
  2135     051B  300F               	movlw	15
  2136     051C  0544               	andwf	_year,w
  2137     051D  00AC               	movwf	_uniYear
  2138     051E  3000               	movlw	0
  2139     051F  0545               	andwf	_year+1,w
  2140     0520  00AD               	movwf	_uniYear+1
  2141                           
  2142                           ;Dig2postlab4_Master.c: 280:         cenPot = (int)potValue/100;
  2143     0521  3064               	movlw	100
  2144     0522  00D0               	movwf	___awdiv@divisor
  2145     0523  3000               	movlw	0
  2146     0524  00D1               	movwf	___awdiv@divisor+1
  2147     0525  0827               	movf	_potValue+1,w
  2148     0526  00D3               	movwf	___awdiv@dividend+1
  2149     0527  0826               	movf	_potValue,w
  2150     0528  00D2               	movwf	___awdiv@dividend
  2151     0529  120A  118A  2778  120A  118A  	fcall	___awdiv
  2152     052E  1283               	bcf	3,5	;RP0=0, select bank0
  2153     052F  1303               	bcf	3,6	;RP1=0, select bank0
  2154     0530  0851               	movf	?___awdiv+1,w
  2155     0531  00A5               	movwf	_cenPot+1
  2156     0532  0850               	movf	?___awdiv,w
  2157     0533  00A4               	movwf	_cenPot
  2158                           
  2159                           ;Dig2postlab4_Master.c: 281:         decPot = ((int)potValue%100)/10;
  2160     0534  300A               	movlw	10
  2161     0535  00D0               	movwf	___awdiv@divisor
  2162     0536  3000               	movlw	0
  2163     0537  00D1               	movwf	___awdiv@divisor+1
  2164     0538  0827               	movf	_potValue+1,w
  2165     0539  00F5               	movwf	___awmod@dividend+1
  2166     053A  0826               	movf	_potValue,w
  2167     053B  00F4               	movwf	___awmod@dividend
  2168     053C  3064               	movlw	100
  2169     053D  00F2               	movwf	___awmod@divisor
  2170     053E  3000               	movlw	0
  2171     053F  00F3               	movwf	___awmod@divisor+1
  2172     0540  120A  158A  2619  120A  118A  	fcall	___awmod
  2173     0545  0873               	movf	?___awmod+1,w
  2174     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0548  00D3               	movwf	___awdiv@dividend+1
  2177     0549  0872               	movf	?___awmod,w
  2178     054A  00D2               	movwf	___awdiv@dividend
  2179     054B  120A  118A  2778  120A  118A  	fcall	___awdiv
  2180     0550  1283               	bcf	3,5	;RP0=0, select bank0
  2181     0551  1303               	bcf	3,6	;RP1=0, select bank0
  2182     0552  0851               	movf	?___awdiv+1,w
  2183     0553  00A3               	movwf	_decPot+1
  2184     0554  0850               	movf	?___awdiv,w
  2185     0555  00A2               	movwf	_decPot
  2186                           
  2187                           ;Dig2postlab4_Master.c: 282:         uniPot = ((int)potValue%100)%10;
  2188     0556  0827               	movf	_potValue+1,w
  2189     0557  00F5               	movwf	___awmod@dividend+1
  2190     0558  0826               	movf	_potValue,w
  2191     0559  00F4               	movwf	___awmod@dividend
  2192     055A  3064               	movlw	100
  2193     055B  00F2               	movwf	___awmod@divisor
  2194     055C  3000               	movlw	0
  2195     055D  00F3               	movwf	___awmod@divisor+1
  2196     055E  120A  158A  2619  120A  118A  	fcall	___awmod
  2197     0563  0873               	movf	?___awmod+1,w
  2198     0564  1283               	bcf	3,5	;RP0=0, select bank0
  2199     0565  1303               	bcf	3,6	;RP1=0, select bank0
  2200     0566  00E0               	movwf	_main$1055+1
  2201     0567  0872               	movf	?___awmod,w
  2202     0568  00DF               	movwf	_main$1055
  2203                           
  2204                           ;Dig2postlab4_Master.c: 282:         uniPot = ((int)potValue%100)%10;
  2205     0569  300A               	movlw	10
  2206     056A  00F2               	movwf	___awmod@divisor
  2207     056B  3000               	movlw	0
  2208     056C  00F3               	movwf	___awmod@divisor+1
  2209     056D  0860               	movf	_main$1055+1,w
  2210     056E  00F5               	movwf	___awmod@dividend+1
  2211     056F  085F               	movf	_main$1055,w
  2212     0570  00F4               	movwf	___awmod@dividend
  2213     0571  120A  158A  2619  120A  118A  	fcall	___awmod
  2214     0576  0873               	movf	?___awmod+1,w
  2215     0577  1283               	bcf	3,5	;RP0=0, select bank0
  2216     0578  1303               	bcf	3,6	;RP1=0, select bank0
  2217     0579  00A1               	movwf	_uniPot+1
  2218     057A  0872               	movf	?___awmod,w
  2219     057B  00A0               	movwf	_uniPot
  2220                           
  2221                           ;Dig2postlab4_Master.c: 283:         Lcd_Clear();
  2222     057C  120A  158A  2383  120A  118A  	fcall	_Lcd_Clear
  2223                           
  2224                           ;Dig2postlab4_Master.c: 284:         Lcd_Set_Cursor(1,1);
  2225     0581  01F6               	clrf	Lcd_Set_Cursor@b
  2226     0582  0AF6               	incf	Lcd_Set_Cursor@b,f
  2227     0583  3001               	movlw	1
  2228     0584  120A  158A  23A6  120A  118A  	fcall	_Lcd_Set_Cursor
  2229     0589                     l2251:
  2230                           
  2231                           ;Dig2postlab4_Master.c: 285:         Lcd_Write_String("Pot1:");
  2232     0589  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2233     058A  120A  158A  23C6  120A  118A  	fcall	_Lcd_Write_String
  2234     058F                     l2253:
  2235                           
  2236                           ;Dig2postlab4_Master.c: 286:         Lcd_Set_Cursor(1,8);
  2237     058F  3008               	movlw	8
  2238     0590  00F6               	movwf	Lcd_Set_Cursor@b
  2239     0591  3001               	movlw	1
  2240     0592  120A  158A  23A6  120A  118A  	fcall	_Lcd_Set_Cursor
  2241     0597                     l2255:
  2242                           
  2243                           ;Dig2postlab4_Master.c: 287:         if(contEdit == 3){
  2244     0597  3003               	movlw	3
  2245     0598  1283               	bcf	3,5	;RP0=0, select bank0
  2246     0599  1303               	bcf	3,6	;RP1=0, select bank0
  2247     059A  0628               	xorwf	_contEdit,w
  2248     059B  0429               	iorwf	_contEdit+1,w
  2249     059C  1D03               	btfss	3,2
  2250     059D  2D9F               	goto	u1351
  2251     059E  2DA0               	goto	u1350
  2252     059F                     u1351:
  2253     059F  2DA6               	goto	l2259
  2254     05A0                     u1350:
  2255     05A0                     l2257:
  2256                           
  2257                           ;Dig2postlab4_Master.c: 288:             Lcd_Write_Char('>');
  2258     05A0  303E               	movlw	62
  2259     05A1  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2260     05A6                     l2259:
  2261                           
  2262                           ;Dig2postlab4_Master.c: 290:         Lcd_Write_Char(NumtoChar(decDay));
  2263     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2264     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2265     05A8  0837               	movf	_decDay+1,w
  2266     05A9  00F3               	movwf	NumtoChar@a+1
  2267     05AA  0836               	movf	_decDay,w
  2268     05AB  00F2               	movwf	NumtoChar@a
  2269     05AC  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2270     05B1  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2271     05B6                     l2261:
  2272                           
  2273                           ;Dig2postlab4_Master.c: 291:         Lcd_Write_Char(NumtoChar(uniDay));
  2274     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2275     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2276     05B8  0835               	movf	_uniDay+1,w
  2277     05B9  00F3               	movwf	NumtoChar@a+1
  2278     05BA  0834               	movf	_uniDay,w
  2279     05BB  00F2               	movwf	NumtoChar@a
  2280     05BC  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2281     05C1  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2282                           
  2283                           ;Dig2postlab4_Master.c: 292:         Lcd_Write_Char('/');
  2284     05C6  302F               	movlw	47
  2285     05C7  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2286     05CC                     l2263:
  2287                           
  2288                           ;Dig2postlab4_Master.c: 293:         if(contEdit == 4){
  2289     05CC  3004               	movlw	4
  2290     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2291     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2292     05CF  0628               	xorwf	_contEdit,w
  2293     05D0  0429               	iorwf	_contEdit+1,w
  2294     05D1  1D03               	btfss	3,2
  2295     05D2  2DD4               	goto	u1361
  2296     05D3  2DD5               	goto	u1360
  2297     05D4                     u1361:
  2298     05D4  2DDB               	goto	l2267
  2299     05D5                     u1360:
  2300     05D5                     l2265:
  2301                           
  2302                           ;Dig2postlab4_Master.c: 294:             Lcd_Write_Char('>');
  2303     05D5  303E               	movlw	62
  2304     05D6  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2305     05DB                     l2267:
  2306                           
  2307                           ;Dig2postlab4_Master.c: 296:         Lcd_Write_Char(NumtoChar(decMonth));
  2308     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2309     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2310     05DD  0833               	movf	_decMonth+1,w
  2311     05DE  00F3               	movwf	NumtoChar@a+1
  2312     05DF  0832               	movf	_decMonth,w
  2313     05E0  00F2               	movwf	NumtoChar@a
  2314     05E1  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2315     05E6  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2316     05EB                     l2269:
  2317                           
  2318                           ;Dig2postlab4_Master.c: 297:         Lcd_Write_Char(NumtoChar(uniMonth));
  2319     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2320     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2321     05ED  0831               	movf	_uniMonth+1,w
  2322     05EE  00F3               	movwf	NumtoChar@a+1
  2323     05EF  0830               	movf	_uniMonth,w
  2324     05F0  00F2               	movwf	NumtoChar@a
  2325     05F1  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2326     05F6  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2327                           
  2328                           ;Dig2postlab4_Master.c: 298:         Lcd_Write_Char('/');
  2329     05FB  302F               	movlw	47
  2330     05FC  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2331     0601                     l2271:
  2332                           
  2333                           ;Dig2postlab4_Master.c: 299:         if(contEdit == 5){
  2334     0601  3005               	movlw	5
  2335     0602  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0603  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0604  0628               	xorwf	_contEdit,w
  2338     0605  0429               	iorwf	_contEdit+1,w
  2339     0606  1D03               	btfss	3,2
  2340     0607  2E09               	goto	u1371
  2341     0608  2E0A               	goto	u1370
  2342     0609                     u1371:
  2343     0609  2E10               	goto	l2275
  2344     060A                     u1370:
  2345     060A                     l2273:
  2346                           
  2347                           ;Dig2postlab4_Master.c: 300:             Lcd_Write_Char('>');
  2348     060A  303E               	movlw	62
  2349     060B  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2350     0610                     l2275:
  2351                           
  2352                           ;Dig2postlab4_Master.c: 302:         Lcd_Write_Char(NumtoChar(decYear));
  2353     0610  1283               	bcf	3,5	;RP0=0, select bank0
  2354     0611  1303               	bcf	3,6	;RP1=0, select bank0
  2355     0612  082F               	movf	_decYear+1,w
  2356     0613  00F3               	movwf	NumtoChar@a+1
  2357     0614  082E               	movf	_decYear,w
  2358     0615  00F2               	movwf	NumtoChar@a
  2359     0616  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2360     061B  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2361     0620                     l2277:
  2362                           
  2363                           ;Dig2postlab4_Master.c: 303:         Lcd_Write_Char(NumtoChar(uniYear));
  2364     0620  1283               	bcf	3,5	;RP0=0, select bank0
  2365     0621  1303               	bcf	3,6	;RP1=0, select bank0
  2366     0622  082D               	movf	_uniYear+1,w
  2367     0623  00F3               	movwf	NumtoChar@a+1
  2368     0624  082C               	movf	_uniYear,w
  2369     0625  00F2               	movwf	NumtoChar@a
  2370     0626  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2371     062B  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2372                           
  2373                           ;Dig2postlab4_Master.c: 304:         Lcd_Set_Cursor(2,1);
  2374     0630  01F6               	clrf	Lcd_Set_Cursor@b
  2375     0631  0AF6               	incf	Lcd_Set_Cursor@b,f
  2376     0632  3002               	movlw	2
  2377     0633  120A  158A  23A6  120A  118A  	fcall	_Lcd_Set_Cursor
  2378     0638                     l2279:
  2379                           
  2380                           ;Dig2postlab4_Master.c: 305:         Lcd_Write_Char(NumtoChar(cenPot));
  2381     0638  1283               	bcf	3,5	;RP0=0, select bank0
  2382     0639  1303               	bcf	3,6	;RP1=0, select bank0
  2383     063A  0825               	movf	_cenPot+1,w
  2384     063B  00F3               	movwf	NumtoChar@a+1
  2385     063C  0824               	movf	_cenPot,w
  2386     063D  00F2               	movwf	NumtoChar@a
  2387     063E  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2388     0643  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2389     0648                     l2281:
  2390                           
  2391                           ;Dig2postlab4_Master.c: 306:         Lcd_Write_Char(NumtoChar(decPot));
  2392     0648  1283               	bcf	3,5	;RP0=0, select bank0
  2393     0649  1303               	bcf	3,6	;RP1=0, select bank0
  2394     064A  0823               	movf	_decPot+1,w
  2395     064B  00F3               	movwf	NumtoChar@a+1
  2396     064C  0822               	movf	_decPot,w
  2397     064D  00F2               	movwf	NumtoChar@a
  2398     064E  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2399     0653  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2400     0658                     l2283:
  2401                           
  2402                           ;Dig2postlab4_Master.c: 307:         Lcd_Write_Char(NumtoChar(uniPot));
  2403     0658  1283               	bcf	3,5	;RP0=0, select bank0
  2404     0659  1303               	bcf	3,6	;RP1=0, select bank0
  2405     065A  0821               	movf	_uniPot+1,w
  2406     065B  00F3               	movwf	NumtoChar@a+1
  2407     065C  0820               	movf	_uniPot,w
  2408     065D  00F2               	movwf	NumtoChar@a
  2409     065E  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2410     0663  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2411     0668                     l2285:
  2412                           
  2413                           ;Dig2postlab4_Master.c: 308:         Lcd_Set_Cursor(2,8);
  2414     0668  3008               	movlw	8
  2415     0669  00F6               	movwf	Lcd_Set_Cursor@b
  2416     066A  3002               	movlw	2
  2417     066B  120A  158A  23A6  120A  118A  	fcall	_Lcd_Set_Cursor
  2418     0670                     l2287:
  2419                           
  2420                           ;Dig2postlab4_Master.c: 309:         if(contEdit == 2){
  2421     0670  3002               	movlw	2
  2422     0671  1283               	bcf	3,5	;RP0=0, select bank0
  2423     0672  1303               	bcf	3,6	;RP1=0, select bank0
  2424     0673  0628               	xorwf	_contEdit,w
  2425     0674  0429               	iorwf	_contEdit+1,w
  2426     0675  1D03               	btfss	3,2
  2427     0676  2E78               	goto	u1381
  2428     0677  2E79               	goto	u1380
  2429     0678                     u1381:
  2430     0678  2E7F               	goto	l2291
  2431     0679                     u1380:
  2432     0679                     l2289:
  2433                           
  2434                           ;Dig2postlab4_Master.c: 310:             Lcd_Write_Char('>');
  2435     0679  303E               	movlw	62
  2436     067A  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2437     067F                     l2291:
  2438                           
  2439                           ;Dig2postlab4_Master.c: 312:         Lcd_Write_Char(NumtoChar(decHours));
  2440     067F  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0680  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0681  083B               	movf	_decHours+1,w
  2443     0682  00F3               	movwf	NumtoChar@a+1
  2444     0683  083A               	movf	_decHours,w
  2445     0684  00F2               	movwf	NumtoChar@a
  2446     0685  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2447     068A  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2448     068F                     l2293:
  2449                           
  2450                           ;Dig2postlab4_Master.c: 313:         Lcd_Write_Char(NumtoChar(uniHours));
  2451     068F  1283               	bcf	3,5	;RP0=0, select bank0
  2452     0690  1303               	bcf	3,6	;RP1=0, select bank0
  2453     0691  0839               	movf	_uniHours+1,w
  2454     0692  00F3               	movwf	NumtoChar@a+1
  2455     0693  0838               	movf	_uniHours,w
  2456     0694  00F2               	movwf	NumtoChar@a
  2457     0695  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2458     069A  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2459                           
  2460                           ;Dig2postlab4_Master.c: 314:         Lcd_Write_Char(':');
  2461     069F  303A               	movlw	58
  2462     06A0  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2463     06A5                     l2295:
  2464                           
  2465                           ;Dig2postlab4_Master.c: 315:         if(contEdit == 1){
  2466     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2467     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2468     06A7  0328               	decf	_contEdit,w
  2469     06A8  0429               	iorwf	_contEdit+1,w
  2470     06A9  1D03               	btfss	3,2
  2471     06AA  2EAC               	goto	u1391
  2472     06AB  2EAD               	goto	u1390
  2473     06AC                     u1391:
  2474     06AC  2EB3               	goto	l2299
  2475     06AD                     u1390:
  2476     06AD                     l2297:
  2477                           
  2478                           ;Dig2postlab4_Master.c: 316:             Lcd_Write_Char('>');
  2479     06AD  303E               	movlw	62
  2480     06AE  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2481     06B3                     l2299:
  2482                           
  2483                           ;Dig2postlab4_Master.c: 318:         Lcd_Write_Char(NumtoChar(decMinutes));
  2484     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2485     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2486     06B5  083F               	movf	_decMinutes+1,w
  2487     06B6  00F3               	movwf	NumtoChar@a+1
  2488     06B7  083E               	movf	_decMinutes,w
  2489     06B8  00F2               	movwf	NumtoChar@a
  2490     06B9  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2491     06BE  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2492     06C3                     l2301:
  2493                           
  2494                           ;Dig2postlab4_Master.c: 319:         Lcd_Write_Char(NumtoChar(uniMinutes));
  2495     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2496     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2497     06C5  083D               	movf	_uniMinutes+1,w
  2498     06C6  00F3               	movwf	NumtoChar@a+1
  2499     06C7  083C               	movf	_uniMinutes,w
  2500     06C8  00F2               	movwf	NumtoChar@a
  2501     06C9  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2502     06CE  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2503                           
  2504                           ;Dig2postlab4_Master.c: 320:         Lcd_Write_Char(':');
  2505     06D3  303A               	movlw	58
  2506     06D4  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2507     06D9                     l2303:
  2508                           
  2509                           ;Dig2postlab4_Master.c: 321:         if(contEdit == 0){
  2510     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2511     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2512     06DB  0828               	movf	_contEdit,w
  2513     06DC  0429               	iorwf	_contEdit+1,w
  2514     06DD  1D03               	btfss	3,2
  2515     06DE  2EE0               	goto	u1401
  2516     06DF  2EE1               	goto	u1400
  2517     06E0                     u1401:
  2518     06E0  2EE7               	goto	l2307
  2519     06E1                     u1400:
  2520     06E1                     l2305:
  2521                           
  2522                           ;Dig2postlab4_Master.c: 322:             Lcd_Write_Char('>');
  2523     06E1  303E               	movlw	62
  2524     06E2  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2525     06E7                     l2307:
  2526                           
  2527                           ;Dig2postlab4_Master.c: 324:         Lcd_Write_Char(NumtoChar(decSeconds));
  2528     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2529     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2530     06E9  0843               	movf	_decSeconds+1,w
  2531     06EA  00F3               	movwf	NumtoChar@a+1
  2532     06EB  0842               	movf	_decSeconds,w
  2533     06EC  00F2               	movwf	NumtoChar@a
  2534     06ED  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2535     06F2  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2536     06F7                     l2309:
  2537                           
  2538                           ;Dig2postlab4_Master.c: 325:         Lcd_Write_Char(NumtoChar(uniSeconds));
  2539     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2540     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2541     06F9  0841               	movf	_uniSeconds+1,w
  2542     06FA  00F3               	movwf	NumtoChar@a+1
  2543     06FB  0840               	movf	_uniSeconds,w
  2544     06FC  00F2               	movwf	NumtoChar@a
  2545     06FD  120A  158A  24AB  120A  118A  	fcall	_NumtoChar
  2546     0702  120A  158A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2547     0707  2AF3               	goto	l2211
  2548     0708  120A  118A  280C   	ljmp	start
  2549     070B                     __end_of_main:
  2550                           
  2551                           	psect	text1
  2552     0C42                     __ptext1:	
  2553 ;; *************** function _setup *****************
  2554 ;; Defined at:
  2555 ;;		line 330 in file "Dig2postlab4_Master.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 3
  2576 ;; This function calls:
  2577 ;;		_I2C_Master_Init
  2578 ;;		_ioc_inint
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584     0C42                     _setup:	
  2585                           ;psect for function _setup
  2586                           
  2587     0C42                     l1881:	
  2588                           ;incstack = 0
  2589                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2590                           
  2591                           
  2592                           ;Dig2postlab4_Master.c: 331:     ANSEL = 0;
  2593     0C42  1683               	bsf	3,5	;RP0=1, select bank3
  2594     0C43  1703               	bsf	3,6	;RP1=1, select bank3
  2595     0C44  0188               	clrf	8	;volatile
  2596                           
  2597                           ;Dig2postlab4_Master.c: 332:     ANSELH = 0;
  2598     0C45  0189               	clrf	9	;volatile
  2599                           
  2600                           ;Dig2postlab4_Master.c: 333:     TRISA = 0;
  2601     0C46  1683               	bsf	3,5	;RP0=1, select bank1
  2602     0C47  1303               	bcf	3,6	;RP1=0, select bank1
  2603     0C48  0185               	clrf	5	;volatile
  2604                           
  2605                           ;Dig2postlab4_Master.c: 334:     TRISB = 0;
  2606     0C49  0186               	clrf	6	;volatile
  2607                           
  2608                           ;Dig2postlab4_Master.c: 335:     TRISD = 0;
  2609     0C4A  0188               	clrf	8	;volatile
  2610                           
  2611                           ;Dig2postlab4_Master.c: 336:     TRISE = 0;
  2612     0C4B  0189               	clrf	9	;volatile
  2613                           
  2614                           ;Dig2postlab4_Master.c: 338:     PORTA = 0;
  2615     0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  2616     0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  2617     0C4E  0185               	clrf	5	;volatile
  2618                           
  2619                           ;Dig2postlab4_Master.c: 339:     PORTB = 0;
  2620     0C4F  0186               	clrf	6	;volatile
  2621                           
  2622                           ;Dig2postlab4_Master.c: 340:     PORTD = 0;
  2623     0C50  0188               	clrf	8	;volatile
  2624                           
  2625                           ;Dig2postlab4_Master.c: 341:     PORTE = 0;
  2626     0C51  0189               	clrf	9	;volatile
  2627     0C52                     l1883:
  2628                           
  2629                           ;Dig2postlab4_Master.c: 343:     ioc_inint(0);
  2630     0C52  3000               	movlw	0
  2631     0C53  00F2               	movwf	ioc_inint@pin
  2632     0C54  00F3               	movwf	ioc_inint@pin+1
  2633     0C55  120A  118A  270B  120A  158A  	fcall	_ioc_inint
  2634     0C5A                     l1885:
  2635                           
  2636                           ;Dig2postlab4_Master.c: 344:     ioc_inint(1);
  2637     0C5A  3001               	movlw	1
  2638     0C5B  00F2               	movwf	ioc_inint@pin
  2639     0C5C  3000               	movlw	0
  2640     0C5D  00F3               	movwf	ioc_inint@pin+1
  2641     0C5E  120A  118A  270B  120A  158A  	fcall	_ioc_inint
  2642     0C63                     l1887:
  2643                           
  2644                           ;Dig2postlab4_Master.c: 345:     I2C_Master_Init(100000);
  2645     0C63  3000               	movlw	0
  2646     0C64  1283               	bcf	3,5	;RP0=0, select bank0
  2647     0C65  1303               	bcf	3,6	;RP1=0, select bank0
  2648     0C66  00D8               	movwf	I2C_Master_Init@c+3
  2649     0C67  3001               	movlw	1
  2650     0C68  00D7               	movwf	I2C_Master_Init@c+2
  2651     0C69  3086               	movlw	134
  2652     0C6A  00D6               	movwf	I2C_Master_Init@c+1
  2653     0C6B  30A0               	movlw	160
  2654     0C6C  00D5               	movwf	I2C_Master_Init@c
  2655     0C6D  120A  158A  2473  120A  158A  	fcall	_I2C_Master_Init
  2656     0C72                     l281:
  2657     0C72  0008               	return
  2658     0C73                     __end_of_setup:
  2659                           
  2660                           	psect	text2
  2661     070B                     __ptext2:	
  2662 ;; *************** function _ioc_inint *****************
  2663 ;; Defined at:
  2664 ;;		line 3 in file "buttonInterrupt.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  pin             2    2[COMMON] int 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         2       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0
  2681 ;;      Totals:         2       0       0       0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_setup
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692     070B                     _ioc_inint:	
  2693                           ;psect for function _ioc_inint
  2694                           
  2695     070B                     l1743:	
  2696                           ;incstack = 0
  2697                           ; Regs used in _ioc_inint: [wreg-fsr0h+status,2+status,0]
  2698                           
  2699                           
  2700                           ;buttonInterrupt.c: 5:     INTCONbits.PEIE = 1;
  2701     070B  170B               	bsf	11,6	;volatile
  2702                           
  2703                           ;buttonInterrupt.c: 6:     INTCONbits.GIE = 1;
  2704     070C  178B               	bsf	11,7	;volatile
  2705                           
  2706                           ;buttonInterrupt.c: 10:     INTCONbits.RBIE = 1;
  2707     070D  158B               	bsf	11,3	;volatile
  2708                           
  2709                           ;buttonInterrupt.c: 11:     INTCONbits.RBIF = 0;
  2710     070E  100B               	bcf	11,0	;volatile
  2711                           
  2712                           ;buttonInterrupt.c: 13:     switch(pin){
  2713     070F  2F58               	goto	l1811
  2714     0710                     l1745:
  2715                           
  2716                           ;buttonInterrupt.c: 15:             TRISB = TRISB | 0b00000001;
  2717     0710  1683               	bsf	3,5	;RP0=1, select bank1
  2718     0711  1303               	bcf	3,6	;RP1=0, select bank1
  2719     0712  0806               	movf	6,w	;volatile
  2720     0713  3801               	iorlw	1
  2721     0714  0086               	movwf	6	;volatile
  2722     0715                     l1747:
  2723                           
  2724                           ;buttonInterrupt.c: 16:             OPTION_REGbits.nRBPU = 0;
  2725     0715  1381               	bcf	1,7	;volatile
  2726     0716                     l1749:
  2727                           
  2728                           ;buttonInterrupt.c: 17:             WPUBbits.WPUB0 = 1;
  2729     0716  1415               	bsf	21,0	;volatile
  2730     0717                     l1751:
  2731                           
  2732                           ;buttonInterrupt.c: 18:             IOCBbits.IOCB0 = 1;
  2733     0717  1416               	bsf	22,0	;volatile
  2734                           
  2735                           ;buttonInterrupt.c: 19:         break;
  2736     0718  2F77               	goto	l349
  2737     0719                     l1753:
  2738                           
  2739                           ;buttonInterrupt.c: 21:             TRISB = TRISB | 0b00000010;
  2740     0719  1683               	bsf	3,5	;RP0=1, select bank1
  2741     071A  1303               	bcf	3,6	;RP1=0, select bank1
  2742     071B  0806               	movf	6,w	;volatile
  2743     071C  3802               	iorlw	2
  2744     071D  0086               	movwf	6	;volatile
  2745     071E                     l1755:
  2746                           
  2747                           ;buttonInterrupt.c: 22:             OPTION_REGbits.nRBPU = 0;
  2748     071E  1381               	bcf	1,7	;volatile
  2749     071F                     l1757:
  2750                           
  2751                           ;buttonInterrupt.c: 23:             WPUBbits.WPUB1 = 1;
  2752     071F  1495               	bsf	21,1	;volatile
  2753     0720                     l1759:
  2754                           
  2755                           ;buttonInterrupt.c: 24:             IOCBbits.IOCB1 = 1;
  2756     0720  1496               	bsf	22,1	;volatile
  2757                           
  2758                           ;buttonInterrupt.c: 25:         break;
  2759     0721  2F77               	goto	l349
  2760     0722                     l1761:
  2761                           
  2762                           ;buttonInterrupt.c: 27:             TRISB = TRISB | 0b00000100;
  2763     0722  1683               	bsf	3,5	;RP0=1, select bank1
  2764     0723  1303               	bcf	3,6	;RP1=0, select bank1
  2765     0724  0806               	movf	6,w	;volatile
  2766     0725  3804               	iorlw	4
  2767     0726  0086               	movwf	6	;volatile
  2768     0727                     l1763:
  2769                           
  2770                           ;buttonInterrupt.c: 28:             OPTION_REGbits.nRBPU = 0;
  2771     0727  1381               	bcf	1,7	;volatile
  2772     0728                     l1765:
  2773                           
  2774                           ;buttonInterrupt.c: 29:             WPUBbits.WPUB2 = 1;
  2775     0728  1515               	bsf	21,2	;volatile
  2776     0729                     l1767:
  2777                           
  2778                           ;buttonInterrupt.c: 30:             IOCBbits.IOCB2 = 1;
  2779     0729  1516               	bsf	22,2	;volatile
  2780                           
  2781                           ;buttonInterrupt.c: 31:             break;
  2782     072A  2F77               	goto	l349
  2783     072B                     l1769:
  2784                           
  2785                           ;buttonInterrupt.c: 33:             TRISB = TRISB | 0b00001000;
  2786     072B  1683               	bsf	3,5	;RP0=1, select bank1
  2787     072C  1303               	bcf	3,6	;RP1=0, select bank1
  2788     072D  0806               	movf	6,w	;volatile
  2789     072E  3808               	iorlw	8
  2790     072F  0086               	movwf	6	;volatile
  2791     0730                     l1771:
  2792                           
  2793                           ;buttonInterrupt.c: 34:             OPTION_REGbits.nRBPU = 0;
  2794     0730  1381               	bcf	1,7	;volatile
  2795     0731                     l1773:
  2796                           
  2797                           ;buttonInterrupt.c: 35:             WPUBbits.WPUB3 = 1;
  2798     0731  1595               	bsf	21,3	;volatile
  2799     0732                     l1775:
  2800                           
  2801                           ;buttonInterrupt.c: 36:             IOCBbits.IOCB3 = 1;
  2802     0732  1596               	bsf	22,3	;volatile
  2803                           
  2804                           ;buttonInterrupt.c: 37:             break;
  2805     0733  2F77               	goto	l349
  2806     0734                     l1777:
  2807                           
  2808                           ;buttonInterrupt.c: 39:             TRISB = TRISB | 0b00010000;
  2809     0734  1683               	bsf	3,5	;RP0=1, select bank1
  2810     0735  1303               	bcf	3,6	;RP1=0, select bank1
  2811     0736  0806               	movf	6,w	;volatile
  2812     0737  3810               	iorlw	16
  2813     0738  0086               	movwf	6	;volatile
  2814     0739                     l1779:
  2815                           
  2816                           ;buttonInterrupt.c: 40:             OPTION_REGbits.nRBPU = 0;
  2817     0739  1381               	bcf	1,7	;volatile
  2818     073A                     l1781:
  2819                           
  2820                           ;buttonInterrupt.c: 41:             WPUBbits.WPUB4 = 1;
  2821     073A  1615               	bsf	21,4	;volatile
  2822     073B                     l1783:
  2823                           
  2824                           ;buttonInterrupt.c: 42:             IOCBbits.IOCB4 = 1;
  2825     073B  1616               	bsf	22,4	;volatile
  2826                           
  2827                           ;buttonInterrupt.c: 43:             break;
  2828     073C  2F77               	goto	l349
  2829     073D                     l1785:
  2830                           
  2831                           ;buttonInterrupt.c: 45:             TRISB = TRISB | 0b00100000;
  2832     073D  1683               	bsf	3,5	;RP0=1, select bank1
  2833     073E  1303               	bcf	3,6	;RP1=0, select bank1
  2834     073F  0806               	movf	6,w	;volatile
  2835     0740  3820               	iorlw	32
  2836     0741  0086               	movwf	6	;volatile
  2837     0742                     l1787:
  2838                           
  2839                           ;buttonInterrupt.c: 46:             OPTION_REGbits.nRBPU = 0;
  2840     0742  1381               	bcf	1,7	;volatile
  2841     0743                     l1789:
  2842                           
  2843                           ;buttonInterrupt.c: 47:             WPUBbits.WPUB5 = 1;
  2844     0743  1695               	bsf	21,5	;volatile
  2845     0744                     l1791:
  2846                           
  2847                           ;buttonInterrupt.c: 48:             IOCBbits.IOCB5 = 1;
  2848     0744  1696               	bsf	22,5	;volatile
  2849                           
  2850                           ;buttonInterrupt.c: 49:             break;
  2851     0745  2F77               	goto	l349
  2852     0746                     l1793:
  2853                           
  2854                           ;buttonInterrupt.c: 51:             TRISB = TRISB | 0b01000000;
  2855     0746  1683               	bsf	3,5	;RP0=1, select bank1
  2856     0747  1303               	bcf	3,6	;RP1=0, select bank1
  2857     0748  0806               	movf	6,w	;volatile
  2858     0749  3840               	iorlw	64
  2859     074A  0086               	movwf	6	;volatile
  2860     074B                     l1795:
  2861                           
  2862                           ;buttonInterrupt.c: 52:             OPTION_REGbits.nRBPU = 0;
  2863     074B  1381               	bcf	1,7	;volatile
  2864     074C                     l1797:
  2865                           
  2866                           ;buttonInterrupt.c: 53:             WPUBbits.WPUB6 = 1;
  2867     074C  1715               	bsf	21,6	;volatile
  2868     074D                     l1799:
  2869                           
  2870                           ;buttonInterrupt.c: 54:             IOCBbits.IOCB6 = 1;
  2871     074D  1716               	bsf	22,6	;volatile
  2872                           
  2873                           ;buttonInterrupt.c: 55:             break;
  2874     074E  2F77               	goto	l349
  2875     074F                     l1801:
  2876                           
  2877                           ;buttonInterrupt.c: 57:             TRISB = TRISB | 0b10000000;
  2878     074F  1683               	bsf	3,5	;RP0=1, select bank1
  2879     0750  1303               	bcf	3,6	;RP1=0, select bank1
  2880     0751  0806               	movf	6,w	;volatile
  2881     0752  3880               	iorlw	128
  2882     0753  0086               	movwf	6	;volatile
  2883     0754                     l1803:
  2884                           
  2885                           ;buttonInterrupt.c: 58:             OPTION_REGbits.nRBPU = 0;
  2886     0754  1381               	bcf	1,7	;volatile
  2887     0755                     l1805:
  2888                           
  2889                           ;buttonInterrupt.c: 59:             WPUBbits.WPUB7 = 1;
  2890     0755  1795               	bsf	21,7	;volatile
  2891     0756                     l1807:
  2892                           
  2893                           ;buttonInterrupt.c: 60:             IOCBbits.IOCB7 = 1;
  2894     0756  1796               	bsf	22,7	;volatile
  2895                           
  2896                           ;buttonInterrupt.c: 61:             break;
  2897     0757  2F77               	goto	l349
  2898     0758                     l1811:
  2899                           
  2900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2901                           ; Switch size 1, requested type "simple"
  2902                           ; Number of cases is 1, Range of values is 0 to 0
  2903                           ; switch strategies available:
  2904                           ; Name         Instructions Cycles
  2905                           ; simple_byte            4     3 (average)
  2906                           ; direct_byte           11     8 (fixed)
  2907                           ; jumptable            260     6 (fixed)
  2908                           ;	Chosen strategy is simple_byte
  2909     0758  0873               	movf	ioc_inint@pin+1,w
  2910     0759  3A00               	xorlw	0	; case 0
  2911     075A  1903               	skipnz
  2912     075B  2F5D               	goto	l2377
  2913     075C  2F77               	goto	l349
  2914     075D                     l2377:
  2915                           
  2916                           ; Switch size 1, requested type "simple"
  2917                           ; Number of cases is 8, Range of values is 0 to 7
  2918                           ; switch strategies available:
  2919                           ; Name         Instructions Cycles
  2920                           ; simple_byte           25    13 (average)
  2921                           ; direct_byte           32     8 (fixed)
  2922                           ; jumptable            260     6 (fixed)
  2923                           ;	Chosen strategy is simple_byte
  2924     075D  0872               	movf	ioc_inint@pin,w
  2925     075E  3A00               	xorlw	0	; case 0
  2926     075F  1903               	skipnz
  2927     0760  2F10               	goto	l1745
  2928     0761  3A01               	xorlw	1	; case 1
  2929     0762  1903               	skipnz
  2930     0763  2F19               	goto	l1753
  2931     0764  3A03               	xorlw	3	; case 2
  2932     0765  1903               	skipnz
  2933     0766  2F22               	goto	l1761
  2934     0767  3A01               	xorlw	1	; case 3
  2935     0768  1903               	skipnz
  2936     0769  2F2B               	goto	l1769
  2937     076A  3A07               	xorlw	7	; case 4
  2938     076B  1903               	skipnz
  2939     076C  2F34               	goto	l1777
  2940     076D  3A01               	xorlw	1	; case 5
  2941     076E  1903               	skipnz
  2942     076F  2F3D               	goto	l1785
  2943     0770  3A03               	xorlw	3	; case 6
  2944     0771  1903               	skipnz
  2945     0772  2F46               	goto	l1793
  2946     0773  3A01               	xorlw	1	; case 7
  2947     0774  1903               	skipnz
  2948     0775  2F4F               	goto	l1801
  2949     0776  2F77               	goto	l349
  2950     0777                     l349:
  2951     0777  0008               	return
  2952     0778                     __end_of_ioc_inint:
  2953                           
  2954                           	psect	text3
  2955     0C73                     __ptext3:	
  2956 ;; *************** function _I2C_Master_Init *****************
  2957 ;; Defined at:
  2958 ;;		line 5 in file "I2C.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  c               4    5[BANK0 ] const unsigned long 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       4       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          0       4       0       0       0
  2975 ;;      Totals:         0       8       0       0       0
  2976 ;;Total ram usage:        8 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 2
  2979 ;; This function calls:
  2980 ;;		___lldiv
  2981 ;; This function is called by:
  2982 ;;		_setup
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986     0C73                     _I2C_Master_Init:	
  2987                           ;psect for function _I2C_Master_Init
  2988                           
  2989     0C73                     l1707:	
  2990                           ;incstack = 0
  2991                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2992                           
  2993                           
  2994                           ;I2C.c: 5: void I2C_Master_Init(const unsigned long c);I2C.c: 6: {;I2C.c: 7:     SSPCON 
      +                          = 0b00101000;
  2995     0C73  3028               	movlw	40
  2996     0C74  1283               	bcf	3,5	;RP0=0, select bank0
  2997     0C75  1303               	bcf	3,6	;RP1=0, select bank0
  2998     0C76  0094               	movwf	20	;volatile
  2999     0C77                     l1709:
  3000                           
  3001                           ;I2C.c: 8:     SSPCON2 = 0;
  3002     0C77  1683               	bsf	3,5	;RP0=1, select bank1
  3003     0C78  1303               	bcf	3,6	;RP1=0, select bank1
  3004     0C79  0191               	clrf	17	;volatile
  3005     0C7A                     l1711:
  3006                           
  3007                           ;I2C.c: 9:     SSPADD = (8000000/(4*c))-1;
  3008     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  3009     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  3010     0C7C  0855               	movf	I2C_Master_Init@c,w
  3011     0C7D  00D9               	movwf	??_I2C_Master_Init
  3012     0C7E  0856               	movf	I2C_Master_Init@c+1,w
  3013     0C7F  00DA               	movwf	??_I2C_Master_Init+1
  3014     0C80  0857               	movf	I2C_Master_Init@c+2,w
  3015     0C81  00DB               	movwf	??_I2C_Master_Init+2
  3016     0C82  0858               	movf	I2C_Master_Init@c+3,w
  3017     0C83  00DC               	movwf	??_I2C_Master_Init+3
  3018     0C84  3002               	movlw	2
  3019     0C85                     u865:
  3020     0C85  1003               	clrc
  3021     0C86  0DD9               	rlf	??_I2C_Master_Init,f
  3022     0C87  0DDA               	rlf	??_I2C_Master_Init+1,f
  3023     0C88  0DDB               	rlf	??_I2C_Master_Init+2,f
  3024     0C89  0DDC               	rlf	??_I2C_Master_Init+3,f
  3025     0C8A                     u860:
  3026     0C8A  3EFF               	addlw	-1
  3027     0C8B  1D03               	skipz
  3028     0C8C  2C85               	goto	u865
  3029     0C8D  085C               	movf	??_I2C_Master_Init+3,w
  3030     0C8E  00F5               	movwf	___lldiv@divisor+3
  3031     0C8F  085B               	movf	??_I2C_Master_Init+2,w
  3032     0C90  00F4               	movwf	___lldiv@divisor+2
  3033     0C91  085A               	movf	??_I2C_Master_Init+1,w
  3034     0C92  00F3               	movwf	___lldiv@divisor+1
  3035     0C93  0859               	movf	??_I2C_Master_Init,w
  3036     0C94  00F2               	movwf	___lldiv@divisor
  3037     0C95  3000               	movlw	0
  3038     0C96  00F9               	movwf	___lldiv@dividend+3
  3039     0C97  307A               	movlw	122
  3040     0C98  00F8               	movwf	___lldiv@dividend+2
  3041     0C99  3012               	movlw	18
  3042     0C9A  00F7               	movwf	___lldiv@dividend+1
  3043     0C9B  3000               	movlw	0
  3044     0C9C  00F6               	movwf	___lldiv@dividend
  3045     0C9D  120A  158A  2798  120A  158A  	fcall	___lldiv
  3046     0CA2  0872               	movf	?___lldiv,w
  3047     0CA3  3EFF               	addlw	255
  3048     0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  3049     0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  3050     0CA6  0093               	movwf	19	;volatile
  3051     0CA7                     l1713:
  3052                           
  3053                           ;I2C.c: 10:     SSPSTAT = 0;
  3054     0CA7  0194               	clrf	20	;volatile
  3055     0CA8                     l1715:
  3056                           
  3057                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  3058     0CA8  1587               	bsf	7,3	;volatile
  3059     0CA9                     l1717:
  3060                           
  3061                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  3062     0CA9  1607               	bsf	7,4	;volatile
  3063     0CAA                     l29:
  3064     0CAA  0008               	return
  3065     0CAB                     __end_of_I2C_Master_Init:
  3066                           
  3067                           	psect	text4
  3068     0F98                     __ptext4:	
  3069 ;; *************** function ___lldiv *****************
  3070 ;; Defined at:
  3071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  divisor         4    2[COMMON] unsigned long 
  3074 ;;  dividend        4    6[COMMON] unsigned long 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  quotient        4    0[BANK0 ] unsigned long 
  3077 ;;  counter         1    4[BANK0 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  4    2[COMMON] unsigned long 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         8       0       0       0       0
  3088 ;;      Locals:         0       5       0       0       0
  3089 ;;      Temps:          1       0       0       0       0
  3090 ;;      Totals:         9       5       0       0       0
  3091 ;;Total ram usage:       14 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_I2C_Master_Init
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101     0F98                     ___lldiv:	
  3102                           ;psect for function ___lldiv
  3103                           
  3104     0F98                     l1683:	
  3105                           ;incstack = 0
  3106                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3107                           
  3108     0F98  3000               	movlw	0
  3109     0F99  1283               	bcf	3,5	;RP0=0, select bank0
  3110     0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3111     0F9B  00D3               	movwf	___lldiv@quotient+3
  3112     0F9C  3000               	movlw	0
  3113     0F9D  00D2               	movwf	___lldiv@quotient+2
  3114     0F9E  3000               	movlw	0
  3115     0F9F  00D1               	movwf	___lldiv@quotient+1
  3116     0FA0  3000               	movlw	0
  3117     0FA1  00D0               	movwf	___lldiv@quotient
  3118     0FA2  0875               	movf	___lldiv@divisor+3,w
  3119     0FA3  0474               	iorwf	___lldiv@divisor+2,w
  3120     0FA4  0473               	iorwf	___lldiv@divisor+1,w
  3121     0FA5  0472               	iorwf	___lldiv@divisor,w
  3122     0FA6  1903               	skipnz
  3123     0FA7  2FA9               	goto	u791
  3124     0FA8  2FAA               	goto	u790
  3125     0FA9                     u791:
  3126     0FA9  2FF7               	goto	l1703
  3127     0FAA                     u790:
  3128     0FAA                     l1685:
  3129     0FAA  01D4               	clrf	___lldiv@counter
  3130     0FAB  0AD4               	incf	___lldiv@counter,f
  3131     0FAC  2FBA               	goto	l1689
  3132     0FAD                     l1687:
  3133     0FAD  3001               	movlw	1
  3134     0FAE  00FA               	movwf	??___lldiv
  3135     0FAF                     u805:
  3136     0FAF  1003               	clrc
  3137     0FB0  0DF2               	rlf	___lldiv@divisor,f
  3138     0FB1  0DF3               	rlf	___lldiv@divisor+1,f
  3139     0FB2  0DF4               	rlf	___lldiv@divisor+2,f
  3140     0FB3  0DF5               	rlf	___lldiv@divisor+3,f
  3141     0FB4  0BFA               	decfsz	??___lldiv,f
  3142     0FB5  2FAF               	goto	u805
  3143     0FB6  3001               	movlw	1
  3144     0FB7  00FA               	movwf	??___lldiv
  3145     0FB8  087A               	movf	??___lldiv,w
  3146     0FB9  07D4               	addwf	___lldiv@counter,f
  3147     0FBA                     l1689:
  3148     0FBA  1FF5               	btfss	___lldiv@divisor+3,7
  3149     0FBB  2FBD               	goto	u811
  3150     0FBC  2FBE               	goto	u810
  3151     0FBD                     u811:
  3152     0FBD  2FAD               	goto	l1687
  3153     0FBE                     u810:
  3154     0FBE                     l1691:
  3155     0FBE  3001               	movlw	1
  3156     0FBF  00FA               	movwf	??___lldiv
  3157     0FC0                     u825:
  3158     0FC0  1003               	clrc
  3159     0FC1  0DD0               	rlf	___lldiv@quotient,f
  3160     0FC2  0DD1               	rlf	___lldiv@quotient+1,f
  3161     0FC3  0DD2               	rlf	___lldiv@quotient+2,f
  3162     0FC4  0DD3               	rlf	___lldiv@quotient+3,f
  3163     0FC5  0BFA               	decfsz	??___lldiv,f
  3164     0FC6  2FC0               	goto	u825
  3165     0FC7                     l1693:
  3166     0FC7  0875               	movf	___lldiv@divisor+3,w
  3167     0FC8  0279               	subwf	___lldiv@dividend+3,w
  3168     0FC9  1D03               	skipz
  3169     0FCA  2FD5               	goto	u835
  3170     0FCB  0874               	movf	___lldiv@divisor+2,w
  3171     0FCC  0278               	subwf	___lldiv@dividend+2,w
  3172     0FCD  1D03               	skipz
  3173     0FCE  2FD5               	goto	u835
  3174     0FCF  0873               	movf	___lldiv@divisor+1,w
  3175     0FD0  0277               	subwf	___lldiv@dividend+1,w
  3176     0FD1  1D03               	skipz
  3177     0FD2  2FD5               	goto	u835
  3178     0FD3  0872               	movf	___lldiv@divisor,w
  3179     0FD4  0276               	subwf	___lldiv@dividend,w
  3180     0FD5                     u835:
  3181     0FD5  1C03               	skipc
  3182     0FD6  2FD8               	goto	u831
  3183     0FD7  2FD9               	goto	u830
  3184     0FD8                     u831:
  3185     0FD8  2FE8               	goto	l1699
  3186     0FD9                     u830:
  3187     0FD9                     l1695:
  3188     0FD9  0872               	movf	___lldiv@divisor,w
  3189     0FDA  02F6               	subwf	___lldiv@dividend,f
  3190     0FDB  0873               	movf	___lldiv@divisor+1,w
  3191     0FDC  1C03               	skipc
  3192     0FDD  0F73               	incfsz	___lldiv@divisor+1,w
  3193     0FDE  02F7               	subwf	___lldiv@dividend+1,f
  3194     0FDF  0874               	movf	___lldiv@divisor+2,w
  3195     0FE0  1C03               	skipc
  3196     0FE1  0F74               	incfsz	___lldiv@divisor+2,w
  3197     0FE2  02F8               	subwf	___lldiv@dividend+2,f
  3198     0FE3  0875               	movf	___lldiv@divisor+3,w
  3199     0FE4  1C03               	skipc
  3200     0FE5  0F75               	incfsz	___lldiv@divisor+3,w
  3201     0FE6  02F9               	subwf	___lldiv@dividend+3,f
  3202     0FE7                     l1697:
  3203     0FE7  1450               	bsf	___lldiv@quotient,0
  3204     0FE8                     l1699:
  3205     0FE8  3001               	movlw	1
  3206     0FE9                     u845:
  3207     0FE9  1003               	clrc
  3208     0FEA  0CF5               	rrf	___lldiv@divisor+3,f
  3209     0FEB  0CF4               	rrf	___lldiv@divisor+2,f
  3210     0FEC  0CF3               	rrf	___lldiv@divisor+1,f
  3211     0FED  0CF2               	rrf	___lldiv@divisor,f
  3212     0FEE  3EFF               	addlw	-1
  3213     0FEF  1D03               	skipz
  3214     0FF0  2FE9               	goto	u845
  3215     0FF1                     l1701:
  3216     0FF1  3001               	movlw	1
  3217     0FF2  02D4               	subwf	___lldiv@counter,f
  3218     0FF3  1D03               	btfss	3,2
  3219     0FF4  2FF6               	goto	u851
  3220     0FF5  2FF7               	goto	u850
  3221     0FF6                     u851:
  3222     0FF6  2FBE               	goto	l1691
  3223     0FF7                     u850:
  3224     0FF7                     l1703:
  3225     0FF7  0853               	movf	___lldiv@quotient+3,w
  3226     0FF8  00F5               	movwf	?___lldiv+3
  3227     0FF9  0852               	movf	___lldiv@quotient+2,w
  3228     0FFA  00F4               	movwf	?___lldiv+2
  3229     0FFB  0851               	movf	___lldiv@quotient+1,w
  3230     0FFC  00F3               	movwf	?___lldiv+1
  3231     0FFD  0850               	movf	___lldiv@quotient,w
  3232     0FFE  00F2               	movwf	?___lldiv
  3233     0FFF                     l471:
  3234     0FFF  0008               	return
  3235     1000                     __end_of___lldiv:
  3236                           
  3237                           	psect	text5
  3238     0DC1                     __ptext5:	
  3239 ;; *************** function _increYear *****************
  3240 ;; Defined at:
  3241 ;;		line 454 in file "Dig2postlab4_Master.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  b               2    2[COMMON] int 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  dec             2   10[COMMON] int 
  3246 ;;  uni             2    8[COMMON] int 
  3247 ;;  val             2    6[COMMON] int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2    2[COMMON] int 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         2       0       0       0       0
  3258 ;;      Locals:         6       0       0       0       0
  3259 ;;      Temps:          2       0       0       0       0
  3260 ;;      Totals:        10       0       0       0       0
  3261 ;;Total ram usage:       10 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271     0DC1                     _increYear:	
  3272                           ;psect for function _increYear
  3273                           
  3274     0DC1                     l1997:	
  3275                           ;incstack = 0
  3276                           ; Regs used in _increYear: [wreg+status,2+status,0]
  3277                           
  3278                           
  3279                           ;Dig2postlab4_Master.c: 455:     int dec = b>>4;
  3280     0DC1  0E72               	swapf	increYear@b,w
  3281     0DC2  390F               	andlw	15
  3282     0DC3  00FA               	movwf	increYear@dec
  3283     0DC4  0E73               	swapf	increYear@b+1,w
  3284     0DC5  39F0               	andlw	240
  3285     0DC6  04FA               	iorwf	increYear@dec,f
  3286     0DC7  0E73               	swapf	increYear@b+1,w
  3287     0DC8  390F               	andlw	15
  3288     0DC9  00FB               	movwf	increYear@dec+1
  3289     0DCA  30F0               	movlw	240
  3290     0DCB  1DFB               	btfss	increYear@dec+1,3
  3291     0DCC  3000               	movlw	0
  3292     0DCD  04FB               	iorwf	increYear@dec+1,f
  3293     0DCE                     l1999:
  3294                           
  3295                           ;Dig2postlab4_Master.c: 456:     int uni = 0b00001111 & b;
  3296     0DCE  300F               	movlw	15
  3297     0DCF  0572               	andwf	increYear@b,w
  3298     0DD0  00F8               	movwf	increYear@uni
  3299     0DD1  3000               	movlw	0
  3300     0DD2  0573               	andwf	increYear@b+1,w
  3301     0DD3  00F9               	movwf	increYear@uni+1
  3302     0DD4                     l2001:
  3303     0DD4                     l2003:
  3304                           
  3305                           ;Dig2postlab4_Master.c: 460:     if((uni+1)== 10){
  3306     0DD4  0878               	movf	increYear@uni,w
  3307     0DD5  3E01               	addlw	1
  3308     0DD6  00F4               	movwf	??_increYear
  3309     0DD7  0879               	movf	increYear@uni+1,w
  3310     0DD8  1803               	skipnc
  3311     0DD9  3E01               	addlw	1
  3312     0DDA  3E00               	addlw	0
  3313     0DDB  00F5               	movwf	??_increYear+1
  3314     0DDC  300A               	movlw	10
  3315     0DDD  0674               	xorwf	??_increYear,w
  3316     0DDE  0475               	iorwf	??_increYear+1,w
  3317     0DDF  1D03               	btfss	3,2
  3318     0DE0  2DE2               	goto	u1041
  3319     0DE1  2DE3               	goto	u1040
  3320     0DE2                     u1041:
  3321     0DE2  2DF5               	goto	l2013
  3322     0DE3                     u1040:
  3323     0DE3                     l2005:
  3324                           
  3325                           ;Dig2postlab4_Master.c: 461:         uni = 0;
  3326     0DE3  01F8               	clrf	increYear@uni
  3327     0DE4  01F9               	clrf	increYear@uni+1
  3328     0DE5                     l2007:
  3329                           
  3330                           ;Dig2postlab4_Master.c: 462:         dec++;
  3331     0DE5  3001               	movlw	1
  3332     0DE6  07FA               	addwf	increYear@dec,f
  3333     0DE7  1803               	skipnc
  3334     0DE8  0AFB               	incf	increYear@dec+1,f
  3335     0DE9  3000               	movlw	0
  3336     0DEA  07FB               	addwf	increYear@dec+1,f
  3337     0DEB                     l2009:
  3338                           
  3339                           ;Dig2postlab4_Master.c: 463:         if(dec == 10){
  3340     0DEB  300A               	movlw	10
  3341     0DEC  067A               	xorwf	increYear@dec,w
  3342     0DED  047B               	iorwf	increYear@dec+1,w
  3343     0DEE  1D03               	btfss	3,2
  3344     0DEF  2DF1               	goto	u1051
  3345     0DF0  2DF2               	goto	u1050
  3346     0DF1                     u1051:
  3347     0DF1  2DFB               	goto	l325
  3348     0DF2                     u1050:
  3349     0DF2                     l2011:
  3350                           
  3351                           ;Dig2postlab4_Master.c: 464:             dec = 0;
  3352     0DF2  01FA               	clrf	increYear@dec
  3353     0DF3  01FB               	clrf	increYear@dec+1
  3354     0DF4  2DFB               	goto	l325
  3355     0DF5                     l2013:
  3356                           
  3357                           ;Dig2postlab4_Master.c: 467:         uni++;
  3358     0DF5  3001               	movlw	1
  3359     0DF6  07F8               	addwf	increYear@uni,f
  3360     0DF7  1803               	skipnc
  3361     0DF8  0AF9               	incf	increYear@uni+1,f
  3362     0DF9  3000               	movlw	0
  3363     0DFA  07F9               	addwf	increYear@uni+1,f
  3364     0DFB                     l325:	
  3365                           ;Dig2postlab4_Master.c: 468:     }
  3366                           
  3367                           
  3368                           ;Dig2postlab4_Master.c: 470:     dec = (dec<<4) & 0b11110000;
  3369     0DFB  087B               	movf	increYear@dec+1,w
  3370     0DFC  00F5               	movwf	??_increYear+1
  3371     0DFD  087A               	movf	increYear@dec,w
  3372     0DFE  00F4               	movwf	??_increYear
  3373     0DFF  0EF4               	swapf	??_increYear,f
  3374     0E00  0EF5               	swapf	??_increYear+1,f
  3375     0E01  30F0               	movlw	240
  3376     0E02  05F5               	andwf	??_increYear+1,f
  3377     0E03  0874               	movf	??_increYear,w
  3378     0E04  390F               	andlw	15
  3379     0E05  04F5               	iorwf	??_increYear+1,f
  3380     0E06  30F0               	movlw	240
  3381     0E07  05F4               	andwf	??_increYear,f
  3382     0E08  30F0               	movlw	240
  3383     0E09  0574               	andwf	??_increYear,w
  3384     0E0A  00FA               	movwf	increYear@dec
  3385     0E0B  3000               	movlw	0
  3386     0E0C  0575               	andwf	??_increYear+1,w
  3387     0E0D  00FB               	movwf	increYear@dec+1
  3388                           
  3389                           ;Dig2postlab4_Master.c: 471:     val = dec | uni;
  3390     0E0E  0878               	movf	increYear@uni,w
  3391     0E0F  047A               	iorwf	increYear@dec,w
  3392     0E10  00F6               	movwf	increYear@val
  3393     0E11  0879               	movf	increYear@uni+1,w
  3394     0E12  047B               	iorwf	increYear@dec+1,w
  3395     0E13  00F7               	movwf	increYear@val+1
  3396                           
  3397                           ;Dig2postlab4_Master.c: 472:     return val;
  3398     0E14  0877               	movf	increYear@val+1,w
  3399     0E15  00F3               	movwf	?_increYear+1
  3400     0E16  0876               	movf	increYear@val,w
  3401     0E17  00F2               	movwf	?_increYear
  3402     0E18                     l326:
  3403     0E18  0008               	return
  3404     0E19                     __end_of_increYear:
  3405                           
  3406                           	psect	text6
  3407     0D69                     __ptext6:	
  3408 ;; *************** function _increSecMin *****************
  3409 ;; Defined at:
  3410 ;;		line 372 in file "Dig2postlab4_Master.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  b               2    2[COMMON] int 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  dec             2   10[COMMON] int 
  3415 ;;  uni             2    8[COMMON] int 
  3416 ;;  val             2    6[COMMON] int 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2    2[COMMON] int 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         2       0       0       0       0
  3427 ;;      Locals:         6       0       0       0       0
  3428 ;;      Temps:          2       0       0       0       0
  3429 ;;      Totals:        10       0       0       0       0
  3430 ;;Total ram usage:       10 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440     0D69                     _increSecMin:	
  3441                           ;psect for function _increSecMin
  3442                           
  3443     0D69                     l1889:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _increSecMin: [wreg+status,2+status,0]
  3446                           
  3447                           
  3448                           ;Dig2postlab4_Master.c: 373:     int dec = b>>4;
  3449     0D69  0E72               	swapf	increSecMin@b,w
  3450     0D6A  390F               	andlw	15
  3451     0D6B  00FA               	movwf	increSecMin@dec
  3452     0D6C  0E73               	swapf	increSecMin@b+1,w
  3453     0D6D  39F0               	andlw	240
  3454     0D6E  04FA               	iorwf	increSecMin@dec,f
  3455     0D6F  0E73               	swapf	increSecMin@b+1,w
  3456     0D70  390F               	andlw	15
  3457     0D71  00FB               	movwf	increSecMin@dec+1
  3458     0D72  30F0               	movlw	240
  3459     0D73  1DFB               	btfss	increSecMin@dec+1,3
  3460     0D74  3000               	movlw	0
  3461     0D75  04FB               	iorwf	increSecMin@dec+1,f
  3462     0D76                     l1891:
  3463                           
  3464                           ;Dig2postlab4_Master.c: 374:     int uni = 0b00001111 & b;
  3465     0D76  300F               	movlw	15
  3466     0D77  0572               	andwf	increSecMin@b,w
  3467     0D78  00F8               	movwf	increSecMin@uni
  3468     0D79  3000               	movlw	0
  3469     0D7A  0573               	andwf	increSecMin@b+1,w
  3470     0D7B  00F9               	movwf	increSecMin@uni+1
  3471     0D7C                     l1893:
  3472     0D7C                     l1895:
  3473                           
  3474                           ;Dig2postlab4_Master.c: 377:     if((uni+1)== 10){
  3475     0D7C  0878               	movf	increSecMin@uni,w
  3476     0D7D  3E01               	addlw	1
  3477     0D7E  00F4               	movwf	??_increSecMin
  3478     0D7F  0879               	movf	increSecMin@uni+1,w
  3479     0D80  1803               	skipnc
  3480     0D81  3E01               	addlw	1
  3481     0D82  3E00               	addlw	0
  3482     0D83  00F5               	movwf	??_increSecMin+1
  3483     0D84  300A               	movlw	10
  3484     0D85  0674               	xorwf	??_increSecMin,w
  3485     0D86  0475               	iorwf	??_increSecMin+1,w
  3486     0D87  1D03               	btfss	3,2
  3487     0D88  2D8A               	goto	u931
  3488     0D89  2D8B               	goto	u930
  3489     0D8A                     u931:
  3490     0D8A  2D9D               	goto	l1905
  3491     0D8B                     u930:
  3492     0D8B                     l1897:
  3493                           
  3494                           ;Dig2postlab4_Master.c: 378:         uni = 0;
  3495     0D8B  01F8               	clrf	increSecMin@uni
  3496     0D8C  01F9               	clrf	increSecMin@uni+1
  3497     0D8D                     l1899:
  3498                           
  3499                           ;Dig2postlab4_Master.c: 379:         dec++;
  3500     0D8D  3001               	movlw	1
  3501     0D8E  07FA               	addwf	increSecMin@dec,f
  3502     0D8F  1803               	skipnc
  3503     0D90  0AFB               	incf	increSecMin@dec+1,f
  3504     0D91  3000               	movlw	0
  3505     0D92  07FB               	addwf	increSecMin@dec+1,f
  3506     0D93                     l1901:
  3507                           
  3508                           ;Dig2postlab4_Master.c: 380:         if(dec == 6){
  3509     0D93  3006               	movlw	6
  3510     0D94  067A               	xorwf	increSecMin@dec,w
  3511     0D95  047B               	iorwf	increSecMin@dec+1,w
  3512     0D96  1D03               	btfss	3,2
  3513     0D97  2D99               	goto	u941
  3514     0D98  2D9A               	goto	u940
  3515     0D99                     u941:
  3516     0D99  2DA3               	goto	l301
  3517     0D9A                     u940:
  3518     0D9A                     l1903:
  3519                           
  3520                           ;Dig2postlab4_Master.c: 381:             dec = 0;
  3521     0D9A  01FA               	clrf	increSecMin@dec
  3522     0D9B  01FB               	clrf	increSecMin@dec+1
  3523     0D9C  2DA3               	goto	l301
  3524     0D9D                     l1905:
  3525                           
  3526                           ;Dig2postlab4_Master.c: 384:         uni++;
  3527     0D9D  3001               	movlw	1
  3528     0D9E  07F8               	addwf	increSecMin@uni,f
  3529     0D9F  1803               	skipnc
  3530     0DA0  0AF9               	incf	increSecMin@uni+1,f
  3531     0DA1  3000               	movlw	0
  3532     0DA2  07F9               	addwf	increSecMin@uni+1,f
  3533     0DA3                     l301:	
  3534                           ;Dig2postlab4_Master.c: 385:     }
  3535                           
  3536                           
  3537                           ;Dig2postlab4_Master.c: 387:     dec = (dec<<4) & 0b11110000;
  3538     0DA3  087B               	movf	increSecMin@dec+1,w
  3539     0DA4  00F5               	movwf	??_increSecMin+1
  3540     0DA5  087A               	movf	increSecMin@dec,w
  3541     0DA6  00F4               	movwf	??_increSecMin
  3542     0DA7  0EF4               	swapf	??_increSecMin,f
  3543     0DA8  0EF5               	swapf	??_increSecMin+1,f
  3544     0DA9  30F0               	movlw	240
  3545     0DAA  05F5               	andwf	??_increSecMin+1,f
  3546     0DAB  0874               	movf	??_increSecMin,w
  3547     0DAC  390F               	andlw	15
  3548     0DAD  04F5               	iorwf	??_increSecMin+1,f
  3549     0DAE  30F0               	movlw	240
  3550     0DAF  05F4               	andwf	??_increSecMin,f
  3551     0DB0  30F0               	movlw	240
  3552     0DB1  0574               	andwf	??_increSecMin,w
  3553     0DB2  00FA               	movwf	increSecMin@dec
  3554     0DB3  3000               	movlw	0
  3555     0DB4  0575               	andwf	??_increSecMin+1,w
  3556     0DB5  00FB               	movwf	increSecMin@dec+1
  3557                           
  3558                           ;Dig2postlab4_Master.c: 388:     val = dec | uni;
  3559     0DB6  0878               	movf	increSecMin@uni,w
  3560     0DB7  047A               	iorwf	increSecMin@dec,w
  3561     0DB8  00F6               	movwf	increSecMin@val
  3562     0DB9  0879               	movf	increSecMin@uni+1,w
  3563     0DBA  047B               	iorwf	increSecMin@dec+1,w
  3564     0DBB  00F7               	movwf	increSecMin@val+1
  3565                           
  3566                           ;Dig2postlab4_Master.c: 389:     return val;
  3567     0DBC  0877               	movf	increSecMin@val+1,w
  3568     0DBD  00F3               	movwf	?_increSecMin+1
  3569     0DBE  0876               	movf	increSecMin@val,w
  3570     0DBF  00F2               	movwf	?_increSecMin
  3571     0DC0                     l302:
  3572     0DC0  0008               	return
  3573     0DC1                     __end_of_increSecMin:
  3574                           
  3575                           	psect	text7
  3576     0ED3                     __ptext7:	
  3577 ;; *************** function _increMonth *****************
  3578 ;; Defined at:
  3579 ;;		line 433 in file "Dig2postlab4_Master.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  b               2    2[COMMON] int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  uni             2   10[COMMON] int 
  3584 ;;  dec             2    8[COMMON] int 
  3585 ;;  val             2    6[COMMON] int 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    2[COMMON] int 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         2       0       0       0       0
  3596 ;;      Locals:         6       0       0       0       0
  3597 ;;      Temps:          2       0       0       0       0
  3598 ;;      Totals:        10       0       0       0       0
  3599 ;;Total ram usage:       10 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609     0ED3                     _increMonth:	
  3610                           ;psect for function _increMonth
  3611                           
  3612     0ED3                     l1967:	
  3613                           ;incstack = 0
  3614                           ; Regs used in _increMonth: [wreg+status,2+status,0]
  3615                           
  3616                           
  3617                           ;Dig2postlab4_Master.c: 434:     int dec = b>>4;
  3618     0ED3  0E72               	swapf	increMonth@b,w
  3619     0ED4  390F               	andlw	15
  3620     0ED5  00F8               	movwf	increMonth@dec
  3621     0ED6  0E73               	swapf	increMonth@b+1,w
  3622     0ED7  39F0               	andlw	240
  3623     0ED8  04F8               	iorwf	increMonth@dec,f
  3624     0ED9  0E73               	swapf	increMonth@b+1,w
  3625     0EDA  390F               	andlw	15
  3626     0EDB  00F9               	movwf	increMonth@dec+1
  3627     0EDC  30F0               	movlw	240
  3628     0EDD  1DF9               	btfss	increMonth@dec+1,3
  3629     0EDE  3000               	movlw	0
  3630     0EDF  04F9               	iorwf	increMonth@dec+1,f
  3631     0EE0                     l1969:
  3632                           
  3633                           ;Dig2postlab4_Master.c: 435:     int uni = 0b00001111 & b;
  3634     0EE0  300F               	movlw	15
  3635     0EE1  0572               	andwf	increMonth@b,w
  3636     0EE2  00FA               	movwf	increMonth@uni
  3637     0EE3  3000               	movlw	0
  3638     0EE4  0573               	andwf	increMonth@b+1,w
  3639     0EE5  00FB               	movwf	increMonth@uni+1
  3640     0EE6                     l1971:
  3641     0EE6                     l1973:
  3642                           
  3643                           ;Dig2postlab4_Master.c: 439:     if((uni+1)== 10){
  3644     0EE6  087A               	movf	increMonth@uni,w
  3645     0EE7  3E01               	addlw	1
  3646     0EE8  00F4               	movwf	??_increMonth
  3647     0EE9  087B               	movf	increMonth@uni+1,w
  3648     0EEA  1803               	skipnc
  3649     0EEB  3E01               	addlw	1
  3650     0EEC  3E00               	addlw	0
  3651     0EED  00F5               	movwf	??_increMonth+1
  3652     0EEE  300A               	movlw	10
  3653     0EEF  0674               	xorwf	??_increMonth,w
  3654     0EF0  0475               	iorwf	??_increMonth+1,w
  3655     0EF1  1D03               	btfss	3,2
  3656     0EF2  2EF4               	goto	u1011
  3657     0EF3  2EF5               	goto	u1010
  3658     0EF4                     u1011:
  3659     0EF4  2EFE               	goto	l1979
  3660     0EF5                     u1010:
  3661     0EF5                     l1975:
  3662                           
  3663                           ;Dig2postlab4_Master.c: 440:         uni = 0;
  3664     0EF5  01FA               	clrf	increMonth@uni
  3665     0EF6  01FB               	clrf	increMonth@uni+1
  3666     0EF7                     l1977:
  3667                           
  3668                           ;Dig2postlab4_Master.c: 441:         dec++;
  3669     0EF7  3001               	movlw	1
  3670     0EF8  07F8               	addwf	increMonth@dec,f
  3671     0EF9  1803               	skipnc
  3672     0EFA  0AF9               	incf	increMonth@dec+1,f
  3673     0EFB  3000               	movlw	0
  3674     0EFC  07F9               	addwf	increMonth@dec+1,f
  3675                           
  3676                           ;Dig2postlab4_Master.c: 442:     }else{
  3677     0EFD  2F17               	goto	l1989
  3678     0EFE                     l1979:
  3679                           
  3680                           ;Dig2postlab4_Master.c: 443:         uni++;
  3681     0EFE  3001               	movlw	1
  3682     0EFF  07FA               	addwf	increMonth@uni,f
  3683     0F00  1803               	skipnc
  3684     0F01  0AFB               	incf	increMonth@uni+1,f
  3685     0F02  3000               	movlw	0
  3686     0F03  07FB               	addwf	increMonth@uni+1,f
  3687     0F04                     l1981:
  3688                           
  3689                           ;Dig2postlab4_Master.c: 444:         if(dec == 1 && uni == 3){
  3690     0F04  0378               	decf	increMonth@dec,w
  3691     0F05  0479               	iorwf	increMonth@dec+1,w
  3692     0F06  1D03               	btfss	3,2
  3693     0F07  2F09               	goto	u1021
  3694     0F08  2F0A               	goto	u1020
  3695     0F09                     u1021:
  3696     0F09  2F17               	goto	l1989
  3697     0F0A                     u1020:
  3698     0F0A                     l1983:
  3699     0F0A  3003               	movlw	3
  3700     0F0B  067A               	xorwf	increMonth@uni,w
  3701     0F0C  047B               	iorwf	increMonth@uni+1,w
  3702     0F0D  1D03               	btfss	3,2
  3703     0F0E  2F10               	goto	u1031
  3704     0F0F  2F11               	goto	u1030
  3705     0F10                     u1031:
  3706     0F10  2F17               	goto	l1989
  3707     0F11                     u1030:
  3708     0F11                     l1985:
  3709                           
  3710                           ;Dig2postlab4_Master.c: 445:             uni = 1;
  3711     0F11  3001               	movlw	1
  3712     0F12  00FA               	movwf	increMonth@uni
  3713     0F13  3000               	movlw	0
  3714     0F14  00FB               	movwf	increMonth@uni+1
  3715     0F15                     l1987:
  3716                           
  3717                           ;Dig2postlab4_Master.c: 446:             dec = 0;
  3718     0F15  01F8               	clrf	increMonth@dec
  3719     0F16  01F9               	clrf	increMonth@dec+1
  3720     0F17                     l1989:
  3721                           
  3722                           ;Dig2postlab4_Master.c: 450:     dec = (dec<<4) & 0b11110000;
  3723     0F17  0879               	movf	increMonth@dec+1,w
  3724     0F18  00F5               	movwf	??_increMonth+1
  3725     0F19  0878               	movf	increMonth@dec,w
  3726     0F1A  00F4               	movwf	??_increMonth
  3727     0F1B  0EF4               	swapf	??_increMonth,f
  3728     0F1C  0EF5               	swapf	??_increMonth+1,f
  3729     0F1D  30F0               	movlw	240
  3730     0F1E  05F5               	andwf	??_increMonth+1,f
  3731     0F1F  0874               	movf	??_increMonth,w
  3732     0F20  390F               	andlw	15
  3733     0F21  04F5               	iorwf	??_increMonth+1,f
  3734     0F22  30F0               	movlw	240
  3735     0F23  05F4               	andwf	??_increMonth,f
  3736     0F24  30F0               	movlw	240
  3737     0F25  0574               	andwf	??_increMonth,w
  3738     0F26  00F8               	movwf	increMonth@dec
  3739     0F27  3000               	movlw	0
  3740     0F28  0575               	andwf	??_increMonth+1,w
  3741     0F29  00F9               	movwf	increMonth@dec+1
  3742     0F2A                     l1991:
  3743                           
  3744                           ;Dig2postlab4_Master.c: 451:     val = dec | uni;
  3745     0F2A  087A               	movf	increMonth@uni,w
  3746     0F2B  0478               	iorwf	increMonth@dec,w
  3747     0F2C  00F6               	movwf	increMonth@val
  3748     0F2D  087B               	movf	increMonth@uni+1,w
  3749     0F2E  0479               	iorwf	increMonth@dec+1,w
  3750     0F2F  00F7               	movwf	increMonth@val+1
  3751     0F30                     l1993:
  3752                           
  3753                           ;Dig2postlab4_Master.c: 452:     return val;
  3754     0F30  0877               	movf	increMonth@val+1,w
  3755     0F31  00F3               	movwf	?_increMonth+1
  3756     0F32  0876               	movf	increMonth@val,w
  3757     0F33  00F2               	movwf	?_increMonth
  3758     0F34                     l320:
  3759     0F34  0008               	return
  3760     0F35                     __end_of_increMonth:
  3761                           
  3762                           	psect	text8
  3763     0E72                     __ptext8:	
  3764 ;; *************** function _increHour *****************
  3765 ;; Defined at:
  3766 ;;		line 391 in file "Dig2postlab4_Master.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  b               2    2[COMMON] int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  uni             2   10[COMMON] int 
  3771 ;;  dec             2    8[COMMON] int 
  3772 ;;  val             2    6[COMMON] int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2    2[COMMON] int 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         2       0       0       0       0
  3783 ;;      Locals:         6       0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0
  3785 ;;      Totals:        10       0       0       0       0
  3786 ;;Total ram usage:       10 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796     0E72                     _increHour:	
  3797                           ;psect for function _increHour
  3798                           
  3799     0E72                     l1909:	
  3800                           ;incstack = 0
  3801                           ; Regs used in _increHour: [wreg+status,2+status,0]
  3802                           
  3803                           
  3804                           ;Dig2postlab4_Master.c: 392:     int dec = b>>4;
  3805     0E72  0E72               	swapf	increHour@b,w
  3806     0E73  390F               	andlw	15
  3807     0E74  00F8               	movwf	increHour@dec
  3808     0E75  0E73               	swapf	increHour@b+1,w
  3809     0E76  39F0               	andlw	240
  3810     0E77  04F8               	iorwf	increHour@dec,f
  3811     0E78  0E73               	swapf	increHour@b+1,w
  3812     0E79  390F               	andlw	15
  3813     0E7A  00F9               	movwf	increHour@dec+1
  3814     0E7B  30F0               	movlw	240
  3815     0E7C  1DF9               	btfss	increHour@dec+1,3
  3816     0E7D  3000               	movlw	0
  3817     0E7E  04F9               	iorwf	increHour@dec+1,f
  3818     0E7F                     l1911:
  3819                           
  3820                           ;Dig2postlab4_Master.c: 393:     int uni = 0b00001111 & b;
  3821     0E7F  300F               	movlw	15
  3822     0E80  0572               	andwf	increHour@b,w
  3823     0E81  00FA               	movwf	increHour@uni
  3824     0E82  3000               	movlw	0
  3825     0E83  0573               	andwf	increHour@b+1,w
  3826     0E84  00FB               	movwf	increHour@uni+1
  3827     0E85                     l1913:
  3828     0E85                     l1915:
  3829                           
  3830                           ;Dig2postlab4_Master.c: 397:     if((uni+1)== 10){
  3831     0E85  087A               	movf	increHour@uni,w
  3832     0E86  3E01               	addlw	1
  3833     0E87  00F4               	movwf	??_increHour
  3834     0E88  087B               	movf	increHour@uni+1,w
  3835     0E89  1803               	skipnc
  3836     0E8A  3E01               	addlw	1
  3837     0E8B  3E00               	addlw	0
  3838     0E8C  00F5               	movwf	??_increHour+1
  3839     0E8D  300A               	movlw	10
  3840     0E8E  0674               	xorwf	??_increHour,w
  3841     0E8F  0475               	iorwf	??_increHour+1,w
  3842     0E90  1D03               	btfss	3,2
  3843     0E91  2E93               	goto	u951
  3844     0E92  2E94               	goto	u950
  3845     0E93                     u951:
  3846     0E93  2E9D               	goto	l1921
  3847     0E94                     u950:
  3848     0E94                     l1917:
  3849                           
  3850                           ;Dig2postlab4_Master.c: 398:         uni = 0;
  3851     0E94  01FA               	clrf	increHour@uni
  3852     0E95  01FB               	clrf	increHour@uni+1
  3853     0E96                     l1919:
  3854                           
  3855                           ;Dig2postlab4_Master.c: 399:         dec++;
  3856     0E96  3001               	movlw	1
  3857     0E97  07F8               	addwf	increHour@dec,f
  3858     0E98  1803               	skipnc
  3859     0E99  0AF9               	incf	increHour@dec+1,f
  3860     0E9A  3000               	movlw	0
  3861     0E9B  07F9               	addwf	increHour@dec+1,f
  3862                           
  3863                           ;Dig2postlab4_Master.c: 400:     }else{
  3864     0E9C  2EB5               	goto	l1929
  3865     0E9D                     l1921:
  3866                           
  3867                           ;Dig2postlab4_Master.c: 401:         uni++;
  3868     0E9D  3001               	movlw	1
  3869     0E9E  07FA               	addwf	increHour@uni,f
  3870     0E9F  1803               	skipnc
  3871     0EA0  0AFB               	incf	increHour@uni+1,f
  3872     0EA1  3000               	movlw	0
  3873     0EA2  07FB               	addwf	increHour@uni+1,f
  3874     0EA3                     l1923:
  3875                           
  3876                           ;Dig2postlab4_Master.c: 402:         if(dec == 2 && uni == 4){
  3877     0EA3  3002               	movlw	2
  3878     0EA4  0678               	xorwf	increHour@dec,w
  3879     0EA5  0479               	iorwf	increHour@dec+1,w
  3880     0EA6  1D03               	btfss	3,2
  3881     0EA7  2EA9               	goto	u961
  3882     0EA8  2EAA               	goto	u960
  3883     0EA9                     u961:
  3884     0EA9  2EB5               	goto	l1929
  3885     0EAA                     u960:
  3886     0EAA                     l1925:
  3887     0EAA  3004               	movlw	4
  3888     0EAB  067A               	xorwf	increHour@uni,w
  3889     0EAC  047B               	iorwf	increHour@uni+1,w
  3890     0EAD  1D03               	btfss	3,2
  3891     0EAE  2EB0               	goto	u971
  3892     0EAF  2EB1               	goto	u970
  3893     0EB0                     u971:
  3894     0EB0  2EB5               	goto	l1929
  3895     0EB1                     u970:
  3896     0EB1                     l1927:
  3897                           
  3898                           ;Dig2postlab4_Master.c: 403:             uni = 0;
  3899     0EB1  01FA               	clrf	increHour@uni
  3900     0EB2  01FB               	clrf	increHour@uni+1
  3901                           
  3902                           ;Dig2postlab4_Master.c: 404:             dec = 0;
  3903     0EB3  01F8               	clrf	increHour@dec
  3904     0EB4  01F9               	clrf	increHour@dec+1
  3905     0EB5                     l1929:
  3906                           
  3907                           ;Dig2postlab4_Master.c: 408:     dec = (dec<<4) & 0b11110000;
  3908     0EB5  0879               	movf	increHour@dec+1,w
  3909     0EB6  00F5               	movwf	??_increHour+1
  3910     0EB7  0878               	movf	increHour@dec,w
  3911     0EB8  00F4               	movwf	??_increHour
  3912     0EB9  0EF4               	swapf	??_increHour,f
  3913     0EBA  0EF5               	swapf	??_increHour+1,f
  3914     0EBB  30F0               	movlw	240
  3915     0EBC  05F5               	andwf	??_increHour+1,f
  3916     0EBD  0874               	movf	??_increHour,w
  3917     0EBE  390F               	andlw	15
  3918     0EBF  04F5               	iorwf	??_increHour+1,f
  3919     0EC0  30F0               	movlw	240
  3920     0EC1  05F4               	andwf	??_increHour,f
  3921     0EC2  30F0               	movlw	240
  3922     0EC3  0574               	andwf	??_increHour,w
  3923     0EC4  00F8               	movwf	increHour@dec
  3924     0EC5  3000               	movlw	0
  3925     0EC6  0575               	andwf	??_increHour+1,w
  3926     0EC7  00F9               	movwf	increHour@dec+1
  3927     0EC8                     l1931:
  3928                           
  3929                           ;Dig2postlab4_Master.c: 409:     val = dec | uni;
  3930     0EC8  087A               	movf	increHour@uni,w
  3931     0EC9  0478               	iorwf	increHour@dec,w
  3932     0ECA  00F6               	movwf	increHour@val
  3933     0ECB  087B               	movf	increHour@uni+1,w
  3934     0ECC  0479               	iorwf	increHour@dec+1,w
  3935     0ECD  00F7               	movwf	increHour@val+1
  3936     0ECE                     l1933:
  3937                           
  3938                           ;Dig2postlab4_Master.c: 410:     return val;
  3939     0ECE  0877               	movf	increHour@val+1,w
  3940     0ECF  00F3               	movwf	?_increHour+1
  3941     0ED0  0876               	movf	increHour@val,w
  3942     0ED1  00F2               	movwf	?_increHour
  3943     0ED2                     l308:
  3944     0ED2  0008               	return
  3945     0ED3                     __end_of_increHour:
  3946                           
  3947                           	psect	text9
  3948     0F35                     __ptext9:	
  3949 ;; *************** function _increDay *****************
  3950 ;; Defined at:
  3951 ;;		line 412 in file "Dig2postlab4_Master.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  b               2    2[COMMON] int 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  uni             2   10[COMMON] int 
  3956 ;;  dec             2    8[COMMON] int 
  3957 ;;  val             2    6[COMMON] int 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  2    2[COMMON] int 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         2       0       0       0       0
  3968 ;;      Locals:         6       0       0       0       0
  3969 ;;      Temps:          2       0       0       0       0
  3970 ;;      Totals:        10       0       0       0       0
  3971 ;;Total ram usage:       10 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_main
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981     0F35                     _increDay:	
  3982                           ;psect for function _increDay
  3983                           
  3984     0F35                     l1937:	
  3985                           ;incstack = 0
  3986                           ; Regs used in _increDay: [wreg+status,2+status,0]
  3987                           
  3988                           
  3989                           ;Dig2postlab4_Master.c: 413:     int dec = b>>4;
  3990     0F35  0E72               	swapf	increDay@b,w
  3991     0F36  390F               	andlw	15
  3992     0F37  00F8               	movwf	increDay@dec
  3993     0F38  0E73               	swapf	increDay@b+1,w
  3994     0F39  39F0               	andlw	240
  3995     0F3A  04F8               	iorwf	increDay@dec,f
  3996     0F3B  0E73               	swapf	increDay@b+1,w
  3997     0F3C  390F               	andlw	15
  3998     0F3D  00F9               	movwf	increDay@dec+1
  3999     0F3E  30F0               	movlw	240
  4000     0F3F  1DF9               	btfss	increDay@dec+1,3
  4001     0F40  3000               	movlw	0
  4002     0F41  04F9               	iorwf	increDay@dec+1,f
  4003     0F42                     l1939:
  4004                           
  4005                           ;Dig2postlab4_Master.c: 414:     int uni = 0b00001111 & b;
  4006     0F42  300F               	movlw	15
  4007     0F43  0572               	andwf	increDay@b,w
  4008     0F44  00FA               	movwf	increDay@uni
  4009     0F45  3000               	movlw	0
  4010     0F46  0573               	andwf	increDay@b+1,w
  4011     0F47  00FB               	movwf	increDay@uni+1
  4012     0F48                     l1941:
  4013     0F48                     l1943:
  4014                           
  4015                           ;Dig2postlab4_Master.c: 418:     if((uni+1)== 10){
  4016     0F48  087A               	movf	increDay@uni,w
  4017     0F49  3E01               	addlw	1
  4018     0F4A  00F4               	movwf	??_increDay
  4019     0F4B  087B               	movf	increDay@uni+1,w
  4020     0F4C  1803               	skipnc
  4021     0F4D  3E01               	addlw	1
  4022     0F4E  3E00               	addlw	0
  4023     0F4F  00F5               	movwf	??_increDay+1
  4024     0F50  300A               	movlw	10
  4025     0F51  0674               	xorwf	??_increDay,w
  4026     0F52  0475               	iorwf	??_increDay+1,w
  4027     0F53  1D03               	btfss	3,2
  4028     0F54  2F56               	goto	u981
  4029     0F55  2F57               	goto	u980
  4030     0F56                     u981:
  4031     0F56  2F60               	goto	l1949
  4032     0F57                     u980:
  4033     0F57                     l1945:
  4034                           
  4035                           ;Dig2postlab4_Master.c: 419:         uni = 0;
  4036     0F57  01FA               	clrf	increDay@uni
  4037     0F58  01FB               	clrf	increDay@uni+1
  4038     0F59                     l1947:
  4039                           
  4040                           ;Dig2postlab4_Master.c: 420:         dec++;
  4041     0F59  3001               	movlw	1
  4042     0F5A  07F8               	addwf	increDay@dec,f
  4043     0F5B  1803               	skipnc
  4044     0F5C  0AF9               	incf	increDay@dec+1,f
  4045     0F5D  3000               	movlw	0
  4046     0F5E  07F9               	addwf	increDay@dec+1,f
  4047                           
  4048                           ;Dig2postlab4_Master.c: 421:     }else{
  4049     0F5F  2F7A               	goto	l1959
  4050     0F60                     l1949:
  4051                           
  4052                           ;Dig2postlab4_Master.c: 422:         uni++;
  4053     0F60  3001               	movlw	1
  4054     0F61  07FA               	addwf	increDay@uni,f
  4055     0F62  1803               	skipnc
  4056     0F63  0AFB               	incf	increDay@uni+1,f
  4057     0F64  3000               	movlw	0
  4058     0F65  07FB               	addwf	increDay@uni+1,f
  4059     0F66                     l1951:
  4060                           
  4061                           ;Dig2postlab4_Master.c: 423:         if(dec == 3 && uni == 2){
  4062     0F66  3003               	movlw	3
  4063     0F67  0678               	xorwf	increDay@dec,w
  4064     0F68  0479               	iorwf	increDay@dec+1,w
  4065     0F69  1D03               	btfss	3,2
  4066     0F6A  2F6C               	goto	u991
  4067     0F6B  2F6D               	goto	u990
  4068     0F6C                     u991:
  4069     0F6C  2F7A               	goto	l1959
  4070     0F6D                     u990:
  4071     0F6D                     l1953:
  4072     0F6D  3002               	movlw	2
  4073     0F6E  067A               	xorwf	increDay@uni,w
  4074     0F6F  047B               	iorwf	increDay@uni+1,w
  4075     0F70  1D03               	btfss	3,2
  4076     0F71  2F73               	goto	u1001
  4077     0F72  2F74               	goto	u1000
  4078     0F73                     u1001:
  4079     0F73  2F7A               	goto	l1959
  4080     0F74                     u1000:
  4081     0F74                     l1955:
  4082                           
  4083                           ;Dig2postlab4_Master.c: 424:             uni = 1;
  4084     0F74  3001               	movlw	1
  4085     0F75  00FA               	movwf	increDay@uni
  4086     0F76  3000               	movlw	0
  4087     0F77  00FB               	movwf	increDay@uni+1
  4088     0F78                     l1957:
  4089                           
  4090                           ;Dig2postlab4_Master.c: 425:             dec = 0;
  4091     0F78  01F8               	clrf	increDay@dec
  4092     0F79  01F9               	clrf	increDay@dec+1
  4093     0F7A                     l1959:
  4094                           
  4095                           ;Dig2postlab4_Master.c: 429:     dec = (dec<<4) & 0b11110000;
  4096     0F7A  0879               	movf	increDay@dec+1,w
  4097     0F7B  00F5               	movwf	??_increDay+1
  4098     0F7C  0878               	movf	increDay@dec,w
  4099     0F7D  00F4               	movwf	??_increDay
  4100     0F7E  0EF4               	swapf	??_increDay,f
  4101     0F7F  0EF5               	swapf	??_increDay+1,f
  4102     0F80  30F0               	movlw	240
  4103     0F81  05F5               	andwf	??_increDay+1,f
  4104     0F82  0874               	movf	??_increDay,w
  4105     0F83  390F               	andlw	15
  4106     0F84  04F5               	iorwf	??_increDay+1,f
  4107     0F85  30F0               	movlw	240
  4108     0F86  05F4               	andwf	??_increDay,f
  4109     0F87  30F0               	movlw	240
  4110     0F88  0574               	andwf	??_increDay,w
  4111     0F89  00F8               	movwf	increDay@dec
  4112     0F8A  3000               	movlw	0
  4113     0F8B  0575               	andwf	??_increDay+1,w
  4114     0F8C  00F9               	movwf	increDay@dec+1
  4115     0F8D                     l1961:
  4116                           
  4117                           ;Dig2postlab4_Master.c: 430:     val = dec | uni;
  4118     0F8D  087A               	movf	increDay@uni,w
  4119     0F8E  0478               	iorwf	increDay@dec,w
  4120     0F8F  00F6               	movwf	increDay@val
  4121     0F90  087B               	movf	increDay@uni+1,w
  4122     0F91  0479               	iorwf	increDay@dec+1,w
  4123     0F92  00F7               	movwf	increDay@val+1
  4124     0F93                     l1963:
  4125                           
  4126                           ;Dig2postlab4_Master.c: 431:     return val;
  4127     0F93  0877               	movf	increDay@val+1,w
  4128     0F94  00F3               	movwf	?_increDay+1
  4129     0F95  0876               	movf	increDay@val,w
  4130     0F96  00F2               	movwf	?_increDay
  4131     0F97                     l314:
  4132     0F97  0008               	return
  4133     0F98                     __end_of_increDay:
  4134                           
  4135                           	psect	text10
  4136     0E19                     __ptext10:	
  4137 ;; *************** function ___awmod *****************
  4138 ;; Defined at:
  4139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  divisor         2    2[COMMON] int 
  4142 ;;  dividend        2    4[COMMON] int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  sign            1    8[COMMON] unsigned char 
  4145 ;;  counter         1    7[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2    2[COMMON] int 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         4       0       0       0       0
  4156 ;;      Locals:         2       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0
  4158 ;;      Totals:         7       0       0       0       0
  4159 ;;Total ram usage:        7 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169     0E19                     ___awmod:	
  4170                           ;psect for function ___awmod
  4171                           
  4172     0E19                     l2111:	
  4173                           ;incstack = 0
  4174                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4175                           
  4176     0E19  01F8               	clrf	___awmod@sign
  4177     0E1A                     l2113:
  4178     0E1A  1FF5               	btfss	___awmod@dividend+1,7
  4179     0E1B  2E1D               	goto	u1161
  4180     0E1C  2E1E               	goto	u1160
  4181     0E1D                     u1161:
  4182     0E1D  2E25               	goto	l2119
  4183     0E1E                     u1160:
  4184     0E1E                     l2115:
  4185     0E1E  09F4               	comf	___awmod@dividend,f
  4186     0E1F  09F5               	comf	___awmod@dividend+1,f
  4187     0E20  0AF4               	incf	___awmod@dividend,f
  4188     0E21  1903               	skipnz
  4189     0E22  0AF5               	incf	___awmod@dividend+1,f
  4190     0E23                     l2117:
  4191     0E23  01F8               	clrf	___awmod@sign
  4192     0E24  0AF8               	incf	___awmod@sign,f
  4193     0E25                     l2119:
  4194     0E25  1FF3               	btfss	___awmod@divisor+1,7
  4195     0E26  2E28               	goto	u1171
  4196     0E27  2E29               	goto	u1170
  4197     0E28                     u1171:
  4198     0E28  2E2E               	goto	l2123
  4199     0E29                     u1170:
  4200     0E29                     l2121:
  4201     0E29  09F2               	comf	___awmod@divisor,f
  4202     0E2A  09F3               	comf	___awmod@divisor+1,f
  4203     0E2B  0AF2               	incf	___awmod@divisor,f
  4204     0E2C  1903               	skipnz
  4205     0E2D  0AF3               	incf	___awmod@divisor+1,f
  4206     0E2E                     l2123:
  4207     0E2E  0872               	movf	___awmod@divisor,w
  4208     0E2F  0473               	iorwf	___awmod@divisor+1,w
  4209     0E30  1903               	btfsc	3,2
  4210     0E31  2E33               	goto	u1181
  4211     0E32  2E34               	goto	u1180
  4212     0E33                     u1181:
  4213     0E33  2E63               	goto	l2141
  4214     0E34                     u1180:
  4215     0E34                     l2125:
  4216     0E34  01F7               	clrf	___awmod@counter
  4217     0E35  0AF7               	incf	___awmod@counter,f
  4218     0E36  2E42               	goto	l2131
  4219     0E37                     l2127:
  4220     0E37  3001               	movlw	1
  4221     0E38                     u1195:
  4222     0E38  1003               	clrc
  4223     0E39  0DF2               	rlf	___awmod@divisor,f
  4224     0E3A  0DF3               	rlf	___awmod@divisor+1,f
  4225     0E3B  3EFF               	addlw	-1
  4226     0E3C  1D03               	skipz
  4227     0E3D  2E38               	goto	u1195
  4228     0E3E                     l2129:
  4229     0E3E  3001               	movlw	1
  4230     0E3F  00F6               	movwf	??___awmod
  4231     0E40  0876               	movf	??___awmod,w
  4232     0E41  07F7               	addwf	___awmod@counter,f
  4233     0E42                     l2131:
  4234     0E42  1FF3               	btfss	___awmod@divisor+1,7
  4235     0E43  2E45               	goto	u1201
  4236     0E44  2E46               	goto	u1200
  4237     0E45                     u1201:
  4238     0E45  2E37               	goto	l2127
  4239     0E46                     u1200:
  4240     0E46                     l2133:
  4241     0E46  0873               	movf	___awmod@divisor+1,w
  4242     0E47  0275               	subwf	___awmod@dividend+1,w
  4243     0E48  1D03               	skipz
  4244     0E49  2E4C               	goto	u1215
  4245     0E4A  0872               	movf	___awmod@divisor,w
  4246     0E4B  0274               	subwf	___awmod@dividend,w
  4247     0E4C                     u1215:
  4248     0E4C  1C03               	skipc
  4249     0E4D  2E4F               	goto	u1211
  4250     0E4E  2E50               	goto	u1210
  4251     0E4F                     u1211:
  4252     0E4F  2E56               	goto	l2137
  4253     0E50                     u1210:
  4254     0E50                     l2135:
  4255     0E50  0872               	movf	___awmod@divisor,w
  4256     0E51  02F4               	subwf	___awmod@dividend,f
  4257     0E52  0873               	movf	___awmod@divisor+1,w
  4258     0E53  1C03               	skipc
  4259     0E54  03F5               	decf	___awmod@dividend+1,f
  4260     0E55  02F5               	subwf	___awmod@dividend+1,f
  4261     0E56                     l2137:
  4262     0E56  3001               	movlw	1
  4263     0E57                     u1225:
  4264     0E57  1003               	clrc
  4265     0E58  0CF3               	rrf	___awmod@divisor+1,f
  4266     0E59  0CF2               	rrf	___awmod@divisor,f
  4267     0E5A  3EFF               	addlw	-1
  4268     0E5B  1D03               	skipz
  4269     0E5C  2E57               	goto	u1225
  4270     0E5D                     l2139:
  4271     0E5D  3001               	movlw	1
  4272     0E5E  02F7               	subwf	___awmod@counter,f
  4273     0E5F  1D03               	btfss	3,2
  4274     0E60  2E62               	goto	u1231
  4275     0E61  2E63               	goto	u1230
  4276     0E62                     u1231:
  4277     0E62  2E46               	goto	l2133
  4278     0E63                     u1230:
  4279     0E63                     l2141:
  4280     0E63  0878               	movf	___awmod@sign,w
  4281     0E64  1903               	btfsc	3,2
  4282     0E65  2E67               	goto	u1241
  4283     0E66  2E68               	goto	u1240
  4284     0E67                     u1241:
  4285     0E67  2E6D               	goto	l2145
  4286     0E68                     u1240:
  4287     0E68                     l2143:
  4288     0E68  09F4               	comf	___awmod@dividend,f
  4289     0E69  09F5               	comf	___awmod@dividend+1,f
  4290     0E6A  0AF4               	incf	___awmod@dividend,f
  4291     0E6B  1903               	skipnz
  4292     0E6C  0AF5               	incf	___awmod@dividend+1,f
  4293     0E6D                     l2145:
  4294     0E6D  0875               	movf	___awmod@dividend+1,w
  4295     0E6E  00F3               	movwf	?___awmod+1
  4296     0E6F  0874               	movf	___awmod@dividend,w
  4297     0E70  00F2               	movwf	?___awmod
  4298     0E71                     l601:
  4299     0E71  0008               	return
  4300     0E72                     __end_of___awmod:
  4301                           
  4302                           	psect	text11
  4303     0778                     __ptext11:	
  4304 ;; *************** function ___awdiv *****************
  4305 ;; Defined at:
  4306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  divisor         2    0[BANK0 ] int 
  4309 ;;  dividend        2    2[BANK0 ] int 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  quotient        2    6[BANK0 ] int 
  4312 ;;  sign            1    5[BANK0 ] unsigned char 
  4313 ;;  counter         1    4[BANK0 ] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2    0[BANK0 ] int 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       4       0       0       0
  4324 ;;      Locals:         0       4       0       0       0
  4325 ;;      Temps:          1       0       0       0       0
  4326 ;;      Totals:         1       8       0       0       0
  4327 ;;Total ram usage:        9 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337     0778                     ___awdiv:	
  4338                           ;psect for function ___awdiv
  4339                           
  4340     0778                     l2067:	
  4341                           ;incstack = 0
  4342                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4343                           
  4344     0778  1283               	bcf	3,5	;RP0=0, select bank0
  4345     0779  1303               	bcf	3,6	;RP1=0, select bank0
  4346     077A  01D5               	clrf	___awdiv@sign
  4347     077B                     l2069:
  4348     077B  1FD1               	btfss	___awdiv@divisor+1,7
  4349     077C  2F7E               	goto	u1061
  4350     077D  2F7F               	goto	u1060
  4351     077E                     u1061:
  4352     077E  2F86               	goto	l2075
  4353     077F                     u1060:
  4354     077F                     l2071:
  4355     077F  09D0               	comf	___awdiv@divisor,f
  4356     0780  09D1               	comf	___awdiv@divisor+1,f
  4357     0781  0AD0               	incf	___awdiv@divisor,f
  4358     0782  1903               	skipnz
  4359     0783  0AD1               	incf	___awdiv@divisor+1,f
  4360     0784                     l2073:
  4361     0784  01D5               	clrf	___awdiv@sign
  4362     0785  0AD5               	incf	___awdiv@sign,f
  4363     0786                     l2075:
  4364     0786  1FD3               	btfss	___awdiv@dividend+1,7
  4365     0787  2F89               	goto	u1071
  4366     0788  2F8A               	goto	u1070
  4367     0789                     u1071:
  4368     0789  2F93               	goto	l2081
  4369     078A                     u1070:
  4370     078A                     l2077:
  4371     078A  09D2               	comf	___awdiv@dividend,f
  4372     078B  09D3               	comf	___awdiv@dividend+1,f
  4373     078C  0AD2               	incf	___awdiv@dividend,f
  4374     078D  1903               	skipnz
  4375     078E  0AD3               	incf	___awdiv@dividend+1,f
  4376     078F                     l2079:
  4377     078F  3001               	movlw	1
  4378     0790  00F9               	movwf	??___awdiv
  4379     0791  0879               	movf	??___awdiv,w
  4380     0792  06D5               	xorwf	___awdiv@sign,f
  4381     0793                     l2081:
  4382     0793  01D6               	clrf	___awdiv@quotient
  4383     0794  01D7               	clrf	___awdiv@quotient+1
  4384     0795                     l2083:
  4385     0795  0850               	movf	___awdiv@divisor,w
  4386     0796  0451               	iorwf	___awdiv@divisor+1,w
  4387     0797  1903               	btfsc	3,2
  4388     0798  2F9A               	goto	u1081
  4389     0799  2F9B               	goto	u1080
  4390     079A                     u1081:
  4391     079A  2FD2               	goto	l2103
  4392     079B                     u1080:
  4393     079B                     l2085:
  4394     079B  01D4               	clrf	___awdiv@counter
  4395     079C  0AD4               	incf	___awdiv@counter,f
  4396     079D  2FA9               	goto	l2091
  4397     079E                     l2087:
  4398     079E  3001               	movlw	1
  4399     079F                     u1095:
  4400     079F  1003               	clrc
  4401     07A0  0DD0               	rlf	___awdiv@divisor,f
  4402     07A1  0DD1               	rlf	___awdiv@divisor+1,f
  4403     07A2  3EFF               	addlw	-1
  4404     07A3  1D03               	skipz
  4405     07A4  2F9F               	goto	u1095
  4406     07A5                     l2089:
  4407     07A5  3001               	movlw	1
  4408     07A6  00F9               	movwf	??___awdiv
  4409     07A7  0879               	movf	??___awdiv,w
  4410     07A8  07D4               	addwf	___awdiv@counter,f
  4411     07A9                     l2091:
  4412     07A9  1FD1               	btfss	___awdiv@divisor+1,7
  4413     07AA  2FAC               	goto	u1101
  4414     07AB  2FAD               	goto	u1100
  4415     07AC                     u1101:
  4416     07AC  2F9E               	goto	l2087
  4417     07AD                     u1100:
  4418     07AD                     l2093:
  4419     07AD  3001               	movlw	1
  4420     07AE                     u1115:
  4421     07AE  1003               	clrc
  4422     07AF  0DD6               	rlf	___awdiv@quotient,f
  4423     07B0  0DD7               	rlf	___awdiv@quotient+1,f
  4424     07B1  3EFF               	addlw	-1
  4425     07B2  1D03               	skipz
  4426     07B3  2FAE               	goto	u1115
  4427     07B4  0851               	movf	___awdiv@divisor+1,w
  4428     07B5  0253               	subwf	___awdiv@dividend+1,w
  4429     07B6  1D03               	skipz
  4430     07B7  2FBA               	goto	u1125
  4431     07B8  0850               	movf	___awdiv@divisor,w
  4432     07B9  0252               	subwf	___awdiv@dividend,w
  4433     07BA                     u1125:
  4434     07BA  1C03               	skipc
  4435     07BB  2FBD               	goto	u1121
  4436     07BC  2FBE               	goto	u1120
  4437     07BD                     u1121:
  4438     07BD  2FC5               	goto	l2099
  4439     07BE                     u1120:
  4440     07BE                     l2095:
  4441     07BE  0850               	movf	___awdiv@divisor,w
  4442     07BF  02D2               	subwf	___awdiv@dividend,f
  4443     07C0  0851               	movf	___awdiv@divisor+1,w
  4444     07C1  1C03               	skipc
  4445     07C2  03D3               	decf	___awdiv@dividend+1,f
  4446     07C3  02D3               	subwf	___awdiv@dividend+1,f
  4447     07C4                     l2097:
  4448     07C4  1456               	bsf	___awdiv@quotient,0
  4449     07C5                     l2099:
  4450     07C5  3001               	movlw	1
  4451     07C6                     u1135:
  4452     07C6  1003               	clrc
  4453     07C7  0CD1               	rrf	___awdiv@divisor+1,f
  4454     07C8  0CD0               	rrf	___awdiv@divisor,f
  4455     07C9  3EFF               	addlw	-1
  4456     07CA  1D03               	skipz
  4457     07CB  2FC6               	goto	u1135
  4458     07CC                     l2101:
  4459     07CC  3001               	movlw	1
  4460     07CD  02D4               	subwf	___awdiv@counter,f
  4461     07CE  1D03               	btfss	3,2
  4462     07CF  2FD1               	goto	u1141
  4463     07D0  2FD2               	goto	u1140
  4464     07D1                     u1141:
  4465     07D1  2FAD               	goto	l2093
  4466     07D2                     u1140:
  4467     07D2                     l2103:
  4468     07D2  0855               	movf	___awdiv@sign,w
  4469     07D3  1903               	btfsc	3,2
  4470     07D4  2FD6               	goto	u1151
  4471     07D5  2FD7               	goto	u1150
  4472     07D6                     u1151:
  4473     07D6  2FDC               	goto	l2107
  4474     07D7                     u1150:
  4475     07D7                     l2105:
  4476     07D7  09D6               	comf	___awdiv@quotient,f
  4477     07D8  09D7               	comf	___awdiv@quotient+1,f
  4478     07D9  0AD6               	incf	___awdiv@quotient,f
  4479     07DA  1903               	skipnz
  4480     07DB  0AD7               	incf	___awdiv@quotient+1,f
  4481     07DC                     l2107:
  4482     07DC  0857               	movf	___awdiv@quotient+1,w
  4483     07DD  00D1               	movwf	?___awdiv+1
  4484     07DE  0856               	movf	___awdiv@quotient,w
  4485     07DF  00D0               	movwf	?___awdiv
  4486     07E0                     l588:
  4487     07E0  0008               	return
  4488     07E1                     __end_of___awdiv:
  4489                           
  4490                           	psect	text12
  4491     0CAB                     __ptext12:	
  4492 ;; *************** function _NumtoChar *****************
  4493 ;; Defined at:
  4494 ;;		line 348 in file "Dig2postlab4_Master.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  a               2    2[COMMON] int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         2       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0
  4511 ;;      Totals:         2       0       0       0       0
  4512 ;;Total ram usage:        2 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522     0CAB                     _NumtoChar:	
  4523                           ;psect for function _NumtoChar
  4524                           
  4525     0CAB                     l2017:	
  4526                           ;incstack = 0
  4527                           ; Regs used in _NumtoChar: [wreg-fsr0h+status,2+status,0]
  4528                           
  4529                           
  4530                           ;Dig2postlab4_Master.c: 349:     switch(a){
  4531     0CAB  2CC0               	goto	l2061
  4532     0CAC                     l2019:
  4533                           
  4534                           ;Dig2postlab4_Master.c: 351:             return '0';
  4535     0CAC  3030               	movlw	48
  4536     0CAD  2CE5               	goto	l286
  4537     0CAE                     l2023:
  4538                           
  4539                           ;Dig2postlab4_Master.c: 353:             return '1';
  4540     0CAE  3031               	movlw	49
  4541     0CAF  2CE5               	goto	l286
  4542     0CB0                     l2027:
  4543                           
  4544                           ;Dig2postlab4_Master.c: 355:             return '2';
  4545     0CB0  3032               	movlw	50
  4546     0CB1  2CE5               	goto	l286
  4547     0CB2                     l2031:
  4548                           
  4549                           ;Dig2postlab4_Master.c: 357:             return '3';
  4550     0CB2  3033               	movlw	51
  4551     0CB3  2CE5               	goto	l286
  4552     0CB4                     l2035:
  4553                           
  4554                           ;Dig2postlab4_Master.c: 359:             return '4';
  4555     0CB4  3034               	movlw	52
  4556     0CB5  2CE5               	goto	l286
  4557     0CB6                     l2039:
  4558                           
  4559                           ;Dig2postlab4_Master.c: 361:             return '5';
  4560     0CB6  3035               	movlw	53
  4561     0CB7  2CE5               	goto	l286
  4562     0CB8                     l2043:
  4563                           
  4564                           ;Dig2postlab4_Master.c: 363:             return '6';
  4565     0CB8  3036               	movlw	54
  4566     0CB9  2CE5               	goto	l286
  4567     0CBA                     l2047:
  4568                           
  4569                           ;Dig2postlab4_Master.c: 365:             return '7';
  4570     0CBA  3037               	movlw	55
  4571     0CBB  2CE5               	goto	l286
  4572     0CBC                     l2051:
  4573                           
  4574                           ;Dig2postlab4_Master.c: 367:             return '8';
  4575     0CBC  3038               	movlw	56
  4576     0CBD  2CE5               	goto	l286
  4577     0CBE                     l2055:
  4578                           
  4579                           ;Dig2postlab4_Master.c: 369:             return '9';
  4580     0CBE  3039               	movlw	57
  4581     0CBF  2CE5               	goto	l286
  4582     0CC0                     l2061:
  4583                           
  4584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4585                           ; Switch size 1, requested type "simple"
  4586                           ; Number of cases is 1, Range of values is 0 to 0
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte            4     3 (average)
  4590                           ; direct_byte           11     8 (fixed)
  4591                           ; jumptable            260     6 (fixed)
  4592                           ;	Chosen strategy is simple_byte
  4593     0CC0  0873               	movf	NumtoChar@a+1,w
  4594     0CC1  3A00               	xorlw	0	; case 0
  4595     0CC2  1903               	skipnz
  4596     0CC3  2CC5               	goto	l2379
  4597     0CC4  2CE5               	goto	l286
  4598     0CC5                     l2379:
  4599                           
  4600                           ; Switch size 1, requested type "simple"
  4601                           ; Number of cases is 10, Range of values is 0 to 9
  4602                           ; switch strategies available:
  4603                           ; Name         Instructions Cycles
  4604                           ; simple_byte           31    16 (average)
  4605                           ; direct_byte           38     8 (fixed)
  4606                           ; jumptable            260     6 (fixed)
  4607                           ;	Chosen strategy is simple_byte
  4608     0CC5  0872               	movf	NumtoChar@a,w
  4609     0CC6  3A00               	xorlw	0	; case 0
  4610     0CC7  1903               	skipnz
  4611     0CC8  2CAC               	goto	l2019
  4612     0CC9  3A01               	xorlw	1	; case 1
  4613     0CCA  1903               	skipnz
  4614     0CCB  2CAE               	goto	l2023
  4615     0CCC  3A03               	xorlw	3	; case 2
  4616     0CCD  1903               	skipnz
  4617     0CCE  2CB0               	goto	l2027
  4618     0CCF  3A01               	xorlw	1	; case 3
  4619     0CD0  1903               	skipnz
  4620     0CD1  2CB2               	goto	l2031
  4621     0CD2  3A07               	xorlw	7	; case 4
  4622     0CD3  1903               	skipnz
  4623     0CD4  2CB4               	goto	l2035
  4624     0CD5  3A01               	xorlw	1	; case 5
  4625     0CD6  1903               	skipnz
  4626     0CD7  2CB6               	goto	l2039
  4627     0CD8  3A03               	xorlw	3	; case 6
  4628     0CD9  1903               	skipnz
  4629     0CDA  2CB8               	goto	l2043
  4630     0CDB  3A01               	xorlw	1	; case 7
  4631     0CDC  1903               	skipnz
  4632     0CDD  2CBA               	goto	l2047
  4633     0CDE  3A0F               	xorlw	15	; case 8
  4634     0CDF  1903               	skipnz
  4635     0CE0  2CBC               	goto	l2051
  4636     0CE1  3A01               	xorlw	1	; case 9
  4637     0CE2  1903               	skipnz
  4638     0CE3  2CBE               	goto	l2055
  4639     0CE4  2CE5               	goto	l286
  4640     0CE5                     l286:
  4641     0CE5  0008               	return
  4642     0CE6                     __end_of_NumtoChar:
  4643                           
  4644                           	psect	text13
  4645     0BC6                     __ptext13:	
  4646 ;; *************** function _Lcd_Write_String *****************
  4647 ;; Defined at:
  4648 ;;		line 91 in file "LCD8bits.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  a               1    wreg     PTR unsigned char 
  4651 ;;		 -> STR_1(6), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  a               1    7[COMMON] PTR unsigned char 
  4654 ;;		 -> STR_1(6), 
  4655 ;;  i               2    5[COMMON] int 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4665 ;;      Params:         0       0       0       0       0
  4666 ;;      Locals:         3       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0
  4668 ;;      Totals:         3       0       0       0       0
  4669 ;;Total ram usage:        3 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 3
  4672 ;; This function calls:
  4673 ;;		_Lcd_Write_Char
  4674 ;; This function is called by:
  4675 ;;		_main
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679     0BC6                     _Lcd_Write_String:	
  4680                           ;psect for function _Lcd_Write_String
  4681                           
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4685                           ;Lcd_Write_String@a stored from wreg
  4686     0BC6  00F7               	movwf	Lcd_Write_String@a
  4687     0BC7                     l1873:
  4688                           
  4689                           ;LCD8bits.c: 92:     int i;;LCD8bits.c: 93:     for (i = 0; a[i] != '\0'; i++)
  4690     0BC7  01F5               	clrf	Lcd_Write_String@i
  4691     0BC8  01F6               	clrf	Lcd_Write_String@i+1
  4692     0BC9  2BDD               	goto	l1879
  4693     0BCA                     l1875:
  4694                           
  4695                           ;LCD8bits.c: 94:         Lcd_Write_Char(a[i]);
  4696     0BCA  0875               	movf	Lcd_Write_String@i,w
  4697     0BCB  0777               	addwf	Lcd_Write_String@a,w
  4698     0BCC  0084               	movwf	4
  4699     0BCD  120A  158A  2000  120A  158A  	fcall	stringdir
  4700     0BD2  120A  158A  2390  120A  158A  	fcall	_Lcd_Write_Char
  4701     0BD7                     l1877:
  4702     0BD7  3001               	movlw	1
  4703     0BD8  07F5               	addwf	Lcd_Write_String@i,f
  4704     0BD9  1803               	skipnc
  4705     0BDA  0AF6               	incf	Lcd_Write_String@i+1,f
  4706     0BDB  3000               	movlw	0
  4707     0BDC  07F6               	addwf	Lcd_Write_String@i+1,f
  4708     0BDD                     l1879:
  4709     0BDD  0875               	movf	Lcd_Write_String@i,w
  4710     0BDE  0777               	addwf	Lcd_Write_String@a,w
  4711     0BDF  0084               	movwf	4
  4712     0BE0  120A  158A  2000  120A  158A  	fcall	stringdir
  4713     0BE5  3A00               	xorlw	0
  4714     0BE6  1D03               	skipz
  4715     0BE7  2BE9               	goto	u921
  4716     0BE8  2BEA               	goto	u920
  4717     0BE9                     u921:
  4718     0BE9  2BCA               	goto	l1875
  4719     0BEA                     u920:
  4720     0BEA                     l120:
  4721     0BEA  0008               	return
  4722     0BEB                     __end_of_Lcd_Write_String:
  4723                           
  4724                           	psect	text14
  4725     0B90                     __ptext14:	
  4726 ;; *************** function _Lcd_Write_Char *****************
  4727 ;; Defined at:
  4728 ;;		line 83 in file "LCD8bits.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  a               1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  a               1    4[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         1       0       0       0       0
  4744 ;;      Temps:          1       0       0       0       0
  4745 ;;      Totals:         2       0       0       0       0
  4746 ;;Total ram usage:        2 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 2
  4749 ;; This function calls:
  4750 ;;		_Lcd_Port
  4751 ;; This function is called by:
  4752 ;;		_Lcd_Write_String
  4753 ;;		_main
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757     0B90                     _Lcd_Write_Char:	
  4758                           ;psect for function _Lcd_Write_Char
  4759                           
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4763                           ;Lcd_Write_Char@a stored from wreg
  4764     0B90  00F4               	movwf	Lcd_Write_Char@a
  4765     0B91                     l1733:
  4766                           
  4767                           ;LCD8bits.c: 84:     RE0 = 1;
  4768     0B91  1283               	bcf	3,5	;RP0=0, select bank0
  4769     0B92  1303               	bcf	3,6	;RP1=0, select bank0
  4770     0B93  1409               	bsf	9,0	;volatile
  4771     0B94                     l1735:
  4772                           
  4773                           ;LCD8bits.c: 85:     Lcd_Port(a);
  4774     0B94  0874               	movf	Lcd_Write_Char@a,w
  4775     0B95  120A  158A  24E6  120A  158A  	fcall	_Lcd_Port
  4776     0B9A                     l1737:
  4777                           
  4778                           ;LCD8bits.c: 86:     RE1 = 1;
  4779     0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  4780     0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  4781     0B9C  1489               	bsf	9,1	;volatile
  4782     0B9D                     l1739:
  4783                           
  4784                           ;LCD8bits.c: 87:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4785     0B9D  301A               	movlw	26
  4786     0B9E  00F3               	movwf	??_Lcd_Write_Char
  4787     0B9F                     u1437:
  4788     0B9F  0BF3               	decfsz	??_Lcd_Write_Char,f
  4789     0BA0  2B9F               	goto	u1437
  4790     0BA1  0000               	nop
  4791     0BA2                     l1741:
  4792                           
  4793                           ;LCD8bits.c: 88:     RE1 = 0;
  4794     0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  4795     0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  4796     0BA4  1089               	bcf	9,1	;volatile
  4797     0BA5                     l114:
  4798     0BA5  0008               	return
  4799     0BA6                     __end_of_Lcd_Write_Char:
  4800                           
  4801                           	psect	text15
  4802     0BA6                     __ptext15:	
  4803 ;; *************** function _Lcd_Set_Cursor *****************
  4804 ;; Defined at:
  4805 ;;		line 58 in file "LCD8bits.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  a               1    wreg     unsigned char 
  4808 ;;  b               1    6[COMMON] unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  a               1    7[COMMON] unsigned char 
  4811 ;;  temp            1    8[COMMON] unsigned char 
  4812 ;;  y               1    0        unsigned char 
  4813 ;;  z               1    0        unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, pclath, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         1       0       0       0       0
  4824 ;;      Locals:         2       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0
  4826 ;;      Totals:         3       0       0       0       0
  4827 ;;Total ram usage:        3 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 3
  4830 ;; This function calls:
  4831 ;;		_Lcd_Cmd
  4832 ;; This function is called by:
  4833 ;;		_main
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837     0BA6                     _Lcd_Set_Cursor:	
  4838                           ;psect for function _Lcd_Set_Cursor
  4839                           
  4840                           
  4841                           ;incstack = 0
  4842                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4843                           ;Lcd_Set_Cursor@a stored from wreg
  4844     0BA6  00F7               	movwf	Lcd_Set_Cursor@a
  4845     0BA7                     l1851:
  4846                           
  4847                           ;LCD8bits.c: 59:     char temp, z, y;;LCD8bits.c: 60:     if (a == 1) {
  4848     0BA7  0377               	decf	Lcd_Set_Cursor@a,w
  4849     0BA8  1D03               	btfss	3,2
  4850     0BA9  2BAB               	goto	u901
  4851     0BAA  2BAC               	goto	u900
  4852     0BAB                     u901:
  4853     0BAB  2BB6               	goto	l1857
  4854     0BAC                     u900:
  4855     0BAC                     l1853:
  4856                           
  4857                           ;LCD8bits.c: 61:         temp = 0x80 + b - 1;
  4858     0BAC  0876               	movf	Lcd_Set_Cursor@b,w
  4859     0BAD  3E7F               	addlw	127
  4860     0BAE  00F8               	movwf	Lcd_Set_Cursor@temp
  4861     0BAF                     l1855:
  4862                           
  4863                           ;LCD8bits.c: 62:         Lcd_Cmd(temp);
  4864     0BAF  0878               	movf	Lcd_Set_Cursor@temp,w
  4865     0BB0  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4866                           
  4867                           ;LCD8bits.c: 63:     } else if (a == 2) {
  4868     0BB5  2BC5               	goto	l108
  4869     0BB6                     l1857:
  4870     0BB6  3002               	movlw	2
  4871     0BB7  0677               	xorwf	Lcd_Set_Cursor@a,w
  4872     0BB8  1D03               	btfss	3,2
  4873     0BB9  2BBB               	goto	u911
  4874     0BBA  2BBC               	goto	u910
  4875     0BBB                     u911:
  4876     0BBB  2BC5               	goto	l108
  4877     0BBC                     u910:
  4878     0BBC                     l1859:
  4879                           
  4880                           ;LCD8bits.c: 64:         temp = 0xC0 + b - 1;
  4881     0BBC  0876               	movf	Lcd_Set_Cursor@b,w
  4882     0BBD  3EBF               	addlw	191
  4883     0BBE  00F8               	movwf	Lcd_Set_Cursor@temp
  4884     0BBF                     l1861:
  4885                           
  4886                           ;LCD8bits.c: 65:         Lcd_Cmd(temp);
  4887     0BBF  0878               	movf	Lcd_Set_Cursor@temp,w
  4888     0BC0  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4889     0BC5                     l108:
  4890     0BC5  0008               	return
  4891     0BC6                     __end_of_Lcd_Set_Cursor:
  4892                           
  4893                           	psect	text16
  4894     0D24                     __ptext16:	
  4895 ;; *************** function _Lcd_Init *****************
  4896 ;; Defined at:
  4897 ;;		line 69 in file "LCD8bits.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0
  4913 ;;      Temps:          2       0       0       0       0
  4914 ;;      Totals:         2       0       0       0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 3
  4918 ;; This function calls:
  4919 ;;		_Lcd_Cmd
  4920 ;;		_Lcd_Port
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926     0D24                     _Lcd_Init:	
  4927                           ;psect for function _Lcd_Init
  4928                           
  4929     0D24                     l1863:	
  4930                           ;incstack = 0
  4931                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4932                           
  4933                           
  4934                           ;LCD8bits.c: 70:     Lcd_Port(0x00);
  4935     0D24  3000               	movlw	0
  4936     0D25  120A  158A  24E6  120A  158A  	fcall	_Lcd_Port
  4937     0D2A                     l1865:
  4938                           
  4939                           ;LCD8bits.c: 71:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4940     0D2A  3034               	movlw	52
  4941     0D2B  00F7               	movwf	??_Lcd_Init+1
  4942     0D2C  30F1               	movlw	241
  4943     0D2D  00F6               	movwf	??_Lcd_Init
  4944     0D2E                     u1447:
  4945     0D2E  0BF6               	decfsz	??_Lcd_Init,f
  4946     0D2F  2D2E               	goto	u1447
  4947     0D30  0BF7               	decfsz	??_Lcd_Init+1,f
  4948     0D31  2D2E               	goto	u1447
  4949     0D32  2D33               	nop2
  4950     0D33                     l1867:
  4951                           
  4952                           ;LCD8bits.c: 72:     Lcd_Cmd(0x30);
  4953     0D33  3030               	movlw	48
  4954     0D34  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4955                           
  4956                           ;LCD8bits.c: 73:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4957     0D39  300D               	movlw	13
  4958     0D3A  00F7               	movwf	??_Lcd_Init+1
  4959     0D3B  30FB               	movlw	251
  4960     0D3C  00F6               	movwf	??_Lcd_Init
  4961     0D3D                     u1457:
  4962     0D3D  0BF6               	decfsz	??_Lcd_Init,f
  4963     0D3E  2D3D               	goto	u1457
  4964     0D3F  0BF7               	decfsz	??_Lcd_Init+1,f
  4965     0D40  2D3D               	goto	u1457
  4966     0D41  2D42               	nop2
  4967     0D42                     l1869:
  4968                           
  4969                           ;LCD8bits.c: 74:     Lcd_Cmd(0x30);
  4970     0D42  3030               	movlw	48
  4971     0D43  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4972     0D48                     l1871:
  4973                           
  4974                           ;LCD8bits.c: 75:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4975     0D48  301D               	movlw	29
  4976     0D49  00F7               	movwf	??_Lcd_Init+1
  4977     0D4A  3091               	movlw	145
  4978     0D4B  00F6               	movwf	??_Lcd_Init
  4979     0D4C                     u1467:
  4980     0D4C  0BF6               	decfsz	??_Lcd_Init,f
  4981     0D4D  2D4C               	goto	u1467
  4982     0D4E  0BF7               	decfsz	??_Lcd_Init+1,f
  4983     0D4F  2D4C               	goto	u1467
  4984                           
  4985                           ;LCD8bits.c: 76:     Lcd_Cmd(0x30);
  4986     0D50  3030               	movlw	48
  4987     0D51  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4988                           
  4989                           ;LCD8bits.c: 78:     Lcd_Cmd(0x38);
  4990     0D56  3038               	movlw	56
  4991     0D57  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4992                           
  4993                           ;LCD8bits.c: 79:     Lcd_Cmd(0x0C);
  4994     0D5C  300C               	movlw	12
  4995     0D5D  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  4996                           
  4997                           ;LCD8bits.c: 80:     Lcd_Cmd(0x06);
  4998     0D62  3006               	movlw	6
  4999     0D63  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  5000     0D68                     l111:
  5001     0D68  0008               	return
  5002     0D69                     __end_of_Lcd_Init:
  5003                           
  5004                           	psect	text17
  5005     0B83                     __ptext17:	
  5006 ;; *************** function _Lcd_Clear *****************
  5007 ;; Defined at:
  5008 ;;		line 53 in file "LCD8bits.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0, pclath, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; Hardware stack levels required when called: 3
  5029 ;; This function calls:
  5030 ;;		_Lcd_Cmd
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036     0B83                     _Lcd_Clear:	
  5037                           ;psect for function _Lcd_Clear
  5038                           
  5039     0B83                     l1849:	
  5040                           ;incstack = 0
  5041                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5042                           
  5043                           
  5044                           ;LCD8bits.c: 54:     Lcd_Cmd(0);
  5045     0B83  3000               	movlw	0
  5046     0B84  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  5047                           
  5048                           ;LCD8bits.c: 55:     Lcd_Cmd(1);
  5049     0B89  3001               	movlw	1
  5050     0B8A  120A  118A  27E1  120A  158A  	fcall	_Lcd_Cmd
  5051     0B8F                     l102:
  5052     0B8F  0008               	return
  5053     0B90                     __end_of_Lcd_Clear:
  5054                           
  5055                           	psect	text18
  5056     07E1                     __ptext18:	
  5057 ;; *************** function _Lcd_Cmd *****************
  5058 ;; Defined at:
  5059 ;;		line 45 in file "LCD8bits.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  a               1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  a               1    5[COMMON] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0
  5075 ;;      Temps:          2       0       0       0       0
  5076 ;;      Totals:         3       0       0       0       0
  5077 ;;Total ram usage:        3 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 2
  5080 ;; This function calls:
  5081 ;;		_Lcd_Port
  5082 ;; This function is called by:
  5083 ;;		_Lcd_Clear
  5084 ;;		_Lcd_Set_Cursor
  5085 ;;		_Lcd_Init
  5086 ;;		_Lcd_Shift_Right
  5087 ;;		_Lcd_Shift_Left
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091     07E1                     _Lcd_Cmd:	
  5092                           ;psect for function _Lcd_Cmd
  5093                           
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5097                           ;Lcd_Cmd@a stored from wreg
  5098     07E1  00F5               	movwf	Lcd_Cmd@a
  5099     07E2                     l1723:
  5100                           
  5101                           ;LCD8bits.c: 46:     RE0 = 0;
  5102     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5103     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  5104     07E4  1009               	bcf	9,0	;volatile
  5105     07E5                     l1725:
  5106                           
  5107                           ;LCD8bits.c: 47:     Lcd_Port(a);
  5108     07E5  0875               	movf	Lcd_Cmd@a,w
  5109     07E6  120A  158A  24E6  120A  118A  	fcall	_Lcd_Port
  5110     07EB                     l1727:
  5111                           
  5112                           ;LCD8bits.c: 48:     RE1 = 1;
  5113     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  5114     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  5115     07ED  1489               	bsf	9,1	;volatile
  5116     07EE                     l1729:
  5117                           
  5118                           ;LCD8bits.c: 49:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5119     07EE  300B               	movlw	11
  5120     07EF  00F4               	movwf	??_Lcd_Cmd+1
  5121     07F0  3062               	movlw	98
  5122     07F1  00F3               	movwf	??_Lcd_Cmd
  5123     07F2                     u1477:
  5124     07F2  0BF3               	decfsz	??_Lcd_Cmd,f
  5125     07F3  2FF2               	goto	u1477
  5126     07F4  0BF4               	decfsz	??_Lcd_Cmd+1,f
  5127     07F5  2FF2               	goto	u1477
  5128     07F6  0000               	nop
  5129     07F7                     l1731:
  5130                           
  5131                           ;LCD8bits.c: 50:     RE1 = 0;
  5132     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5133     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5134     07F9  1089               	bcf	9,1	;volatile
  5135     07FA                     l99:
  5136     07FA  0008               	return
  5137     07FB                     __end_of_Lcd_Cmd:
  5138                           
  5139                           	psect	text19
  5140     0CE6                     __ptext19:	
  5141 ;; *************** function _Lcd_Port *****************
  5142 ;; Defined at:
  5143 ;;		line 3 in file "LCD8bits.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  a               1    wreg     unsigned char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  a               1    2[COMMON] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         0       0       0       0       0
  5158 ;;      Locals:         1       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0
  5160 ;;      Totals:         1       0       0       0       0
  5161 ;;Total ram usage:        1 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_Lcd_Cmd
  5168 ;;		_Lcd_Init
  5169 ;;		_Lcd_Write_Char
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173     0CE6                     _Lcd_Port:	
  5174                           ;psect for function _Lcd_Port
  5175                           
  5176                           
  5177                           ;incstack = 0
  5178                           ; Regs used in _Lcd_Port: [wreg]
  5179                           ;Lcd_Port@a stored from wreg
  5180     0CE6  00F2               	movwf	Lcd_Port@a
  5181     0CE7                     l1665:
  5182                           
  5183                           ;LCD8bits.c: 4:     if (a & 1)
  5184     0CE7  1C72               	btfss	Lcd_Port@a,0
  5185     0CE8  2CEA               	goto	u711
  5186     0CE9  2CEB               	goto	u710
  5187     0CEA                     u711:
  5188     0CEA  2CEF               	goto	l80
  5189     0CEB                     u710:
  5190     0CEB                     l1667:
  5191                           
  5192                           ;LCD8bits.c: 5:         RD0 = 1;
  5193     0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  5194     0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  5195     0CED  1408               	bsf	8,0	;volatile
  5196     0CEE  2CF2               	goto	l81
  5197     0CEF                     l80:	
  5198                           ;LCD8bits.c: 6:     else
  5199                           
  5200                           
  5201                           ;LCD8bits.c: 7:         RD0 = 0;
  5202     0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  5203     0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  5204     0CF1  1008               	bcf	8,0	;volatile
  5205     0CF2                     l81:
  5206                           
  5207                           ;LCD8bits.c: 9:     if (a & 2)
  5208     0CF2  1CF2               	btfss	Lcd_Port@a,1
  5209     0CF3  2CF5               	goto	u721
  5210     0CF4  2CF6               	goto	u720
  5211     0CF5                     u721:
  5212     0CF5  2CF8               	goto	l82
  5213     0CF6                     u720:
  5214     0CF6                     l1669:
  5215                           
  5216                           ;LCD8bits.c: 10:         RD1 = 1;
  5217     0CF6  1488               	bsf	8,1	;volatile
  5218     0CF7  2CF9               	goto	l83
  5219     0CF8                     l82:	
  5220                           ;LCD8bits.c: 11:     else
  5221                           
  5222                           
  5223                           ;LCD8bits.c: 12:         RD1 = 0;
  5224     0CF8  1088               	bcf	8,1	;volatile
  5225     0CF9                     l83:
  5226                           
  5227                           ;LCD8bits.c: 14:     if (a & 4)
  5228     0CF9  1D72               	btfss	Lcd_Port@a,2
  5229     0CFA  2CFC               	goto	u731
  5230     0CFB  2CFD               	goto	u730
  5231     0CFC                     u731:
  5232     0CFC  2CFF               	goto	l84
  5233     0CFD                     u730:
  5234     0CFD                     l1671:
  5235                           
  5236                           ;LCD8bits.c: 15:         RD2 = 1;
  5237     0CFD  1508               	bsf	8,2	;volatile
  5238     0CFE  2D00               	goto	l85
  5239     0CFF                     l84:	
  5240                           ;LCD8bits.c: 16:     else
  5241                           
  5242                           
  5243                           ;LCD8bits.c: 17:         RD2 = 0;
  5244     0CFF  1108               	bcf	8,2	;volatile
  5245     0D00                     l85:
  5246                           
  5247                           ;LCD8bits.c: 19:     if (a & 8)
  5248     0D00  1DF2               	btfss	Lcd_Port@a,3
  5249     0D01  2D03               	goto	u741
  5250     0D02  2D04               	goto	u740
  5251     0D03                     u741:
  5252     0D03  2D06               	goto	l86
  5253     0D04                     u740:
  5254     0D04                     l1673:
  5255                           
  5256                           ;LCD8bits.c: 20:         RD3 = 1;
  5257     0D04  1588               	bsf	8,3	;volatile
  5258     0D05  2D07               	goto	l87
  5259     0D06                     l86:	
  5260                           ;LCD8bits.c: 21:     else
  5261                           
  5262                           
  5263                           ;LCD8bits.c: 22:         RD3 = 0;
  5264     0D06  1188               	bcf	8,3	;volatile
  5265     0D07                     l87:
  5266                           
  5267                           ;LCD8bits.c: 24:     if (a & 16)
  5268     0D07  1E72               	btfss	Lcd_Port@a,4
  5269     0D08  2D0A               	goto	u751
  5270     0D09  2D0B               	goto	u750
  5271     0D0A                     u751:
  5272     0D0A  2D0D               	goto	l88
  5273     0D0B                     u750:
  5274     0D0B                     l1675:
  5275                           
  5276                           ;LCD8bits.c: 25:         RD4 = 1;
  5277     0D0B  1608               	bsf	8,4	;volatile
  5278     0D0C  2D0E               	goto	l89
  5279     0D0D                     l88:	
  5280                           ;LCD8bits.c: 26:     else
  5281                           
  5282                           
  5283                           ;LCD8bits.c: 27:         RD4 = 0;
  5284     0D0D  1208               	bcf	8,4	;volatile
  5285     0D0E                     l89:
  5286                           
  5287                           ;LCD8bits.c: 29:     if (a & 32)
  5288     0D0E  1EF2               	btfss	Lcd_Port@a,5
  5289     0D0F  2D11               	goto	u761
  5290     0D10  2D12               	goto	u760
  5291     0D11                     u761:
  5292     0D11  2D14               	goto	l90
  5293     0D12                     u760:
  5294     0D12                     l1677:
  5295                           
  5296                           ;LCD8bits.c: 30:         RD5 = 1;
  5297     0D12  1688               	bsf	8,5	;volatile
  5298     0D13  2D15               	goto	l91
  5299     0D14                     l90:	
  5300                           ;LCD8bits.c: 31:     else
  5301                           
  5302                           
  5303                           ;LCD8bits.c: 32:         RD5 = 0;
  5304     0D14  1288               	bcf	8,5	;volatile
  5305     0D15                     l91:
  5306                           
  5307                           ;LCD8bits.c: 34:     if (a & 64)
  5308     0D15  1F72               	btfss	Lcd_Port@a,6
  5309     0D16  2D18               	goto	u771
  5310     0D17  2D19               	goto	u770
  5311     0D18                     u771:
  5312     0D18  2D1B               	goto	l92
  5313     0D19                     u770:
  5314     0D19                     l1679:
  5315                           
  5316                           ;LCD8bits.c: 35:         RD6 = 1;
  5317     0D19  1708               	bsf	8,6	;volatile
  5318     0D1A  2D1C               	goto	l93
  5319     0D1B                     l92:	
  5320                           ;LCD8bits.c: 36:     else
  5321                           
  5322                           
  5323                           ;LCD8bits.c: 37:         RD6 = 0;
  5324     0D1B  1308               	bcf	8,6	;volatile
  5325     0D1C                     l93:
  5326                           
  5327                           ;LCD8bits.c: 39:     if (a & 128)
  5328     0D1C  1FF2               	btfss	Lcd_Port@a,7
  5329     0D1D  2D1F               	goto	u781
  5330     0D1E  2D20               	goto	u780
  5331     0D1F                     u781:
  5332     0D1F  2D22               	goto	l94
  5333     0D20                     u780:
  5334     0D20                     l1681:
  5335                           
  5336                           ;LCD8bits.c: 40:         RD7 = 1;
  5337     0D20  1788               	bsf	8,7	;volatile
  5338     0D21  2D23               	goto	l96
  5339     0D22                     l94:	
  5340                           ;LCD8bits.c: 41:     else
  5341                           
  5342                           
  5343                           ;LCD8bits.c: 42:         RD7 = 0;
  5344     0D22  1388               	bcf	8,7	;volatile
  5345     0D23                     l96:
  5346     0D23  0008               	return
  5347     0D24                     __end_of_Lcd_Port:
  5348                           
  5349                           	psect	text20
  5350     0B6C                     __ptext20:	
  5351 ;; *************** function _I2C_Master_Write *****************
  5352 ;; Defined at:
  5353 ;;		line 54 in file "I2C.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  d               2    2[COMMON] unsigned int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         2       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0
  5370 ;;      Totals:         2       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 2
  5374 ;; This function calls:
  5375 ;;		_I2C_Master_Wait
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381     0B6C                     _I2C_Master_Write:	
  5382                           ;psect for function _I2C_Master_Write
  5383                           
  5384     0B6C                     l1829:	
  5385                           ;incstack = 0
  5386                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5387                           
  5388                           
  5389                           ;I2C.c: 54: void I2C_Master_Write(unsigned d);I2C.c: 55: {;I2C.c: 56:     I2C_Master_Wai
      +                          t();
  5390     0B6C  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5391     0B71                     l1831:
  5392                           
  5393                           ;I2C.c: 57:     SSPBUF = d;
  5394     0B71  0872               	movf	I2C_Master_Write@d,w
  5395     0B72  1283               	bcf	3,5	;RP0=0, select bank0
  5396     0B73  1303               	bcf	3,6	;RP1=0, select bank0
  5397     0B74  0093               	movwf	19	;volatile
  5398     0B75                     l47:
  5399     0B75  0008               	return
  5400     0B76                     __end_of_I2C_Master_Write:
  5401                           
  5402                           	psect	text21
  5403     0B63                     __ptext21:	
  5404 ;; *************** function _I2C_Master_Stop *****************
  5405 ;; Defined at:
  5406 ;;		line 44 in file "I2C.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0, pclath, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 2
  5427 ;; This function calls:
  5428 ;;		_I2C_Master_Wait
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434     0B63                     _I2C_Master_Stop:	
  5435                           ;psect for function _I2C_Master_Stop
  5436                           
  5437     0B63                     l1825:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5440                           
  5441                           
  5442                           ;I2C.c: 46:     I2C_Master_Wait();
  5443     0B63  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5444     0B68                     l1827:
  5445                           
  5446                           ;I2C.c: 47:     SSPCON2bits.PEN = 1;
  5447     0B68  1683               	bsf	3,5	;RP0=1, select bank1
  5448     0B69  1303               	bcf	3,6	;RP1=0, select bank1
  5449     0B6A  1511               	bsf	17,2	;volatile
  5450     0B6B                     l44:
  5451     0B6B  0008               	return
  5452     0B6C                     __end_of_I2C_Master_Stop:
  5453                           
  5454                           	psect	text22
  5455     0B5A                     __ptext22:	
  5456 ;; *************** function _I2C_Master_Start *****************
  5457 ;; Defined at:
  5458 ;;		line 28 in file "I2C.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0
  5475 ;;      Totals:         0       0       0       0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 2
  5479 ;; This function calls:
  5480 ;;		_I2C_Master_Wait
  5481 ;; This function is called by:
  5482 ;;		_main
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486     0B5A                     _I2C_Master_Start:	
  5487                           ;psect for function _I2C_Master_Start
  5488                           
  5489     0B5A                     l1817:	
  5490                           ;incstack = 0
  5491                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5492                           
  5493                           
  5494                           ;I2C.c: 30:     I2C_Master_Wait();
  5495     0B5A  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5496     0B5F                     l1819:
  5497                           
  5498                           ;I2C.c: 31:     SSPCON2bits.SEN = 1;
  5499     0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  5500     0B60  1303               	bcf	3,6	;RP1=0, select bank1
  5501     0B61  1411               	bsf	17,0	;volatile
  5502     0B62                     l38:
  5503     0B62  0008               	return
  5504     0B63                     __end_of_I2C_Master_Start:
  5505                           
  5506                           	psect	text23
  5507     0B51                     __ptext23:	
  5508 ;; *************** function _I2C_Master_RepeatedStart *****************
  5509 ;; Defined at:
  5510 ;;		line 36 in file "I2C.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5524 ;;      Params:         0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 2
  5531 ;; This function calls:
  5532 ;;		_I2C_Master_Wait
  5533 ;; This function is called by:
  5534 ;;		_main
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538     0B51                     _I2C_Master_RepeatedStart:	
  5539                           ;psect for function _I2C_Master_RepeatedStart
  5540                           
  5541     0B51                     l1821:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5544                           
  5545                           
  5546                           ;I2C.c: 38:     I2C_Master_Wait();
  5547     0B51  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5548     0B56                     l1823:
  5549                           
  5550                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  5551     0B56  1683               	bsf	3,5	;RP0=1, select bank1
  5552     0B57  1303               	bcf	3,6	;RP1=0, select bank1
  5553     0B58  1491               	bsf	17,1	;volatile
  5554     0B59                     l41:
  5555     0B59  0008               	return
  5556     0B5A                     __end_of_I2C_Master_RepeatedStart:
  5557                           
  5558                           	psect	text24
  5559     0C14                     __ptext24:	
  5560 ;; *************** function _I2C_Master_Read *****************
  5561 ;; Defined at:
  5562 ;;		line 63 in file "I2C.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  a               2    2[COMMON] unsigned short 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  temp            2    6[COMMON] unsigned short 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    2[COMMON] unsigned short 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         2       0       0       0       0
  5577 ;;      Locals:         2       0       0       0       0
  5578 ;;      Temps:          2       0       0       0       0
  5579 ;;      Totals:         6       0       0       0       0
  5580 ;;Total ram usage:        6 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 2
  5583 ;; This function calls:
  5584 ;;		_I2C_Master_Wait
  5585 ;; This function is called by:
  5586 ;;		_main
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590     0C14                     _I2C_Master_Read:	
  5591                           ;psect for function _I2C_Master_Read
  5592                           
  5593     0C14                     l1833:	
  5594                           ;incstack = 0
  5595                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5596                           
  5597                           
  5598                           ;I2C.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 64: {;I2C.c: 65:    
      +                           unsigned short temp;;I2C.c: 66:     I2C_Master_Wait();
  5599     0C14  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5600     0C19                     l1835:
  5601                           
  5602                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  5603     0C19  1683               	bsf	3,5	;RP0=1, select bank1
  5604     0C1A  1303               	bcf	3,6	;RP1=0, select bank1
  5605     0C1B  1591               	bsf	17,3	;volatile
  5606                           
  5607                           ;I2C.c: 68:     I2C_Master_Wait();
  5608     0C1C  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5609     0C21                     l1837:
  5610                           
  5611                           ;I2C.c: 69:     temp = SSPBUF;
  5612     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  5613     0C22  1303               	bcf	3,6	;RP1=0, select bank0
  5614     0C23  0813               	movf	19,w	;volatile
  5615     0C24  00F4               	movwf	??_I2C_Master_Read
  5616     0C25  01F5               	clrf	??_I2C_Master_Read+1
  5617     0C26  0874               	movf	??_I2C_Master_Read,w
  5618     0C27  00F6               	movwf	I2C_Master_Read@temp
  5619     0C28  0875               	movf	??_I2C_Master_Read+1,w
  5620     0C29  00F7               	movwf	I2C_Master_Read@temp+1
  5621     0C2A                     l1839:
  5622                           
  5623                           ;I2C.c: 70:     I2C_Master_Wait();
  5624     0C2A  120A  158A  2376  120A  158A  	fcall	_I2C_Master_Wait
  5625     0C2F                     l1841:
  5626                           
  5627                           ;I2C.c: 71:     if(a == 1){
  5628     0C2F  0372               	decf	I2C_Master_Read@a,w
  5629     0C30  0473               	iorwf	I2C_Master_Read@a+1,w
  5630     0C31  1D03               	btfss	3,2
  5631     0C32  2C34               	goto	u891
  5632     0C33  2C35               	goto	u890
  5633     0C34                     u891:
  5634     0C34  2C39               	goto	l50
  5635     0C35                     u890:
  5636     0C35                     l1843:
  5637                           
  5638                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 0;
  5639     0C35  1683               	bsf	3,5	;RP0=1, select bank1
  5640     0C36  1303               	bcf	3,6	;RP1=0, select bank1
  5641     0C37  1291               	bcf	17,5	;volatile
  5642                           
  5643                           ;I2C.c: 73:     }else{
  5644     0C38  2C3C               	goto	l51
  5645     0C39                     l50:
  5646                           
  5647                           ;I2C.c: 74:         SSPCON2bits.ACKDT = 1;
  5648     0C39  1683               	bsf	3,5	;RP0=1, select bank1
  5649     0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  5650     0C3B  1691               	bsf	17,5	;volatile
  5651     0C3C                     l51:	
  5652                           ;I2C.c: 75:     }
  5653                           
  5654                           
  5655                           ;I2C.c: 76:     SSPCON2bits.ACKEN = 1;
  5656     0C3C  1611               	bsf	17,4	;volatile
  5657     0C3D                     l1845:
  5658                           
  5659                           ;I2C.c: 77:     return temp;
  5660     0C3D  0877               	movf	I2C_Master_Read@temp+1,w
  5661     0C3E  00F3               	movwf	?_I2C_Master_Read+1
  5662     0C3F  0876               	movf	I2C_Master_Read@temp,w
  5663     0C40  00F2               	movwf	?_I2C_Master_Read
  5664     0C41                     l52:
  5665     0C41  0008               	return
  5666     0C42                     __end_of_I2C_Master_Read:
  5667                           
  5668                           	psect	text25
  5669     0B76                     __ptext25:	
  5670 ;; *************** function _I2C_Master_Wait *****************
  5671 ;; Defined at:
  5672 ;;		line 21 in file "I2C.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5686 ;;      Params:         0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_I2C_Master_Start
  5697 ;;		_I2C_Master_RepeatedStart
  5698 ;;		_I2C_Master_Stop
  5699 ;;		_I2C_Master_Write
  5700 ;;		_I2C_Master_Read
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704     0B76                     _I2C_Master_Wait:	
  5705                           ;psect for function _I2C_Master_Wait
  5706                           
  5707     0B76                     l1719:	
  5708                           ;incstack = 0
  5709                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5710                           
  5711     0B76                     l32:	
  5712                           ;I2C.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5713                           
  5714     0B76  1683               	bsf	3,5	;RP0=1, select bank1
  5715     0B77  1303               	bcf	3,6	;RP1=0, select bank1
  5716     0B78  1914               	btfsc	20,2	;volatile
  5717     0B79  2B7B               	goto	u871
  5718     0B7A  2B7C               	goto	u870
  5719     0B7B                     u871:
  5720     0B7B  2B76               	goto	l32
  5721     0B7C                     u870:
  5722     0B7C                     l1721:
  5723     0B7C  0811               	movf	17,w	;volatile
  5724     0B7D  391F               	andlw	31
  5725     0B7E  1D03               	btfss	3,2
  5726     0B7F  2B81               	goto	u881
  5727     0B80  2B82               	goto	u880
  5728     0B81                     u881:
  5729     0B81  2B76               	goto	l32
  5730     0B82                     u880:
  5731     0B82                     l35:
  5732     0B82  0008               	return
  5733     0B83                     __end_of_I2C_Master_Wait:
  5734                           
  5735                           	psect	text26
  5736     0BEB                     __ptext26:	
  5737 ;; *************** function _isr *****************
  5738 ;; Defined at:
  5739 ;;		line 76 in file "Dig2postlab4_Master.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      void 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5753 ;;      Params:         0       0       0       0       0
  5754 ;;      Locals:         0       0       0       0       0
  5755 ;;      Temps:          2       0       0       0       0
  5756 ;;      Totals:         2       0       0       0       0
  5757 ;;Total ram usage:        2 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		Interrupt level 1
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766     0BEB                     _isr:	
  5767                           ;psect for function _isr
  5768                           
  5769     0BEB                     i1l2153:
  5770                           
  5771                           ;Dig2postlab4_Master.c: 77:     if(INTCONbits.RBIF){
  5772     0BEB  1C0B               	btfss	11,0	;volatile
  5773     0BEC  2BEE               	goto	u125_21
  5774     0BED  2BEF               	goto	u125_20
  5775     0BEE                     u125_21:
  5776     0BEE  2C0D               	goto	i1l249
  5777     0BEF                     u125_20:
  5778     0BEF                     i1l2155:
  5779                           
  5780                           ;Dig2postlab4_Master.c: 78:         if(RB0 == 0){
  5781     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5782     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5783     0BF1  1806               	btfsc	6,0	;volatile
  5784     0BF2  2BF4               	goto	u126_21
  5785     0BF3  2BF5               	goto	u126_20
  5786     0BF4                     u126_21:
  5787     0BF4  2BF9               	goto	i1l2159
  5788     0BF5                     u126_20:
  5789     0BF5                     i1l2157:
  5790                           
  5791                           ;Dig2postlab4_Master.c: 79:             check = 1;
  5792     0BF5  3001               	movlw	1
  5793     0BF6  00AA               	movwf	_check
  5794     0BF7  3000               	movlw	0
  5795     0BF8  00AB               	movwf	_check+1
  5796     0BF9                     i1l2159:
  5797                           
  5798                           ;Dig2postlab4_Master.c: 81:         if(RB1 == 0){
  5799     0BF9  1886               	btfsc	6,1	;volatile
  5800     0BFA  2BFC               	goto	u127_21
  5801     0BFB  2BFD               	goto	u127_20
  5802     0BFC                     u127_21:
  5803     0BFC  2C0C               	goto	i1l2167
  5804     0BFD                     u127_20:
  5805     0BFD                     i1l2161:
  5806                           
  5807                           ;Dig2postlab4_Master.c: 82:             contEdit++;
  5808     0BFD  3001               	movlw	1
  5809     0BFE  07A8               	addwf	_contEdit,f
  5810     0BFF  1803               	skipnc
  5811     0C00  0AA9               	incf	_contEdit+1,f
  5812     0C01  3000               	movlw	0
  5813     0C02  07A9               	addwf	_contEdit+1,f
  5814     0C03                     i1l2163:
  5815                           
  5816                           ;Dig2postlab4_Master.c: 83:             if(contEdit == 7){
  5817     0C03  3007               	movlw	7
  5818     0C04  0628               	xorwf	_contEdit,w
  5819     0C05  0429               	iorwf	_contEdit+1,w
  5820     0C06  1D03               	btfss	3,2
  5821     0C07  2C09               	goto	u128_21
  5822     0C08  2C0A               	goto	u128_20
  5823     0C09                     u128_21:
  5824     0C09  2C0C               	goto	i1l2167
  5825     0C0A                     u128_20:
  5826     0C0A                     i1l2165:
  5827                           
  5828                           ;Dig2postlab4_Master.c: 84:                 contEdit = 0;
  5829     0C0A  01A8               	clrf	_contEdit
  5830     0C0B  01A9               	clrf	_contEdit+1
  5831     0C0C                     i1l2167:
  5832                           
  5833                           ;Dig2postlab4_Master.c: 87:         INTCONbits.RBIF = 0;
  5834     0C0C  100B               	bcf	11,0	;volatile
  5835     0C0D                     i1l249:
  5836     0C0D  0871               	movf	??_isr+1,w
  5837     0C0E  008A               	movwf	10
  5838     0C0F  0E70               	swapf	??_isr,w
  5839     0C10  0083               	movwf	3
  5840     0C11  0EFE               	swapf	btemp,f
  5841     0C12  0E7E               	swapf	btemp,w
  5842     0C13  0009               	retfie
  5843     0C14                     __end_of_isr:
  5844     007E                     btemp	set	126	;btemp
  5845     007E                     wtemp0	set	126
  5846                           
  5847                           	psect	intentry
  5848     0004                     __pintentry:	
  5849                           ;incstack = 0
  5850                           ; Regs used in _isr: [wreg+status,2+status,0]
  5851                           
  5852     0004                     interrupt_function:
  5853     007E                     saved_w	set	btemp
  5854     0004  00FE               	movwf	btemp
  5855     0005  0E03               	swapf	3,w
  5856     0006  00F0               	movwf	??_isr
  5857     0007  080A               	movf	10,w
  5858     0008  00F1               	movwf	??_isr+1
  5859     0009  120A  158A  2BEB   	ljmp	_isr
  5860                           
  5861                           	psect	idloc
  5862                           
  5863                           ;Config register IDLOC0 @ 0x2000
  5864                           ;	unspecified, using default values
  5865     2000                     	org	8192
  5866     2000  3FFF               	dw	16383
  5867                           
  5868                           ;Config register IDLOC1 @ 0x2001
  5869                           ;	unspecified, using default values
  5870     2001                     	org	8193
  5871     2001  3FFF               	dw	16383
  5872                           
  5873                           ;Config register IDLOC2 @ 0x2002
  5874                           ;	unspecified, using default values
  5875     2002                     	org	8194
  5876     2002  3FFF               	dw	16383
  5877                           
  5878                           ;Config register IDLOC3 @ 0x2003
  5879                           ;	unspecified, using default values
  5880     2003                     	org	8195
  5881     2003  3FFF               	dw	16383
  5882                           
  5883                           	psect	config
  5884                           
  5885                           ;Config register CONFIG1 @ 0x2007
  5886                           ;	Oscillator Selection bits
  5887                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5888                           ;	Watchdog Timer Enable bit
  5889                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5890                           ;	Power-up Timer Enable bit
  5891                           ;	PWRTE = OFF, PWRT disabled
  5892                           ;	RE3/MCLR pin function select bit
  5893                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5894                           ;	Code Protection bit
  5895                           ;	CP = OFF, Program memory code protection is disabled
  5896                           ;	Data Code Protection bit
  5897                           ;	CPD = OFF, Data memory code protection is disabled
  5898                           ;	Brown Out Reset Selection bits
  5899                           ;	BOREN = OFF, BOR disabled
  5900                           ;	Internal External Switchover bit
  5901                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5902                           ;	Fail-Safe Clock Monitor Enabled bit
  5903                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5904                           ;	Low Voltage Programming Enable bit
  5905                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5906                           ;	In-Circuit Debugger Mode bit
  5907                           ;	DEBUG = 0x1, unprogramme  5908     2007                     	org	8199
  5909     2007  20D4               	dw	8404
  5910                           
  5911                           ;Config register CONFIG2 @ 0x2008
  5912                           ;	Brown-out Reset Selection bit
  5913                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5914                           ;	Flash Program Memory Self Write Enable bits
  5915                           ;	WRT = OFF, Write protection off
  5916     2008                     	org	8200
  5917     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     17      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_increDay
    _main->_increHour
    _main->_increMonth
    _main->_increSecMin
    _main->_increYear
    _I2C_Master_Init->___lldiv
    ___awdiv->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11691
                                             13 BANK0      4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _NumtoChar
                            ___awdiv
                            ___awmod
                           _increDay
                          _increHour
                         _increMonth
                        _increSecMin
                          _increYear
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     586
                    _I2C_Master_Init
                          _ioc_inint
 ---------------------------------------------------------------------------------
 (2) _ioc_inint                                            2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _increYear                                           10     8      2     261
                                              2 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _increSecMin                                         10     8      2     337
                                              2 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _increMonth                                          10     8      2     284
                                              2 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _increHour                                           10     8      2     284
                                              2 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _increDay                                            10     8      2     284
                                              2 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _NumtoChar                                            2     0      2    1162
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     321
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     636
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    4354
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2    1033
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _NumtoChar
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _increDay
   _increHour
   _increMonth
   _increSecMin
   _increYear
   _setup
     _I2C_Master_Init
       ___lldiv
     _ioc_inint

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 10 00:27:04 2023

                               pc 0002                                l32 0B76                                l41 0B59  
                              l50 0C39                                l35 0B82                                l51 0C3C  
                              l52 0C41                                l44 0B6B                                l29 0CAA  
                              l38 0B62                                l47 0B75                                l80 0CEF  
                              l81 0CF2                                l90 0D14                                l82 0CF8  
                              l91 0D15                                l83 0CF9                                l92 0D1B  
                              l84 0CFF                                l93 0D1C                                l85 0D00  
                              l94 0D22                                l86 0D06                                l87 0D07  
                              l96 0D23                                l88 0D0D                                l89 0D0E  
                              l99 07FA                      ___awdiv@sign 0055                                fsr 0004  
                             l102 0B8F                               l111 0D68                               l120 0BEA  
                             l114 0BA5                               l108 0BC5                               l301 0DA3  
                             l302 0DC0                               l320 0F34                               l314 0F97  
                             l308 0ED2                               l325 0DFB                               l326 0E18  
                             l601 0E71                               l281 0C72                               l349 0777  
                             l286 0CE5                               l471 0FFF                               l588 07E0  
                             _GIE 005F                               _RB0 0030                               _RB1 0031  
                             _RD0 0040                               _RD1 0041                               _RD2 0042  
                             _RE0 0048                               _RD3 0043                               _RE1 0049  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u710 0CEB                               u711 0CEA  
                             u720 0CF6                               u721 0CF5                               u730 0CFD  
                             u810 0FBE                               u731 0CFC                               u811 0FBD  
                             u740 0D04                               u900 0BAC                               u741 0D03  
                             u901 0BAB                               u805 0FAF                               u750 0D0B  
                             u910 0BBC                               u830 0FD9                               u751 0D0A  
                             u911 0BBB                               u831 0FD8                               u760 0D12  
                             u920 0BEA                               u761 0D11                               u921 0BE9  
                             u825 0FC0                               u770 0D19                               u930 0D8B  
                             u850 0FF7                               u771 0D18                               u931 0D8A  
                             u851 0FF6                               u835 0FD5                               u780 0D20  
                             u940 0D9A                               u860 0C8A                               u781 0D1F  
                             u941 0D99                               u845 0FE9                               u870 0B7C  
                             u950 0E94                               u790 0FAA                               u871 0B7B  
                             u951 0E93                               u791 0FA9                               u880 0B82  
                             u960 0EAA                               u881 0B81                               u961 0EA9  
                             u865 0C85                               u890 0C35                               u970 0EB1  
                             u891 0C34                               u971 0EB0                               u980 0F57  
                             u981 0F56                               u990 0F6D                               u991 0F6C  
                             _day 0048                               _isr 0BEB                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0078                              l2001 0DD4  
                            l2011 0DF2                              l2003 0DD4                              l2101 07CC  
                            l2005 0DE3                              l2013 0DF5                              l2031 0CB2  
                            l2023 0CAE                              l2103 07D2                              l2111 0E19  
                            l2007 0DE5                              l2017 0CAB                              l2105 07D7  
                            l2121 0E29                              l2113 0E1A                              l2009 0DEB  
                            l2051 0CBC                              l2043 0CB8                              l2035 0CB4  
                            l2027 0CB0                              l2019 0CAC                              l2107 07DC  
                            l2131 0E42                              l2123 0E2E                              l2115 0E1E  
                            l2203 027C                              l2211 02F3                              l2061 0CC0  
                            l2133 0E46                              l2125 0E34                              l2141 0E63  
                            l2117 0E23                              l2301 06C3                              l2221 0341  
                            l2205 0282                              l2213 030E                              l2055 0CBE  
                            l2047 0CBA                              l2039 0CB6                              l2071 077F  
                            l2143 0E68                              l2135 0E50                              l2127 0E37  
                            l2119 0E25                              l2303 06D9                              l2231 04C2  
                            l2223 034F                              l2215 0329                              l2081 0793  
                            l2073 0784                              l2145 0E6D                              l2137 0E56  
                            l2129 0E3E                              l2305 06E1                              l2241 04F5  
                            l2233 04CF                              l2225 0354                              l2217 0333  
                            l2091 07A9                              l2083 0795                              l2075 0786  
                            l2067 0778                              l2139 0E5D                              l2307 06E7  
                            l2251 0589                              l2243 04FB                              l2235 04D5  
                            l2227 04AD                              l2219 0338                              l2171 0021  
                            l2093 07AD                              l2085 079B                              l2077 078A  
                            l2069 077B                              l1701 0FF1                              l2309 06F7  
                            l2261 05B6                              l2253 058F                              l2245 0508  
                            l2237 04E2                              l2229 04BC                              l2181 00A6  
                            l2173 0027                              l2095 07BE                              l2087 079E  
                            l2079 078F                              l1703 0FF7                              l1711 0C7A  
                            l2271 0601                              l2263 05CC                              l2255 0597  
                            l2247 050E                              l2239 04E8                              l2191 018E  
                            l2175 002D                              l1721 0B7C                              l2097 07C4  
                            l2089 07A5                              l1713 0CA7                              l1801 074F  
                            l2281 0648                              l2273 060A                              l2265 05D5  
                            l2257 05A0                              l2249 051B                              l2193 0194  
                            l2185 0117                              l2177 009B                              l2169 001C  
                            l1731 07F7                              l1723 07E2                              l2099 07C5  
                            l1715 0CA8                              l1707 0C73                              l1803 0754  
                            l1811 0758                              l2291 067F                              l2283 0658  
                            l2275 0610                              l2267 05DB                              l2259 05A6  
                            l2187 011D                              l2179 00A0                              l1821 0B51  
                            l1725 07E5                              l1741 0BA2                              l1733 0B91  
                            l1901 0D93                              l1717 0CA9                              l1709 0C77  
                            l1805 0755                              l2293 068F                              l2285 0668  
                            l2277 0620                              l2269 05EB                              l2197 0205  
                            l1719 0B76                              l1823 0B56                              l1831 0B71  
                            l1671 0CFD                              l1727 07EB                              l1735 0B94  
                            l1911 0E7F                              l1903 0D9A                              l1807 0756  
                            l1751 0717                              l1743 070B                              l2295 06A5  
                            l2287 0670                              l2279 0638                              l2375 02FA  
                            l2199 020B                              l1841 0C2F                              l1833 0C14  
                            l1817 0B5A                              l1825 0B63                              l1681 0D20  
                            l1673 0D04                              l1665 0CE7                              l1729 07EE  
                            l1737 0B9A                              l1921 0E9D                              l1913 0E85  
                            l1905 0D9D                              l2377 075D                              l1761 0722  
                            l1753 0719                              l1745 0710                              l2297 06AD  
                            l2289 0679                              l1843 0C35                              l1835 0C19  
                            l1819 0B5F                              l1827 0B68                              l1675 0D0B  
                            l1667 0CEB                              l1851 0BA7                              l1739 0B9D  
                            l2379 0CC5                              l1931 0EC8                              l1923 0EA3  
                            l1915 0E85                              l1691 0FBE                              l1683 0F98  
                            l1771 0730                              l1763 0727                              l1755 071E  
                            l1747 0715                              l2299 06B3                              l1845 0C3D  
                            l1837 0C21                              l1829 0B6C                              l1677 0D12  
                            l1669 0CF6                              l1861 0BBF                              l1853 0BAC  
                            l1941 0F48                              l1933 0ECE                              l1925 0EAA  
                            l1917 0E94                              l1909 0E72                              l1693 0FC7  
                            l1685 0FAA                              l1781 073A                              l1773 0731  
                            l1765 0728                              l1757 071F                              l1749 0716  
                            l1839 0C2A                              l1679 0D19                              l1871 0D48  
                            l1863 0D24                              l1855 0BAF                              l1951 0F66  
                            l1943 0F48                              l1927 0EB1                              l1919 0E96  
                            l1695 0FD9                              l1687 0FAD                              l1791 0744  
                            l1783 073B                              l1775 0732                              l1767 0729  
                            l1759 0720                              l1849 0B83                              l1865 0D2A  
                            l1857 0BB6                              l1873 0BC7                              l1961 0F8D  
                            l1953 0F6D                              l1945 0F57                              l1937 0F35  
                            l1929 0EB5                              l1697 0FE7                              l1689 0FBA  
                            l1793 0746                              l1785 073D                              l1777 0734  
                            l1769 072B                              l1881 0C42                              l1867 0D33  
                            l1859 0BBC                              l1875 0BCA                              l1963 0F93  
                            l1955 0F74                              l1947 0F59                              l1939 0F42  
                            l1971 0EE6                              l1891 0D76                              l1699 0FE8  
                            l1795 074B                              l1787 0742                              l1779 0739  
                            l1883 0C52                              l1869 0D42                              l1877 0BD7  
                            l1957 0F78                              l1949 0F60                              l1981 0F04  
                            l1973 0EE6                              l1893 0D7C                              l1797 074C  
                            l1789 0743                              l1885 0C5A                              l1879 0BDD  
                            l1959 0F7A                              l1991 0F2A                              l1983 0F0A  
                            l1975 0EF5                              l1967 0ED3                              l1895 0D7C  
                            l1799 074D                              l1887 0C63                              l1993 0F30  
                            l1985 0F11                              l1977 0EF7                              l1969 0EE0  
                            l1897 0D8B                              l1889 0D69                              l1987 0F15  
                            l1979 0EFE                              l1899 0D8D                              l1989 0F17  
                            l1997 0DC1                              l1999 0DCE                              ?_isr 0070  
                            STR_1 0806                              u1000 0F74                              u1001 0F73  
                            u1010 0EF5                              u1011 0EF4                              u1100 07AD  
                            u1020 0F0A                              u1101 07AC                              u1021 0F09  
                            u1030 0F11                              u1031 0F10                              u1120 07BE  
                            u1200 0E46                              u1040 0DE3                              u1121 07BD  
                            u1201 0E45                              u1041 0DE2                              u1210 0E50  
                            u1050 0DF2                              u1115 07AE                              u1211 0E4F  
                            u1051 0DF1                              u1140 07D2                              u1060 077F  
                            u1300 00A6                              u1141 07D1                              u1125 07BA  
                            u1061 077E                              u1301 00A5                              u1150 07D7  
                            u1070 078A                              u1230 0E63                              u1310 011D  
                            u1151 07D6                              u1135 07C6                              u1071 0789  
                            u1231 0E62                              u1215 0E4C                              u1311 011C  
                            u1080 079B                              u1240 0E68                              u1160 0E1E  
                            u1400 06E1                              u1320 0194                              u1081 079A  
                            u1241 0E67                              u1225 0E57                              u1161 0E1D  
                            u1401 06E0                              u1321 0193                              u1170 0E29  
                            u1330 020B                              u1171 0E28                              u1331 020A  
                            u1180 0E34                              u1340 0282                              u1181 0E33  
                            u1341 0281                              u1350 05A0                              u1095 079F  
                            u1351 059F                              u1360 05D5                              u1361 05D4  
                            u1417 032F                              u1370 060A                              u1290 002D  
                            u1195 0E38                              u1371 0609                              u1427 035A  
                            u1291 002C                              u1380 0679                              u1437 0B9F  
                            u1381 0678                              u1390 06AD                              u1447 0D2E  
                            u1391 06AC                              u1457 0D3D                              u1467 0D4C  
                            u1477 07F2                              _PEIE 005E                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 0B5A                              _main 001C                      ?_increSecMin 0072  
                            _year 0044                              btemp 007E                              start 000C  
              ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 07FB                             ??_isr 0070  
                ?_I2C_Master_Init 0055                  ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___awdiv 07E1  
                 __end_of___awmod 0E72                             _ANSEL 0188                   __end_of___lldiv 1000  
                 ___awdiv@divisor 0050                             i1l249 0C0D                   ___awdiv@counter 0054  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _PORTE 0009                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _TRISE 0089  
                           _SSPIF 0063                             _check 002A                             _hours 004A  
                           _month 0046                             _setup 0C42                             pclath 000A  
                           status 0003                             wtemp0 007E                       increDay@dec 0078  
                     increDay@val 0076                       increDay@uni 007A                  __end_of_Lcd_Init 0D69  
                __end_of_Lcd_Port 0D24                   __initialization 000F                    increSecMin@dec 007A  
                  increSecMin@val 0076                    increSecMin@uni 0078                      __end_of_main 070B  
                     increMonth@b 0072                            ??_main 005D                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074  
                ___awdiv@dividend 0052                            ?_setup 0070                            _ANSELH 0189  
                          i1l2161 0BFD                            i1l2153 0BEB                            i1l2163 0C03  
                          i1l2155 0BEF                            i1l2165 0C0A                            i1l2157 0BF5  
                          i1l2167 0C0C                            i1l2159 0BF9                            u125_20 0BEF  
                          u125_21 0BEE                            u126_20 0BF5                            u126_21 0BF4  
                          u127_20 0BFD                            u127_21 0BFC                            u128_20 0C0A  
                          u128_21 0C09                         ??_Lcd_Cmd 0073                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 0B51                            _decDay 0036  
                          _decPot 0022                            _cenPot 0024                         ??___awdiv 0079  
                       ??___awmod 0076                  __end_of_increDay 0F98                         ??___lldiv 007A  
                ___awdiv@quotient 0056                   ___awmod@divisor 0072                            _uniDay 0034  
                          _uniPot 0020                   ___awmod@counter 0077                        NumtoChar@a 0072  
                          saved_w 007E                   Lcd_Set_Cursor@a 0077                   Lcd_Set_Cursor@b 0076  
                    ioc_inint@pin 0072           __end_of__initialization 0018                 __end_of_Lcd_Clear 0B90  
                  __pcstackCOMMON 0070                     __end_of_setup 0C73                      increSecMin@b 0072  
                    increHour@dec 0078                      increHour@val 0076                      increHour@uni 007A  
                      _decMinutes 003E                        _decSeconds 0042                    _Lcd_Set_Cursor 0BA6  
                  _OPTION_REGbits 0081                      increYear@dec 007A                      increYear@val 0076  
                    increYear@uni 0078                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 007B                        __pbssBANK0 0020                 __end_of_NumtoChar 0CE6  
                      __pmaintext 001C                        __pintentry 0004            __end_of_Lcd_Set_Cursor 0BC6  
                      ??_Lcd_Init 0076                        ??_Lcd_Port 0072                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800                         ?_increDay 0072  
                  _Lcd_Write_Char 0B90                           _Lcd_Cmd 07E1                        _increMonth 0ED3  
                         ___awdiv 0778                           ___awmod 0E19                           ___lldiv 0F98  
                         _decYear 002E                 __end_of_ioc_inint 0778                   ?_Lcd_Set_Cursor 0076  
               __end_of_increHour 0ED3                 __end_of_increYear 0E19                           __ptext1 0C42  
                         __ptext2 070B                           __ptext3 0C73                           __ptext4 0F98  
                         __ptext5 0DC1                           __ptext6 0D69                           __ptext7 0ED3  
                         __ptext8 0E72                           __ptext9 0F35                  ___awmod@dividend 0074  
                         _minutes 004C                           _seconds 004E                           _uniYear 002C  
                         clrloop0 0B4A            __end_of_Lcd_Write_Char 0BA6              end_of_initialization 0018  
      ??_I2C_Master_RepeatedStart 0072                        ??_increDay 0074                   ___lldiv@divisor 0072  
                 ___lldiv@counter 0054                  I2C_Master_Init@c 0055                  I2C_Master_Read@a 0072  
                       Lcd_Port@a 0072                        _uniMinutes 003C                        _uniSeconds 0040  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077  
               Lcd_Write_String@i 0075                       ?_increMonth 0072                         _Lcd_Clear 0B83  
                _Lcd_Write_String 0BC6               start_initialization 000F                       __end_of_isr 0C14  
                      increHour@b 0072                        increYear@b 0072                 ??_I2C_Master_Init 0059  
               ??_I2C_Master_Read 0074                     ??_increSecMin 0074                 ??_I2C_Master_Wait 0072  
               ??_I2C_Master_Stop 0072                     increMonth@dec 0078                     increMonth@val 0076  
                   increMonth@uni 007A                        ?_Lcd_Clear 0070                         _NumtoChar 0CAB  
                 Lcd_Write_Char@a 0074                         ___latbits 0002                     __pcstackBANK0 0050  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0B5A                  _I2C_Master_Write 0B6C  
                       _main$1055 005F                  ??_Lcd_Set_Cursor 0077               __end_of_increSecMin 0DC1  
                        ?___awdiv 0050                          ?___awmod 0072                          ?___lldiv 0072  
                      ?_NumtoChar 0072                         __pstrings 0800                         _ioc_inint 070B  
                       _increHour 0E72                         _increYear 0DC1                 interrupt_function 0004  
                        _IOCBbits 0096                         clear_ram0 0B49                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076                       __stringbase 0805                          _WPUBbits 0095  
                      ?_ioc_inint 0072                  ??_Lcd_Write_Char 0073                        ?_increHour 0072  
                      ?_increYear 0072                          _Lcd_Init 0D24                          _Lcd_Port 0CE6  
             I2C_Master_Read@temp 0076                         increDay@b 0072          __end_of_Lcd_Write_String 0BEB  
                     _increSecMin 0D69                      ??_increMonth 0074                       ??_NumtoChar 0074  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0806                          _decHours 003A  
                        _decMonth 0032                   _I2C_Master_Init 0C73                   _I2C_Master_Read 0C14  
                 _I2C_Master_Wait 0B76                   _I2C_Master_Stop 0B63                __end_of_increMonth 0F35  
                        __ptext10 0E19                          __ptext11 0778                          __ptext20 0B6C  
                        __ptext12 0CAB                          __ptext21 0B63                          __ptext13 0BC6  
                        __ptext22 0B5A                          __ptext14 0B90                          __ptext23 0B51  
                        __ptext15 0BA6                          __ptext24 0C14                          __ptext16 0D24  
                        __ptext25 0B76                          __ptext17 0B83                          __ptext26 0BEB  
                        __ptext18 07E1                          __ptext19 0CE6                          _contEdit 0028  
                        _increDay 0F35                          _potValue 0026                          _uniHours 0038  
                        _uniMonth 0030          __end_of_I2C_Master_Start 0B63                       ??_ioc_inint 0074  
        __end_of_I2C_Master_Write 0B76                        _INTCONbits 000B                       ??_increHour 0074  
                     ??_increYear 0074                          intlevel1 0000                  ___lldiv@dividend 0076  
                       stringcode 0800           __end_of_I2C_Master_Init 0CAB           __end_of_I2C_Master_Read 0C42  
         __end_of_I2C_Master_Wait 0B83           __end_of_I2C_Master_Stop 0B6C                Lcd_Set_Cursor@temp 0078  
                ___lldiv@quotient 0050                 I2C_Master_Write@d 0072                          stringdir 0800  
                        stringtab 0800                       _SSPCON2bits 0091  
